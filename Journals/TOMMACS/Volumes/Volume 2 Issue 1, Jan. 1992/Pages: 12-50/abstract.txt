We analyze distributed event-driven computation on message-passing parallel computing systems. Synchronization is the mechanism that ensures that causality in the ordering of stochastically generated events for execution during the computation is maintained. We characterize distributed event-driven computation into weakly coupled (weak interactions) and strongly coupled (strong interactions) distributed systems and propose and analyze a number of new algorithms for efficient synchronization. The analytical results for steady state performance are complemented with detailed simulations of the transient performance. We show that synchronization enforced separately from computation results in an efficient implementation. Effects of the memory hierarchy and communication delays are also incorporated.