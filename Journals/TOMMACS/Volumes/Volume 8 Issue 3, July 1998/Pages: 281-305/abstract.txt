In this article, we present semantic translations for the actions of &mgr;Demos, a proocess-based, discrete event simulation language. Our formal translation schema permits the automatic construction of a process algebraic representatioon of the underlying simulation model which can then be checked for freedom from deadlock and livelock, as well as system-specific safety and liveness properties. As simulation methodologies are increasingly being used to design and implement complex systems of interaction objects, the ability to perform such verifications in of increasing methodological importance. We also present a normal form for the syntactic construction of &mgr;Demos programs that allows for the direct comparison of such programs (two programs with the same normal form must  execute in identical fashion), reduces model proof obligations by minimizing the number of language constructs, and permits an implementer to concentrate on the basic features of the language (since any program implementation that efficiently evaluates normal forms will be an efficient evaluator for the complete language).