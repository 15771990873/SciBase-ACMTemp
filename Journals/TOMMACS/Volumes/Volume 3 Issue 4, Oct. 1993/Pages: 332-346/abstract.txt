Most conventional discrete-event simulation software assumes a simple progression of entities through queues and activities. Such software cannot cope easily with modeling systems where entities can be present in more than one queue, can be involved in more than one activity (i.e., scheduled for more than one event), or can be interrupted while queuing or taking part in an activity in order to join another queue or take part in a different activity. Low-level data structures to address these problems have been implemented in Pascal by extending an existing suite of Pascal procedures, call Pascal_SIM. The problems and their solutions are discussed in the context of machine breakdown in a production system. Comparisons between the use of the new structures and the existing ones showed  some gain in computational efficiency and considerable improvement in ease of modeling. The generality of the data structure is considered.