This article addresses the consensus problem in asynchronous systems prone to process crashes, where additionally the processes are anonymous (they cannot be distinguished one from the other: they have no name and execute the same code). To circumvent the three computational adversaries (asynchrony, failures, and anonymity) each process is provided with a failure detector of a class denotedψ, that gives it an upper bound on the number of processes that are currently alive (in a nonanonymous system, the classesψandP---the class of perfect failure detectors---are equivalent).The article first presents a simpleψ-based consensus algorithm where the processes decide in 2t+ 1 asynchronous rounds (wheretis an upper bound on the number of faulty processes). It then shows one of its main results, namely 2t+ 1 is a lower bound for consensus in the anonymous systems equipped withψ. The second contribution addresses early-decision. The article presents and proves correct an early-deciding algorithm where the processes decide in min(2f+ 2, 2t+ 1) asynchronous rounds (wherefis the actual number of process failures). This leads us to think that anonymity doubles the cost (with respect to synchronous systems) and it is conjectured that min(2f+ 2, 2t+ 1) is the corresponding lower bound.The article finally considers thek-set agreement problem in anonymous systems. It first shows that the previousψ-based consensus algorithm solves thek-set agreement problem inRt= 2⌊t k⌋ + 1 asynchronous rounds. Then, considering a family of failure detector classes &lcub;ψ&ell;&rcub;0 ≤&ell;<kthat generalizes the classψ(=ψ0), the article presents an algorithm that solves thek-set agreement inRt,&ell;= 2 ⌊t k − &ell;⌋ + 1 asynchronous rounds. This last formula relates the cost (Rt,&ell;) the coordination degree of the problem (k), the maximum number of failures (t), and the the strength (&ell;) of the underlying failure detector. Finally the article concludes by presenting problems that remain open.