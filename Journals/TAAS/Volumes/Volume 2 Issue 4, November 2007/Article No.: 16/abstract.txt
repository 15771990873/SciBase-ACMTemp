Many classes of distributed applications, including e-business, e-government, and ambient intelligence, consist of networking infrastructures, where the nodes (peers)—be they software components, human actors or organizational units—cooperate with each other to achieve shared goals. The multi-agent system metaphor fits very well such settings because it is founded on intentional and social concepts and mechanisms. Not surprisingly, many agent-oriented software development methods have been proposed, including GAIA, PASSI, andTropos. This paper extends theTroposmethodology, enhancing its ability to support high variability design through the explicit modelling of alternatives, it adopts an extended notion of agent capability and proposes a refinedTroposdesign process. The paper also presents an implemented software development environment forTropos, founded on the Model-Driven Architecture (MDA) framework and standards. The extendedTroposdevelopment process is illustrated through a case study involving an e-commerce application.