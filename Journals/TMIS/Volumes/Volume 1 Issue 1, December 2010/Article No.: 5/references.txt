Tarek K. Abdel-Hamid, The Dynamics of Software Project Staffing: A System Dynamics Based Simulation Approach, IEEE Transactions on Software Engineering, v.15 n.2, p.109-119, February 1989[doi>10.1109/32.21738]
Tarek K. Abdel-Hamid, Investigating the Cost/Schedule Trade-Off in Software Development, IEEE Software, v.7 n.1, p.97-105, January 1990[doi>10.1109/52.43055]
Tarek K. Abdel-Hamid, Adapting, Correcting, and Perfecting Software Estimates: A Maintenance Metaphor, Computer, v.26 n.3, p.20-29, March 1993[doi>10.1109/2.204681]
Abdel-Hamid, T. K. 1993b. Modeling the dynamics of software reuse: An integrating system dynamics perspective. In Proceedings of the 6<sup>th</sup> Workshop on Institutionalizing Software Reuse.
Abdel-Hamid, T. K. and Leidy, F. H. 1991. An expert simulator for allocating the quality assurance effort in software development. Simul. 56, 233--240.
Tarek K. Abdel-Hamid , Stuart E. Madnick, The dynamics of software project scheduling, Communications of the ACM, v.26 n.5, p.340-346, May 1983[doi>10.1145/69586.358135]
Tarek Abdel-Hamid , Stuart E. Madnick, Software project dynamics: an integrated approach, Prentice-Hall, Inc., Upper Saddle River, NJ, 1991
Abdel-Hamid, T. K., Sengupta, K., and Hardebeck, M. J. 1994. The effect of reward structures on allocating shared staff resources among interdependent software projects: An experimental investigation. IEEE Trans. Engin. Manag. 41, 115--125.
Tarek K. Abdel-Hamid , Kishore Sengupta , Daniel Ronan, Software Project Control: An Experimental Investigation of Judgment with Fallible Information, IEEE Transactions on Software Engineering, v.19 n.6, p.603-612, June 1993[doi>10.1109/32.232025]
Mohammad Alshayeb , Wei Li, An empirical study of system design instability metric and design evolution in an agile software process, Journal of Systems and Software, v.74 n.3, p.269-274, February 2005[doi>10.1016/j.jss.2004.02.002]
Arnold, R. S. 1986. An introduction to software restructuring. In Tutorial on Software Restructuring, R. S. Arnold Ed., IEEE Computer Society Press, Los Alamitos, CA.
Barlas, Y. 1989. Multiple test for validation of system dynamics type of simulation models. Euro. J. Oper. Res. 42, 59--87.
Basili, V. R. and Weiss, D. M. 1984. A methodology for collecting valid software engineering data. IEEE Trans. Softw. Engin. 10, 728--737.
Beck, K. 1994. Simple smalltalk testing: With patterns. Smalltalk Rep. 4.
Kent Beck, Extreme programming explained: embrace change, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Beck, Test Driven Development: By Example, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2002
Beck, K. and Gamma, E. 1998. Test infected: Programmers love writing tests. Java Rep. 3, 37--50.
Berry, D. M. 2002. The inevitable pain of software development, including of extreme programming, caused by requirements volatility. In Proceedings of the International Workshop On Time-Constrained Requirements.
Barry W. Boehm, Software Engineering Economics, Prentice Hall PTR, Upper Saddle River, NJ, 1981
Barry Boehm, Get Ready for Agile Methods, with Care, Computer, v.35 n.1, p.64-69, January 2002[doi>10.1109/2.976920]
Boehm , Richard Turner, Balancing Agility and Discipline: A Guide for the Perplexed, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2003
Cangussu, J. W. 2004. A software test process stochastic control model based on cmm characterization. Softw. Process. Improv. Pract. 9, 55--66.
Cao, L., Mohan, K., Xu, P., and Ramesh, B. 2009. A framework for adapting agile development methodologies. Euro. J. Inform. Syst. 18, 332--343.
Choi, S. J. and Scacchi, W. 2001. Modeling and simulating software acquisition process architectures. J. Syst. Softw. 59, 343--354.
Ward Cunningham, The WyCash portfolio management system, Addendum to the proceedings on Object-oriented programming systems, languages, and applications (Addendum), p.29-30, October 18-22, 1992, Vancouver, British Columbia, Canada[doi>10.1145/157709.157715]
Bill Curtis , Herb Krasner , Neil Iscoe, A field study of the software design process for large systems, Communications of the ACM, v.31 n.11, p.1268-1287, Nov. 1988[doi>10.1145/50087.50089]
Amitava Dutta , Rahul Roy, Offshore Outsourcing: A Dynamic Causal Model of Counteracting Forces, Journal of Management Information Systems, v.22 n.2, p.15-35, Number 2/Fall 2005
Dutta, A. and Roy, R. 2008. Dynamics of organizational information security. Syst. Dynam. Rev. 24, 349--375.
Amr Elssamadisy , Gregory Schalliol, Recognizing and responding to "bad smells" in extreme programming, Proceedings of the 24th International Conference on Software Engineering, May 19-25, 2002, Orlando, Florida[doi>10.1145/581339.581418]
Erdogmus, H. and Williams, L. 2003. The economics of software development by pair programmers. Engin. Econom. 48, 283--319.
Erickson, J., Lyytinen, K., and Siau, K. 2005. Agile modeling, agile software development, and extreme programming: The state of research. J. Data. Manag. 16, 88--99.
Brian Fitzgerald , Gerard Hartnett , Kieran Conboy, Customising agile methods to software practices at Intel Shannon, European Journal of Information Systems, v.15 n.2, p.200-213, April 2006[doi>10.1057/palgrave.ejis.3000605]
Forrester, J. W. 1961. Industrial Dynamics. MIT Press, Cambridge, MA.
Forrester, J. W. and Senge, P. M. 1980. Tests for building confidence in system dynamics models. TIMS Stud. Manag. Sci. 14, 209--228.
Refactoring: improving the design of existing code, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Boby George , Laurie Williams, An initial investigation of test driven development in industry, Proceedings of the 2003 ACM symposium on Applied computing, March 09-12, 2003, Melbourne, Florida[doi>10.1145/952532.952753]
Robert L. Glass, Matching methodology to problem domain, Communications of the ACM, v.47 n.5, May 2004[doi>10.1145/986213.986228]
Gorts, S. 2004. Refactoring in the large. http://www.refactoring.be/thumbnails/large/large.html
James Grenning, Launching Extreme Programming at a Process-Intensive Company, IEEE Software, v.18 n.6, p.27-33, November 2001[doi>10.1109/52.965799]
Harrison, B. 2003. A study of extreme programming in a large company. http://www.agilealliance.org/articles/articles/ALR-2003-039-paper.pdf
Jim Highsmith , Alistair Cockburn, Agile Software Development: The Business of Innovation, Computer, v.34 n.9, p.120-122, September 2001[doi>10.1109/2.947100]
Paul Hodgetts, Refactoring the Development Process: Experiences with the Incremental Adoption of Agile Practices, Proceedings of the Agile Development Conference, p.106-113, June 22-26, 2004
Höst, M., Regnell, B., Dag, J. N. O., Nedstam, J., and Nyberg, C. 2001. Exploring bottlenecks in market-driven requirements management processes with discrete event simulation. J. Syst. Softw. 59, 323--332.
Ron E. Jeffries , Ann Anderson , Chet Hendrickson, Extreme Programming Installed, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2000
Karlström, D. 2002. Introducing extreme programming—An experience report. In Proceedings of the 3rd International Conference on eXtreme Programming and Agile Processes in Software Engineering (XP'02).
A Quantitative Evaluation of Maintainability Enhancement by Refactoring, Proceedings of the International Conference on Software Maintenance (ICSM'02), p.576, October 03-06, 2002
Wei Li , Sallie Henry, Object-oriented metrics that predict maintainability, Journal of Systems and Software, v.23 n.2, p.111-122, Nov. 1993[doi>10.1016/0164-1212(93)90077-B]
B. P. Lientz , E. B. Swanson , G. E. Tompkins, Characteristics of application software maintenance, Communications of the ACM, v.21 n.6, p.466-471, June 1978[doi>10.1145/359511.359522]
Madachy, R. 2007 Software Process Dynamics. Wiley-IEEE Press, Los Alamitos, CA.
Robert C. Martin, eXtreme Programming Development through Dialog, IEEE Software, v.17 n.4, p.12-13, July 2000[doi>10.1109/52.854062]
Tom Mens , Tom Tourwé, A Survey of Software Refactoring, IEEE Transactions on Software Engineering, v.30 n.2, p.126-139, February 2004[doi>10.1109/TSE.2004.1265817]
John T. Nosek, The case for collaborative programming, Communications of the ACM, v.41 n.3, p.105-108, March 1998[doi>10.1145/272287.272333]
Opdyke, W. F. 1992. Refactoring: A program restructuring aid in designing object-oriented application frameworks. Ph.D. thesis, University of Illinois at Urbana-Champaign.
Opdyke, W. F. 1995. Refactoring object-oriented software to support evolution and reuse. In Proceedings of the 7<sup>th</sup> Annual Workshop on Institutionalizing Software Reuse.
Allen Parrish , Randy Smith , David Hale , Joanne Hale, A Field Study of Developer Pairs: Productivity Impacts and Implications, IEEE Software, v.21 n.5, p.76-79, September 2004[doi>10.1109/MS.2004.1331306]
Peters, P. and Jarke, M. 1996. Simulating the impact of information flows in networked organizations. In Proceedings of the International Conference on Information Systems (ICIS).
Ramesh, B., Cao, L., and Baskerville, R. 2010. Agile requirements engineering practices and challenges: An empirical study. Inform. Syst. J. 20, 5, 449--480.
Donald Bradley Roberts , Ralph Johnson, Practical analysis for refactoring, University of Illinois at Urbana-Champaign, Champaign, IL, 1999
Roehling, S. T., Collofello, J. S., Hermann, B. G., and Smith-Daniels, D. E. 2000. System dynamics modeling applied to software outsourcing decision support. Softw. Process. Improv. Pract. 5.
Rumpe, B. and Schroeder, A. 2002. Quantitative survey on extreme programming project. In Proceedings of the 3<sup>rd</sup> International Conference on eXtreme Programming and Agile Processes in Software Engineering. 95--100.
Rus, I., Collofello, J., and Lakey, P. 1999. Software process simulation for reliability management. J. Syst. Softw. 46, 173--182.
K. Sengupta , T. K. Abdel-Hamid, The impact of unreliable information on the management of software projects: a dynamic decision perspective, IEEE Transactions on Systems, Man, and Cybernetics, Part A: Systems and Humans, v.26 n.2, p.177-189, March 1996[doi>10.1109/3468.485744]
K. Sengupta , T. K. Abdel-Hamid , M. Bosley, Coping with staffing delays in software project management: an experimental investigation, IEEE Transactions on Systems, Man, and Cybernetics, Part A: Systems and Humans, v.29 n.1, p.77-91, January 1999[doi>10.1109/3468.736362]
Jim Shore, Continuous Design, IEEE Software, v.21 n.1, p.20-22, January 2004[doi>10.1109/MS.2004.1259183]
Stallinger, F. and Grünbacher, P. 2001. System dynamics modeling and simulation of collaborative requirements engineering. J. Syst. Softw. 59, 311--321.
George E. Stark , Paul Oman , Alan Skillicorn , Alan Ameele, An examination of the effects of requirements changes on software maintenance releases, Journal of Software Maintenance: Research and Practice, v.11 n.5, p.293-309, Sept.-Oct. 1999[doi>10.1002/(SICI)1096-908X(199909/10)11:5<293::AID-SMR198>3.0.CO;2-R]
John Sterman, Business Dynamics, McGraw-Hill, Inc., New York, NY, 2000
Stroulia, E. and Leitch, R. 2003. Understanding the economics of refactoring. In Proceedings of the 5<sup>th</sup> ICSE Workshop on Economics-Driven Software Engineering Research.
E. Burton Swanson, The dimensions of maintenance, Proceedings of the 2nd international conference on Software engineering, p.492-497, October 13-15, 1976, San Francisco, California, USA
West, D., Grant, T., Gerush, M., and D'Silva, D. 2010. Agile Development: Mainstream Adoption Has Changed Agility. Forrester Research.
Whiler, O. 2003. Refactoring. Methods & Tools Spring.
Laurie Williams, Integrating Pair Programming into a Software Development Process, Proceedings of the 14th Conference on Software Engineering Education and Training, p.27, February 19-21, 2001
Laurie Williams , Bob Kessler, The Effects of "Pair-Pressure" and "Pair-Learning" on Software Engineering Education, Proceedings of the 13th Conference on Software Engineering Education & Training, p.59, March 06-08, 2000
Laurie Williams , Robert R. Kessler , Ward Cunningham , Ron Jeffries, Strengthening the Case for Pair Programming, IEEE Software, v.17 n.4, p.19-25, July 2000[doi>10.1109/52.854064]
