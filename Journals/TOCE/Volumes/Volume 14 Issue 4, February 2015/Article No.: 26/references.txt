A. Agresti and I. M. Liu. 1999. Modeling a categorical variable allowing arbitrarily many category choices. Biometrics, 55, 3 (Sept. 1999), 936--943.
Vicki L. Almstrum , Orit Hazzan , Mark Guzdial , Marian Petre, Challenges to computer science education research, ACM SIGCSE Bulletin, v.37 n.1, 2005[doi>10.1145/1047124.1047415]
Theresa Beaubouef , John Mason, Why the high attrition rate for computer science students: some thoughts and observations, ACM SIGCSE Bulletin, v.37 n.2, June 2005[doi>10.1145/1083431.1083474]
Leland Beck , Alexander Chizhik, Cooperative learning instructional methods for CS1: Design, implementation, and evaluation, ACM Transactions on Computing Education (TOCE), v.13 n.3, p.1-21, August 2013[doi>10.1145/2492686]
J. Bennedsen and M. E. Caspersen. 2007. Assessing process and product: A practical lab exam for an introductory programming course 1. Inn. Teaching Learning Inf. Comput. Sci. 6, 4 (Oct. 2007), 183--202.
Sarah B. Berenson , Kelli M. Slaten , Laurie Williams , Chih-Wei Ho, Voices of women in a software engineering course: reflections on collaboration, Journal on Educational Resources in Computing (JERIC), v.4 n.1, p.3-es, March 2004[doi>10.1145/1060071.1060074]
P. Black. 1999. Assessment, learning theories and testing systems. In Learners, Learning and Assessment. Paul Chapman Publishing, London, 118--134.
P. Black and D. Wiliam. 1998. Assessment and classroom learning. Assess. Educ. 5, 1 (1998), 7--74.
S. J. Bostock. 2004. Motivation and electronic assessment. Effective Learning and Teaching in Computing. Routledge Falmer, London. 86--99.
Grant Braught , Tim Wahls , L. Marlin Eby, The Case for Pair Programming in the Computer Science Classroom, ACM Transactions on Computing Education (TOCE), v.11 n.1, p.1-21, February 2011[doi>1921607.1921609]
A. L. Brown. 1992. Design experiments: Theoretical and methodological challenges in creating complex interventions in classroom settings. J. Learn. Sci. 2, 2 (1992), 141--178.
Mary Elaine Califf , Mary Goodwin, Testing skills and knowledge: introducing a laboratory exam in CS1, ACM SIGCSE Bulletin, v.34 n.1, March 2002[doi>10.1145/563517.563425]
J. Carter and R. Boyle. 2002. Teaching delivery issues: Lessons from computer science. J. Inf. Technol. 1, 2 (2002), 65--90.
A. T. Chamillard , Kim A. Braun, Evaluating programming ability in an introductory computer science course, ACM SIGCSE Bulletin, v.32 n.1, p.212-216, Mar. 2000[doi>10.1145/331795.331857]
A. Collins. 1992. Toward a design science of education. Springer, Berlin, 15--22.
A. Collins, D. Joseph, and K. Bielaczyc. 2004. Design research: Theoretical and methodological issues. J. Learn. Sci. 13, 1 (2004), 15--42.
Computing Curricula. 2001. IEEE CS, ACM Joint Task Force on Computing Curricula. IEEE Computer Society Press and ACM Press. Retrieved from http://www.acm.org/education/curricula.html.
Computing Curricula: The overview report. 2005. IEEE CS, ACM Joint Task Force on Computing Curricula. IEEE Computer Society Press and ACM Press. Retrieved from http://www.acm.org/education/curricula.html.
A. T. Corbett and J. R. Anderson. 1990. The effect of feedback control on learning to program with the LISP tutor. In Proceedings of the Twelfth Annual Conference of the Cognitive Science Society. 796--803.
Albert T. Corbett , John R. Anderson, Locus of feedback control in computer-based tutoring: impact on learning rate, achievement and attitudes, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.245-252, March 2001, Seattle, Washington, USA[doi>10.1145/365024.365111]
Charlie Daly , John Waldron, Assessing the assessment of programming ability, ACM SIGCSE Bulletin, v.36 n.1, March 2004[doi>10.1145/1028174.971375]
DARPA. 2010. Computer Science—Science, Technology, Engineering, and Mathematics (CS-STEM) Education Research Announcement (RA). DARPA-RA-10-03.
Paul Denny , Andrew Luxton-Reilly , Ewan Tempero, All syntax errors are not equal, Proceedings of the 17th ACM annual conference on Innovation and technology in computer science education, July 03-05, 2012, Haifa, Israel[doi>10.1145/2325296.2325318]
Paul Denny , Andrew Luxton-Reilly , Ewan Tempero , Jacob Hendrickx, Understanding the syntax barrier for novices, Proceedings of the 16th annual joint conference on Innovation and technology in computer science education, June 27-29, 2011, Darmstadt, Germany[doi>10.1145/1999747.1999807]
N. K. Denzin and Y. S. Lincoln, (Eds.). 1998. The Landscape of Qualitative Research: Theories and Issues. Sage, Thousand Oaks, CA.
B. Du Boulay. 1986. Some Difficulties of Learning to Program. J. Educ. Comput. Res. 2, 1 (1986), 57--73.
K. Ecclestone. 1998. “Just tell me what to do” barriers to assessment-in-learning in higher education. In Scottish Educational Research Association Annual Conference, University of Dundee. 25--26.
Albrecht Ehlert , Carsten Schulte, Empirical comparison of objects-first and objects-later, Proceedings of the fifth international workshop on Computing education research workshop, August 10-11, 2009, Berkeley, CA, USA[doi>10.1145/1584322.1584326]
M. H. Goldwasser and D. Letscher. 2008. Using Python to Teach Object-Oriented Programming in CS1. Innov. Technol. Comput. Sci. Ed. (June 2008), 30--32.
Linda Grandell , Mia Peltomäki , Ralph-Johan Back , Tapio Salakoski, Why complicate things?: introducing programming in high school using Python, Proceedings of the 8th Australasian Conference on Computing Education, p.71-80, January 16-19, 2006, Hobart, Australia
Mark Guzdial, EducationTeaching computing to everyone, Communications of the ACM, v.52 n.5, May 2009[doi>10.1145/1506409.1506420]
R. Higgins, P. Hartley, and A. Skelton. 2002. The conscientious consumer: Reconsidering the role of assessment feedback in student learning. Studies Higher Educ. 27, 1 (2002), 53--64.
A. Irons. 2010. An Investigation into the Impact of Formative Feedback on the Student Learning Experience Doctoral dissertation. Durham University, Durham, UK.
M. C. Jadud. 2005. A first look at novice compilation behaviour using BlueJ. Comput. Sci. Educ. 15, 1 (2005), 25--40.
Jussi Kasurinen , Uolevi Nikula, Lower dropout rates and better grades through revised course infrastructure, Proceedings of the 10th IASTED International Conference on Computers and Advanced Technology in Education, October 08-10, 2007, Beijing, China
M. Kölling. 1999. The problem of teaching object-oriented programming, Part 1: Languages. J. Obj. Orient. Prog. 11, 8, 8--15.
V. Koshy. 2009. Action Research for Improving Educational Practice: A Step-by-Step Guide. Sage, Thousand Oaks, CA.
Sarah K. Kummerfeld , Judy Kay, The neglected battle fields of syntax errors, Proceedings of the fifth Australasian conference on Computing education, p.105-111, February 01, 2003, Adelaide, Australia
Cynthia Bailey Lee, Experience report: CS1 in MATLAB for non-majors, with media computation and peer instruction, Proceeding of the 44th ACM technical symposium on Computer science education, March 06-09, 2013, Denver, Colorado, USA[doi>10.1145/2445196.2445214]
M. Lilley and T. Barker. 2007. Students’ perceived usefulness of formative feedback for a computer-adaptive test. Electron. J. e-learning 5 (2007), 31--38.
T. Lillis and J. Turner. 2001. Student writing in higher education: Contemporary confusion, traditional concerns. Teaching Higher Educ. 6, 1 (2001), 57--68.
M. C. Linn and J. Dalbey. 1989. Cognitive consequences of programming instruction. In Studying the Novice Programmer, E. Soloway and J. C. Spohrer (Eds.). Lawrence Erlbaum Associates, Hillsdale, NJ, 57--81.
Raymond Lister , Elizabeth S. Adams , Sue Fitzgerald , William Fone , John Hamer , Morten Lindholm , Robert McCartney , Jan Erik Moström , Kate Sanders , Otto Seppälä , Beth Simon , Lynda Thomas, A multi-national study of reading and tracing skills in novice programmers, ACM SIGCSE Bulletin, v.36 n.4, December 2004[doi>10.1145/1041624.1041673]
Linxiao Ma , John Ferguson , Marc Roper , Murray Wood, Investigating the viability of mental models held by novice programmers, ACM SIGCSE Bulletin, v.39 n.1, March 2007[doi>10.1145/1227504.1227481]
Linda Mannila , Michael de Raadt, An objective comparison of languages for teaching introductory programming, Proceedings of the 6th Baltic Sea conference on Computing education research: Koli Calling 2006, February 01-01, 2006, Uppsala, Sweden[doi>10.1145/1315803.1315811]
L. Mannila, M. Peltomki, and T. Salakoski. 2006. What about a simple language&quest; Analyzing the difficulties in learning to program. Comput. Sci. Educ. 16, 3 (2006), 211--227.
Michael McCracken , Vicki Almstrum , Danny Diaz , Mark Guzdial , Dianne Hagan , Yifat Ben-David Kolikant , Cary Laxer , Lynda Thomas , Ian Utting , Tadeusz Wilusz, A multi-national, multi-institutional study of assessment of programming skills of first-year CS students, ACM SIGCSE Bulletin, v.33 n.4, December 2001[doi>10.1145/572139.572181]
Charlie McDowell , Linda Werner , Heather E. Bullock , Julian Fernald, The impact of pair programming on student performance, perception and persistence, Proceedings of the 25th International Conference on Software Engineering, May 03-10, 2003, Portland, Oregon
A. McGettrick, R. Boyle, R. Ibbett, J. Lloyd, G. Lovegrove, and K. Mander. 2004. Grand challenges in computing: Education. British Computer Society.
B. N. Miller and D. L. Ranum. 2005. Teaching an introductory computer science sequence with Python. In Proceedings of the 38th Midwest Instructional and Computing Symposium.
Bradley Miller , David Ranum, Freedom to succeed: a three course introductory sequence using Python and Java, Journal of Computing Sciences in Colleges, v.22 n.1, p.106-116, October 2006
M. Molina, E. Castro, and E. Castro. 2007. Teaching experiments within design research. Int. J. Interdisc. Social Soc. Sci. 2, 4 (2007), 435--440.
R. Moreno. 2004. Decreasing cognitive load for novice students: Effects of explanatory versus corrective feedback in discovery-based multimedia. Instruct. Sci. 32, 1--2 (2004), 99--113.
National Audit Office. Staying the course: The retention of students in higher education. 2007. Report by the National Audit Office, 44. Retrieved from http://www.nao.org.uk/report/staying-the-course-the-retention-of-students-in-higher-education/.
Uolevi Nikula , Orlena Gotel , Jussi Kasurinen, A Motivation Guided Holistic Rehabilitation of the First Programming Course, ACM Transactions on Computing Education (TOCE), v.11 n.4, p.1-38, November 2011[doi>10.1145/2048931.2048935]
Joseph D. Oldham, What happens after Python in CS1?, Journal of Computing Sciences in Colleges, v.20 n.6, p.7-13, June 2005
D. B. Palumbo. 1990. Programming language/problem-solving research: A review of relevant issues. Rev. Educ. Res. 60, 1 (1990), 65--89.
Holly Patterson-McNeill, Experience: from C++ to Python in 3 easy steps, Journal of Computing Sciences in Colleges, v.22 n.2, p.92-96, December 2006
Arnold Pears , Lauri Malmi, Values and Objectives in Computing Education Research, ACM Transactions on Computing Education (TOCE), v.9 n.3, p.1-6, September 2009[doi>10.1145/1594399.1594400]
Arnold Pears , Stephen Seidman , Lauri Malmi , Linda Mannila , Elizabeth Adams , Jens Bennedsen , Marie Devlin , James Paterson, A survey of literature on the teaching of introductory programming, ACM SIGCSE Bulletin, v.39 n.4, December 2007[doi>10.1145/1345375.1345441]
G. Polya. 1973. How to Solve It: A New Aspect of Mathematical Method. Princeton University Press.
Leo Porter , Cynthia Bailey Lee , Beth Simon , Quintin Cutts , Daniel Zingaro, Experience report: a multi-classroom report on the value of peer instruction, Proceedings of the 16th annual joint conference on Innovation and technology in computer science education, June 27-29, 2011, Darmstadt, Germany[doi>10.1145/1999747.1999788]
Quality Assurance Agency for Higher Education. 2003. Learning from subject review. Retrieved from http://www.qaa.ac.uk/Publications/InformationAndGuidance/Documents/learningFromSubjectReview.pdf.
R Development Core Team. 2010. R: A language and environment for statistical computing. R Foundation Statistical Computing.
Atanas Radenski, "Python first": a lab-based digital introduction to computer science, ACM SIGCSE Bulletin, v.38 n.3, September 2006[doi>10.1145/1140123.1140177]
J. Randolph, G. Julnes, E. Sutinen, and S. Lehman. 2008. A methodological review of computer science education research. J. Inf. Tech. Educ.: Res. 7, 1 (2008), 135--162.
T. Reeves. 2011. Can educational research be both rigorous and relevant. Educ. Des. 1, 4 (2011), 1--24.
V.G. Renumol , Dharanipragada Janakiram , S. Jayaprakash, Identification of Cognitive Processes of Effective and Ineffective Students During Computer Programming, ACM Transactions on Computing Education (TOCE), v.10 n.3, p.1-21, August 2010[doi>10.1145/1821996.1821998]
A. Robins, J. Rountree, and N. Rountree. 2003. Learning and teaching programming: A review and discussion. Comput. Sci. Educ. 13, 2 (2003), 137--172.
J. Rogalski and R. Samurçay. 1990. Acquisition of programming knowledge and skills. Psych. Prog. 18 (1990), 157--174.
Mary Beth Rosson , John M. Carroll , Hansa Sinha, Orientation of Undergraduates Toward Careers in the Computer and Information Sciences: Gender, Self-Efficacy and Social Support, ACM Transactions on Computing Education (TOCE), v.11 n.3, p.1-23, October 2011[doi>10.1145/2037276.2037278]
C. Rust. 2002. The impact of assessment on student learning: How can the research literature practically help to inform the development of departmental assessment strategies and learner-centred assessment practices&quest; Active Learn. Higher Educ. 3, 2 (July 2002), 145--158.
Christine Shannon, Another breadth-first approach to CS I using python, ACM SIGCSE Bulletin, v.35 n.1, January 2003[doi>10.1145/792548.611980]
V. J. Shute. 2008. Focus on formative feedback. Rev. Educ. Res. 78, 1 (2008), 153--189.
R. M. Siegfried, D. Chays, and K. G. Herbert. 2008. Will there ever be consensus on cs1. In Proceedings of the 2008 International Conference on Frontiers in Education: Computer Science and Computer Engineering--FECS. Vol. 8, 18--23.
Beth Simon , Michael Kohanfars , Jeff Lee , Karen Tamayo , Quintin Cutts, Experience report: peer instruction in introductory computing, Proceedings of the 41st ACM technical symposium on Computer science education, March 10-13, 2010, Milwaukee, Wisconsin, USA[doi>10.1145/1734263.1734381]
R. E. Slavin. 2003. A reader's guide to scientifically based research. Educ. Leadership 60, 5 (2003), 12--16.
Robert H. Sloan , Patrick Troy, CS 0.5: a better approach to introductory computer science for majors, ACM SIGCSE Bulletin, v.40 n.1, March 2008[doi>10.1145/1352322.1352230]
D. Sleeman, R. T. Putnam, J. Baxter, and L. Kuspa. 1988. An introductory Pascal class: A case study of students' errors. Teaching and Learning Computer Programming: Multiple Research Perspectives. RE Mayer (Ed.). Lawrence Erlbaum Associates, Hillsdale, NJ, 237--257.
John Stamey , Steve Sheel, A boot camp approach to learning programming in a CS0 course, Journal of Computing Sciences in Colleges, v.25 n.5, p.34-40, May 2010
Andreas Stefik , Susanna Siebert, An Empirical Investigation into Programming Language Syntax, ACM Transactions on Computing Education (TOCE), v.13 n.4, p.1-40, November 2013[doi>10.1145/2534973]
L. Stenhouse. 1975. An Introduction to Curriculum Research and Development. Heinemann, London.
Jerry O. Talton , Daniel L. Peterson , Sam Kamin , Deborah Israel , Jalal Al-Muhtadi, Scavenger hunt: computer science retention through orientation, ACM SIGCSE Bulletin, v.38 n.1, March 2006[doi>10.1145/1124706.1121478]
Jho-Ju Tu , John R. Johnson, Can computer programming improve problem-solving ability?, ACM SIGCSE Bulletin, v.22 n.2, p.30-33, June 1990[doi>10.1145/126445.126451]
S. Turner and G. Hill. 2007. Robots in problem-solving and programming. In Proceedings of the 8th Annual Conference of the Subject Centre for Information and Computer Sciences.
U.S. Department of Education. 2001. No Child Left Behind Act. Retrieved from http://www2.ed.gov/policy/elsec/leg/esea02/index.html.
M. R. Weaver. 2006. Do students value feedback&quest; Student perceptions of tutors’ written responses. Assess. Eval. Higher Educ. 31, 3 (2006), 379--394.
J. M. Zelle. 1999. Python as a first language. In Proceedings of 13th Annual Midwest Computer Conference. Vol. 2.
