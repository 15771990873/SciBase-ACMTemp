Lecturing is known to be a controversial form of teaching. With massed classrooms, in particular, it tends to constrain the active participation of students. One of the remedies applied to programming education is to use technology that can vitalize interaction in the classroom, while another is to base teaching increasingly on programming activities. In this article, we present the first results of an exploratory study, in which we teach programming without lectures, exams, or grades, by heavily emphasizing programming activity, and, in a pedagogical sense, student self-direction. This article investigates how students reacted to the active role required of them and what issues emerged in this setting where self-direction was required. The results indicate three issues that should be taken into account when designing a student-driven course: the challenge of supporting students' theoretical synthesis of the topics to be learned, the individual's opportunities for self-direction in a group work setting, and mismatch between individual learning processes and academic course scheduling.