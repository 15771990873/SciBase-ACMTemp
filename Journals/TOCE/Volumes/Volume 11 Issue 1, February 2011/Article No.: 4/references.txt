Owen Astrachan , Kim Bruce , Elliot Koffman , Michael Kölling , Stuart Reges, Resolved: objects early has failed, Proceedings of the 36th SIGCSE technical symposium on Computer science education, p.451-452, February 23-27, 2005, St. Louis, Missouri, USA[doi>10.1145/1047344.1047359]
Matthew Barr , Sam Holden , Dave Phillips , Tony Greening, An exploration of novice programming errors in an object-oriented environment, ACM SIGCSE Bulletin, v.31 n.4, p.42-46, Dec. 1999[doi>10.1145/349522.349392]
Constructivism in computer science education, Journal of Computers in Mathematics and Science Teaching, v.20 n.1, p.45-73, January 2001
Tamar Benaya , Ela Zur, Understanding Object Oriented Programming Concepts in an Advanced Programming Course, Proceedings of the 3rd international conference on Informatics in Secondary Schools - Evolution and Perspectives: Informatics Education - Supporting Computational Thinking, July 01-04, 2008, Torun, Poland[doi>10.1007/978-3-540-69924-8_15]
Berge, O., Borge, R. E., Fjuk, A., Kaasbøll, J., and Samuelsen, T.2003a. Learning object-oriented programming. InProceedings of the Norsk Informatikkonferanse (NIK’03).
Berge, O., Fjuk, A., Groven, A.-K., Hegna, H., and Kassabøl, J.2003b. Comprehensive object-oriented learning---An introduction.Comput. Sci. Educ. 13, 4, 331--335.
Robert Biddle , Ewan Tempero, Explaining inheritance: a code reusability perspective, ACM SIGCSE Bulletin, v.28 n.1, p.217-221, March 1996[doi>10.1145/236462.236543]
Bloch, J. 2008.Effective Java2nd Ed. Prentice Hall.
Bonau, J. and Soloway, E. 1989. Preprogramming knowledge: A major source of misconceptions in novice programmers. InStudying the Novice Programmer. E. Soloway and J. C. Spohere Eds., Lawrence Erlbaum Associates, Hillsdale, N.J., 324--353.
Philip J. Burton , Russel E. Bruhn, Teaching programming in the OOP era, ACM SIGCSE Bulletin, v.35 n.2, June 2003[doi>10.1145/782941.782993]
José Juan Cañas , Maria Teresa Bajo , Pilar Gonzalvo, Mental models and computer programming, International Journal of Human-Computer Studies, v.40 n.5, p.795-811, May 1994[doi>10.1006/ijhc.1994.1038]
Détienne, F. 2001.Software Design -- Cognitive Aspects. F. Bott, translator and editor, Springer, Berlin.
Du Boulay, B.1986. Some difficulties of learning to program.J. Educ. Comput. Res. 2, 1, 57--73.
Du Boulay, B., O’Shea, T., and Monk, J.1989. The black box inside the glass box: Presenting computing concepts to novices. InStudying the Novice Programmer. E. Soloway and J. C. Spohrer Eds., Lawrence Erlbaum Associates, Hillsdale, N.J., 431--446.
Driver, R. and Bell, B.1986. Students’ thinking and learning of science: A constructivist view.School Sci. Rev.443--456.
Entwistle, N.2007. Conceptions of learning and the experience of understanding: Thresholds, contextual influences, and knowledge objects. InReframing the Conceptual Change Approach in Learning and Instruction. S. Vosniadou, A. Baltas, and X. Vamvakoussi Eds., Chapter 11, Elsevier, Amsterdam, The Netherlands.
Annita Fjuk , Ola Berge , Jens Bennedsen , Michael E. Caspersen, Learning Object-Orientation through ICT-Mediated Apprenticeship, Proceedings of the IEEE International Conference on Advanced Learning Technologies, p.380-384, August 30-September 01, 2004
Ann E. Fleury, Programming in Java: student-constructed rules, ACM SIGCSE Bulletin, v.32 n.1, p.197-201, Mar. 2000[doi>10.1145/331795.331854]
Ann E. Fleury, Encapsualtion and reuse as viewed by java students, Proceedings of the thirty-second SIGCSE technical symposium on Computer Science Education, p.189-193, February 2001, Charlotte, North Carolina, USA[doi>10.1145/364447.364582]
Judith Gal-Ezer , Catriel Beeri , David Harel , Amiram Yehudai, A High School Program in Computer Science, Computer, v.28 n.10, p.73-80, October 1995[doi>10.1109/2.467599]
Judith Gal-Ezer , Tamar Vilner , Ela Zur, Has the paradigm shift in CS1 a harmful effect on data structures courses: a case study, Proceedings of the 40th ACM technical symposium on Computer science education, March 04-07, 2009, Chattanooga, TN, USA[doi>10.1145/1508865.1508909]
Irit Hadar , Uri Leron, How intuitive is object-oriented design?, Communications of the ACM, v.51 n.5, p.41-46, May 2008[doi>10.1145/1342327.1342336]
Said Hadjerrouit, A constructivist framework for integrating the Java paradigm into the undergraduate curriculum, ACM SIGCSE Bulletin, v.30 n.3, p.105-107, Sept. 1998[doi>10.1145/290320.283079]
Hoc, J. M. and Nguyen-Xuan, A. 1990. Language Semantics, mental models and analogy. InPsychology of Programming. J. M. Hoc, T. R. G. Green, R. Samurcay, and D. J. Gillmore Eds., Academic Press, London. 136--157.
Simon Holland , Robert Griffiths , Mark Woodman, Avoiding object misconceptions, ACM SIGCSE Bulletin, v.29 n.1, p.131-134, March 1997[doi>10.1145/268085.268132]
Christian Holmboe, A cognitive framework for knowledge in informatics: the case of object-orientation, Proceedings of the 4th annual SIGCSE/SIGCUE ITiCSE conference on Innovation and technology in computer science education, p.17-20, June 27-30, 1999, Cracow, Poland[doi>10.1145/305786.305833]
Jason Hong, The use of Java as an introductory programming language, Crossroads, v.4 n.4, p.8-13, May 1998[doi>10.1145/333140.333145]
Lincoln, Y. S. and Guba, E. G.2000. Paradigmatic controversies, contradictions, and emerging confluences. InHandbook of Qualitative Research2nd Ed. N. K. Denzin and S. L. Lincoln Eds., Sage Publications, London, 163--188.
Mayer, R. E.1989. The psychology of how novices learn computer programming. InStudying the Novice Programmer. E. Soloway and J. C. Spohrer Eds., Lawrence Erlbaum Associates, Hillsdale, N.J., 129--159.
Iain Milne , Glenn Rowe, Difficulties in Learning and Teaching Programming—Views of Students and Tutors, Education and Information Technologies, v.7 n.1, p.55-66, March 2002[doi>10.1023/A:1015362608943]
Rachel Or-Bach , Ilana Lavy, Cognitive activities of abstraction in object orientation: an empirical study, ACM SIGCSE Bulletin, v.36 n.2, June 2004[doi>10.1145/1024338.1024378]
Pea, R. D.1986. Language-independent conceptual “bugs” in novice programming.J. Educ. Comput. Res. 2, 1.
Ragonis, N., and Ben-Ari, M.2005a. A long-term investigation of the comprehension of OOP concepts by novices.Comput. Sci. Educ. 15, 3, 203--221.
Noa Ragonis , Mordechai Ben-Ari, On understanding the statics and dynamics of object-oriented programs, Proceedings of the 36th SIGCSE technical symposium on Computer science education, February 23-27, 2005, St. Louis, Missouri, USA[doi>10.1145/1047344.1047425]
Rath, A., and Brown, D. E.1995. Conceptions of human-computer interaction: A model for understanding student errors.J. Educ. Comput. Res. 12, 4, 395--409.
Stuart Reges, Back to basics in CS1 and CS2, Proceedings of the 37th SIGCSE technical symposium on Computer science education, March 03-05, 2006, Houston, Texas, USA[doi>10.1145/1121341.1121432]
Robins, A., Rountreek, J., and Rountree, N.2003. Learning and teaching programming: A review and discussion.Comput. Sci. Educ. 13, 2, 137--172.
Kate Sanders , Lynda Thomas, Checklists for grading object-oriented CS1 programs: concepts and misconceptions, ACM SIGCSE Bulletin, v.39 n.3, September 2007[doi>10.1145/1269900.1268834]
Smith III, J. P., diSessa, A. A., and Roschelle. J.1993. Misconceptions reconceived: A constructivist analysis of knowledge in transition.J. Learn. Sci. 3, 115--163.
Axel Schmolitzky, Teaching inheritance concepts with Java, Proceedings of the 4th international symposium on Principles and practice of programming in Java, August 30-September 01, 2006, Mannheim, Germany[doi>10.1145/1168054.1168084]
Sleeman, D., Putnam, R. T., Baxer J., and Kuspa, L.1986. Pascal and high school students: A study of errors.J. Educ. Comput. Res. 2, 1, 28--45.
Tamar Vilner , Ela Zur , Judith Gal-Ezer, Fundamental concepts of CS1: procedural vs. object oriented paradigm - a case study, ACM SIGCSE Bulletin, v.39 n.3, September 2007[doi>10.1145/1269900.1268835]
Wiedenbeck, S., Ramalingam, V., Sarasamma, S., and Corritore, C. L. 1999. A comparison of the comprehension of object-oriented and procedural programs by novice programmers.Interact. Comput. 11, 255--282.
