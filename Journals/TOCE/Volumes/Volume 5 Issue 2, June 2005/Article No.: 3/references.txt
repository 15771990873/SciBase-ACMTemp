ACM JAVA Task Force. 2005. Java Task Force Report: First Public Draft. Internet. Feb.1, 2005: http://cs.stanford.edu/~eroberts//jtf/.
ACM/IEEE Joint Task Force On Computing Curricula. 2001. Computing Curricula 2001: Computer Science. Internet. Dec. 15, 2001. http://www.sigcse.org/cc2001/.
Roland C. Backhouse, Program construction and verification, Prentice-Hall, Inc., Upper Saddle River, NJ, 1986
Roland Backhouse, Program Construction: Calculating Implementations from Specifications, John Wiley & Sons, Inc., New York, NY, 2003
Barnett, M., Deline, R. Fahndrich, M., Leino, K.R.M., and Schulte, W. 2004. Verification of object-oriented program with invariants. J. Object Technol. 3, 6, 27--56.
Antoine Beugnard , Jean-Marc Jézéquel , Noël Plouzeau , Damien Watkins, Making Components Contract Aware, Computer, v.32 n.7, p.38-45, July 1999[doi>10.1109/2.774917]
Kim B. Bruce , Robert L. Scot Drysdale , Charles Kelemen , Allen Tucker, Why math?, Communications of the ACM, v.46 n.9, September 2003[doi>10.1145/903893.903918]
Devlin, K. 2003. Why universities require computer science students to take math. Commun. ACM 49,9, 37--39.
Edsger Wybe Dijkstra, A  Discipline of Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1997
Floyd, R.W. 1967. Assigning meaning to programs. In Proceedings of the 19th Symposium on Applied Mathematics (Mathematical Aspects of Computer Science), American Mathematical Society, Providence, RI.
Timothy S. Gegg-Harrison, Ancient Egyptian numbers: a CS-complete example, Proceedings of the thirty-second SIGCSE technical symposium on Computer Science Education, p.268-272, February 2001, Charlotte, North Carolina, USA[doi>10.1145/364447.364598]
Timothy S. Gegg-Harrison , Gary R. Bunce , Rebecca D. Ganetzky , Christina M. Olson , Joshua D. Wilson, Studying program correctness by constructing contracts, Proceedings of the 8th annual conference on Innovation and technology in computer science education, June 30-July 02, 2003, Thessaloniki, Greece[doi>10.1145/961511.961548]
Huizing, K. and Kuiper, R. 2000. Verification of object-oriented programs using class invariants. In Proceedings of the 3rd International Conference on Fundamental Approaches of Software Engineering (FASE 2000), Springer-Verlag, New York, 208--221.
David Gries, The  Science of Programming, Springer-Verlag New York, Inc., Secaucus, NJ, 1987
Peter B. Henderson, Mathematical reasoning in software engineering education, Communications of the ACM, v.46 n.9, September 2003[doi>10.1145/903893.903919]
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Jacobs, B., Kiniry, J., and Warnier, M. 2003. Java program verification challenges. In Proceedings of the 1st International Symposium on Formal Methods for Components and Objects (FMCO 2002), Springer-Verlag, New York, 202--219.
Bertrand Meyer, Applying "Design by Contract", Computer, v.25 n.10, p.40-51, October 1992[doi>10.1109/2.161279]
Bertrand Meyer, Eiffel: the language, Prentice-Hall, Inc., Upper Saddle River, NJ, 1992
