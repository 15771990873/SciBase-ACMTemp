Back, R.-J.1978. On the correctness of refinement steps in program development. PhD thesis, Department of Computer Science, University of Helsinki.
Ralph-Johan J. Back , Abo Akademi , J. Von Wright , F. B. Schneider , D. Gries, Refinement Calculus: A Systematic Introduction, Springer-Verlag New York, Inc., Secaucus, NJ, 1998
Kent Beck, Extreme programming explained: embrace change, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Beck, Test Driven Development: By Example, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2002
Joe Bergin , James Caristi , Yael Dubinsky , Orit Hazzan , Laurie Williams, Teaching software development methods: the case of extreme programming, Proceedings of the 35th SIGCSE technical symposium on Computer science education, March 03-07, 2004, Norfolk, Virginia, USA[doi>10.1145/971300.971452]
Caspersen, M.E.2007.Educating novices in the skills of programming. PhD dissertation PD-07-4, Department of Computer Science, University of Aarhus.
Alistair Cockburn, Agile software development, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2002
Cohen, E.1990.Programming in the 1990’s. Springer-Verlag.
Collins, A.M., Brown, J.S. and Holum, A.1991. Cognitive apprenticeship: Making thinking visible.American Educator 15, 3.
Dijkstra, E.W.1968. A constructive approach to the problem of program correctness. InProceedings of the Business and Information Technology Conference (BIT’68).
Dijkstra, E.W.1969. Notes on structured programming, EWD 249.
Edsger Wybe Dijkstra, A  Discipline of Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1997
Dr. Java. 2009. http://drjava.org (Feb. 8, 2009).
Stephen H. Edwards, Using software testing to move students from trial-and-error to reflection-in-action, Proceedings of the 35th SIGCSE technical symposium on Computer science education, March 03-07, 2004, Norfolk, Virginia, USA[doi>10.1145/971300.971312]
Refactoring: improving the design of existing code, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Erich Gamma , Richard Helm , Ralph Johnson , John Vlissides, Design patterns: elements of reusable object-oriented software, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1995
David Gries, The  Science of Programming, Springer-Verlag New York, Inc., Secaucus, NJ, 1987
Brian Hanks, Problems encountered by novice pair programmers, Journal on Educational Resources in Computing (JERIC), v.7 n.4, p.1-13, January 2008[doi>1316450.1316452]
Andrew Hunt , David Thomas, Pragmatic Unit Testing in Java with JUnit, The Pragmatic Programmers, 2003
David S. Janzen , Hossein Saiedian, Test-driven learning: intrinsic integration of testing into the CS/SE curriculum, Proceedings of the 37th SIGCSE technical symposium on Computer science education, March 03-05, 2006, Houston, Texas, USA[doi>10.1145/1121341.1121419]
Christopher G. Jones, Test-driven development goes to school, Journal of Computing Sciences in Colleges, v.20 n.1, p.220-231, October 2004
JUnit. 2009. http://www.junit.org (Feb. 8, 2009).
Kölling, M.2009. Unit testing in BlueJ. http://www.bluej.org/tutorial/testing-tutorial.pdf (Feb. 8, 2009).
Kölling, M., Quig, B., Patterson, A., and Rosenberg, J.2003. The BlueJ system and its pedagogy.Comput. Science Ed. 13, 4, 249--268.
Robert Cecil Martin, Agile Software Development: Principles, Patterns, and Practices, Prentice Hall PTR, Upper Saddle River, NJ, 2003
Carroll Morgan, Programming from specifications, Prentice-Hall, Inc., Upper Saddle River, NJ, 1990
Saiedian, H.2001. Practical software engineering education.Comput. Science Ed. 11, 1, 3--5.
Williams, L.A. and Kessler, R.R.2001. Experiments with industry’s “pair-programming” model in the computer science classroom.Comput. Science Ed. 11, 1, 7--20.
Williams, L.A. and Tomayko, J.2002. Agile software development.Comput. Science Ed. 12, 3, 167--168.
Leon E. Winslow, Programming pedagogy—a psychological overview, ACM SIGCSE Bulletin, v.28 n.3, p.17-22, Sept. 1996[doi>10.1145/234867.234872]
Rebecca Wirfs-Brock , Alan McKean , Ivar Jacobson , John Vlissides, Object Design: Roles, Responsibilities, and Collaborations, Pearson Education, 2002
Niklaus Wirth, Program development by stepwise refinement, Communications of the ACM, v.14 n.4, p.221-227, April 1971[doi>10.1145/362575.362577]
Niklaus Wirth, Systematic Programming: An Introduction, Prentice Hall PTR, Upper Saddle River, NJ, 1973
