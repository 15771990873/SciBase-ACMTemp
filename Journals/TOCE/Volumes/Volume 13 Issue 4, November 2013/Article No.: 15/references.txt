Tuukka Ahoniemi , Essi Lahtinen, Visualizations in Preparing for Programming Exercise Sessions, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.137-144, July, 2007[doi>10.1016/j.entcs.2007.01.043]
Algoviz. n.d. Algoviz.org: The algorithm visualization portal. http://www.algoviz.org/.
Eric Allen , Robert Cartwright , Brian Stoler, DrJava: a lightweight pedagogic environment for Java, ACM SIGCSE Bulletin, v.34 n.1, March 2002[doi>10.1145/563517.563395]
Alsaggaf, W., Hamilton, M., Harland, J., D’Souza, D., and Laakso, M.-J. 2012. The use of laptop computers in programming lectures. InProceedings of the 23rd Australasian Conference on Information Systems (ACIS’12). 1--11.
Anderson, L. W., Krathwohl, D. R., Airasian, P. W., Cruikshank, K. A., Mayer, R. E., Pintrich, P. R., Raths, J., and Wittrock, M. C. 2001.A Taxonomy for Learning, Teaching, and Assessing: A Revision of Bloom’s Taxonomy of Educational Objectives.Longman.
Steven K. Andrianoff , David B. Levine, Role playing in an object-oriented world, ACM SIGCSE Bulletin, v.34 n.1, March 2002[doi>10.1145/563517.563386]
Atwood, J. 2008. Everything I needed to know about programming I learned from BASIC (blog post). http://www.codinghorror.com/blog/2008/04/everything-i-needed-to-know-about-programming-i-learned-from-basic.html.
Auguston, M. and Reinfelds, J. 1994. A visual Miranda machine. InProceedings of the Software Education Conference (SEC’94). 198--203.
William H. Bares , Luke S. Zettlemoyer , James C. Lester, Habitable 3D Learning Environments for Situated Learning, Proceedings of the 4th International Conference on Intelligent Tutoring Systems, p.76-85, August 16-19, 1998
K. Beck , W. Cunningham, A laboratory for teaching object oriented thinking, ACM SIGPLAN Notices, v.24 n.10, p.1-6, Oct. 1989[doi>10.1145/74878.74879]
Bednarik, R., Myller, N., Sutinen, E., and Tukiainen, M. 2006. Analyzing individual differences in program comprehension.Tech. Instruc. Cogn. Learn. 3, 3, 205--232.
Constructivism in computer science education, Journal of Computers in Mathematics and Science Teaching, v.20 n.1, p.45-73, January 2001
Ben-Ari, M., Bednarik, R., Ben-Bassat Levy, R., Ebel, G., Moreno, A., Myller, N., and Sutinen, E. 2011. A decade of research and development on program animation: The Jeliot experience.J. Vis. Lang. Comput. 22, 375--384.
Ronit Ben-Bassat Levy , Mordechai Ben-Ari, We work so hard and they don't use it: acceptance of software tools by teachers, ACM SIGCSE Bulletin, v.39 n.3, September 2007[doi>10.1145/1269900.1268856]
Ronit Ben-Bassat Levy , Mordechai Ben-Ari , Pekka A. Uronen, The Jeliot 2000 program animation system, Computers & Education, v.40 n.1, p.1-15, January 2003[doi>10.1016/S0360-1315(02)00076-3]
Jens Bennedsen , Carsten Schulte, BlueJ Visual Debugger for Learning the Execution of Object-Oriented Programs?, ACM Transactions on Computing Education (TOCE), v.10 n.2, p.1-22, June 2010[doi>10.1145/1789934.1789938]
Alan W. Biermann , Amr F. Fahmy , Curry Guinn , David Pennock , Dietolf Ramm , Peter Wu, Teaching a hierarchical model of computation with animation software in the first course, ACM SIGCSE Bulletin, v.26 n.1, p.295-299, March 1994[doi>10.1145/191033.191154]
Michael R. Birch , Christopher M. Boroni , Frances W. Goosey , Samuel D. Patton , David K. Poole , Craig M. Pratt , Rockford J. Ross, DYNALAB: a dynamic computer science laboratory infrastructure featuring program animation (abstract), ACM SIGCSE Bulletin, v.27 n.1, p.29-33, March 1995[doi>10.1145/199691.199706]
Bloom, B. S. 1956.Taxonomy of Educational Objectives, Handbook 1: Cognitive Domain. Addison Wesley.
Booth, S. 1992. Learning to program: A phenomenographic perspective. Doctoral dissertation, University of Gothenburg.
Christopher M. Boroni , Torlief J. Eneboe , Frances W. Goosey , Jason A. Ross , Rockford J. Ross, Dancing with DynaLab: endearing the science of computing to students, ACM SIGCSE Bulletin, v.28 n.1, p.135-139, March 1996[doi>10.1145/236462.236526]
Brito, S., Silva, A. S., Tavares, O., Favero, E. L., and Francês, C. R. L. 2011. Computer supported collaborative learning for helping novice students acquire self-regulated problem-solving skills in computer programming. InProceedings of the 7th International Conference on Frontiers in Education: Computer Science and Computer Engineering (FECS’11). 65--73.
Marc H. Brown, Exploring Algorithms Using Balsa-II, Computer, v.21 n.5, p.14-36, May 1988[doi>10.1109/2.56]
Michael Bruce-Lockhart , Pilu Crescenzi , Theodore Norvell, Integrating test generation functionality into the Teaching Machine environment, Electronic Notes in Theoretical Computer Science (ENTCS), 224, p.115-124, January, 2009[doi>10.1016/j.entcs.2008.12.055]
Bruce-Lockhart, M. P. and Norvell, T. S. 2000. Lifting the hood of the computer: Program animation with the teaching machine. InProceedings of the Canadian Conference on Electrical and Computer Engineering (CCECE’00). 831--835.
Bruce-Lockhart, M. P. and Norvell, T. S. 2007. Developing mental models of computer programming interactively via the Web. InProceedings of the 37th Annual Frontiers in Education Conference (FIE’07).
Michael Bruce-Lockhart , Theodore S. Norvell , Yiannis Cotronis, Program and Algorithm Visualization in Engineering and Physics, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.111-119, July, 2007[doi>10.1016/j.entcs.2007.01.040]
Peter Brusilovsky , Tomasz D. Loboda, WADEIn II: a case for adaptive explanatory visualization, ACM SIGCSE Bulletin, v.38 n.3, September 2006[doi>10.1145/1140123.1140140]
Brusilovsky, P. L. 1992. Intelligent tutor, environment and manual for introductory programming.Educ. Train. Tech. Int. 29, 1, 26--34.
Byckling, P. and Sajaniemi, J. 2005. Using roles of variables in teaching: Effects on program construction. InProceedings of the 17th Workshop of the Psychology of Programming Interest Group (PPIG’05). 278--292.
Martin C. Carlisle, Raptor: a visual programming environment for teaching object-oriented programming, Journal of Computing Sciences in Colleges, v.24 n.4, April 2009
Clancy, M. 2004. Misconceptions and attitudes that interfere with learning to program. InComputer Science Education Research, S. Fincher and M. Petre Eds., Routledge, 85--100.
Clark, R. E. 1982. Antagonism between achievement and enjoyment in ATI studies.Educat. Psychol. 17, 2, 92--101.
Corritore, C. L. and Wiedenbeck, S. 1991. What do novices learn during program comprehension?Int. J. Hum.-Comput. Inter. 3, 2, 199--222.
James H. Cross, II , Larry A. Barowski , T. Dean Hendrix , Joseph C. Teate, Control structure diagrams for Ada 95, Proceedings of the conference on TRI-Ada '96: disciplined software development with Ada, p.143-147, December 03-07, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/240678.240711]
Cross, II, J. H., Hendrix, T. D., and Barowski, L. A. 2002. Using the debugger as an integral part of teaching CS1. InProceedings of the 32nd Annual Frontiers in Education Conference (FIE’02).
James H. Cross II , T. Dean Hendrix , Larry A. Barowski, Combining Dynamic Program Viewing and Testing in Early Computing Courses, Proceedings of the 2011 IEEE 35th Annual Computer Software and Applications Conference, p.184-192, July 18-22, 2011[doi>10.1109/COMPSAC.2011.31]
Cross, II, J. H., Barowski, L. A., Hendrix, D., Umphress, D., and Jain, J. n.d. jGRASP - An integrated development environment with visualizations for improving software comprehensibility (website). http://www.jgrasp.org/.
Allen Cypher , Daniel C. Halbert , David Kurlander , Henry Lieberman , David Maulsby , Brad A. Myers , Alan Turransky, Watch what I do: programming by demonstration, MIT Press, Cambridge, MA, 1993
Deng, J. 2003. Programming by demonstration environment for 1st year students. Master’s thesis, School of Mathematics, Statistics and Computer Science, Victoria University of Wellington.
Onur Donmez , Mustafa Murat Inceoglu, A Web Based Tool for Novice Programmers: Interaction in Use, Proceeding sof the international conference on Computational Science and Its Applications, Part I, June 30-July 03, 2008, Perugia, Italy[doi>10.1007/978-3-540-69839-5_39]
du Boulay, B. 1986. Some difficulties of learning to program.J. Educ. Comput. Res. 2, 1, 57--73.
du Boulay, B., O’Shea, T., and Monk, J. 1981. The black box inside the glass box: Presenting computing concepts to novices.Int. J. Man-Mach. Stud. 14, 237--249.
Gil Ebel , Mordechai Ben-Ari, Affective effects of program visualization, Proceedings of the second international workshop on Computing education research, September 09-10, 2006, Canterbury, United Kingdom[doi>10.1145/1151588.1151590]
Anna Eckerdal , Michael Thuné, Novice Java programmers' conceptions of "object" and "class", and variation theory, ACM SIGCSE Bulletin, v.37 n.3, September 2005[doi>10.1145/1151954.1067473]
Eskola, J. and Tarhio, J. 2002. On visualization of recursion with Excel. InProceedings of the 2nd Program Visualization Workshop (PVW’02). 45--51.
Micaela Esteves , António Mendes, OOP-Anim, a system to support learning of basic object oriented programming concepts, Proceedings of the 4th international conference conference on Computer systems and technologies: e-Learning, p.573-579, June 19-20, 2003, Rousse, Bulgaria[doi>10.1145/973620.973716]
Esteves, M. and Mendes, A. J. 2004. A simulation tool to help learning of object oriented programming basics. InProceedings of the 34th Annual Frontiers in Education Conference (FIE’04).
Jim Etheredge, CMeRun: program logic debugging courseware for CS1/CS2 students, ACM SIGCSE Bulletin, v.36 n.1, March 2004[doi>10.1145/1028174.971311]
Fernández, A., Rossi, G., Morelli, P., Garcia Mari, L., Miranda, S., and Suarez, V. 1998. A learning environment to improve object-oriented thinking. InProceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications (OOPSLA’98).
Fincher, S., E. A. n.d. Share project: Sharing & representing teaching practice (website). http://www.sharingpractice.ac.uk/homepage.html.
Robert Bruce Findler , John Clements , Cormac Flanagan , Matthew Flatt , Shriram Krishnamurthi , Paul Steckler , Matthias Felleisen, DrScheme: a programming environment for Scheme, Journal of Functional Programming, v.12 n.2, p.159-182, March 2002[doi>10.1017/S0956796801004208]
Fitzgerald, S., Lewandowski, G., McCauley, R., Murphy, L., Simon, B., Thomas, L., and Zander, C. 2008. Debugging: Finding, fixing and flailing, a multi-institutional study of novice debuggers.Comp. Sci. Educ. 18, 2, 93--116.
Gajraj, R. R., Williams, M., Bernard, M., and Singh, L. 2011. Transforming source code examples into programming tutorials. InProceedings of the 6th International Multi-Conference on Computing in the Global Information Technology (ICCGI’11). 160--164.
Gallego-Carrillo, M., Gortázar-Bellas, F., and Velázquez-Iturbide, J. Á. 2004. JavaMod: An integrated Java model for Java software visualization. InProceedings of the 3rd Program Visualization Workshop (PVW’04). 102--109.
Carlisle E. George, EROSI—visualising recursion and discovering new errors, ACM SIGCSE Bulletin, v.32 n.1, p.305-309, Mar. 2000[doi>10.1145/331795.331875]
George, C. E. 2000b. Evaluating a pedagogic innovation: Execution models & program construction ability. InProceedings of the 1st Annual Conference of the LTSN Centre for Information and Computer Sciences (LTSN’00). 98--103.
George, C. E. 2000c. Experiences with novices: The importance of graphical representations in supporting mental models. InProceedings of the 12th Workshop of the Psychology of Programming Interest Group (PPIG’00). 33--44.
Carlisle E. George, Using visualization to aid program construction tasks, ACM SIGCSE Bulletin, v.34 n.1, March 2002[doi>10.1145/563517.563413]
Paul Gestwicki , Bharat Jayaraman, Methodology and architecture of JIVE, Proceedings of the 2005 ACM symposium on Software visualization, May 14-15, 2005, St. Louis, Missouri[doi>10.1145/1056018.1056032]
Gilligan, D. 1998. An exploration of programming by demonstration in the domain of novice programming. Master’s thesis, School of Mathematics, Statistics and Computer Science, Victoria University of Wellington.
Ken Goldman , Paul Gross , Cinda Heeren , Geoffrey Herman , Lisa Kaczmarczyk , Michael C. Loui , Craig Zilles, Identifying important and difficult concepts in introductory computing courses using a delphi process, ACM SIGCSE Bulletin, v.40 n.1, March 2008[doi>10.1145/1352322.1352226]
Pedro Pablo Gómez-Martín , Marco Antonio Gómez-Martín , Belén Díaz-Agudo , Pedro A. González-Calero, Opportunities for CBR in learning by doing, Proceedings of the 6th international conference on Case-Based Reasoning Research and Development, August 23-26, 2005, Chicago, IL[doi>10.1007/11536406_22]
Marco A. Gómez-Martín , Pedro P. Gómez-Martín , Pedro A. González-Calero, Dynamic binding is the name of the game, Proceedings of the 5th international conference on Entertainment Computing, September 20-22, 2006, Cambridge, UK[doi>10.1007/11872320_27]
Katsuhiko Gondow , Naoki Fukuyasu , Yoshitaka Arahori, MieruCompiler: integrated visualization tool with "horizontal slicing" for educational compilers, Proceedings of the 41st ACM technical symposium on Computer science education, March 10-13, 2010, Milwaukee, Wisconsin, USA[doi>10.1145/1734263.1734268]
Gračanin, D., Matković, K., and Eltoweissy, M. 2005. Software visualization.Innov. Syst. Softw. Eng. 1, 2, 221--230.
David Gries, A principled approach to teaching OO first, ACM SIGCSE Bulletin, v.40 n.1, March 2008[doi>10.1145/1352322.1352149]
Paul Gries , David Gries, Frames and folders: a teachable memory model for Java, Journal of Computing Sciences in Colleges, v.17 n.6, p.182-196, May 2002
Gries, P., Mnih, V., Taylor, J., Wilson, G., and Zamparo, L. 2005. Memview: A pedagogically-motivated visual debugger. InProceedings of the 35th Annual Frontiers in Education Conference (FIE’05). 11--16.
Philip J. Guo, Online python tutor: embeddable web-based program visualization for cs education, Proceeding of the 44th ACM technical symposium on Computer science education, March 06-09, 2013, Denver, Colorado, USA[doi>10.1145/2445196.2445368]
J. Haajanen , M. Pesonius , E. Sutinen , J. Tarhio , T. Terasvirta , P. Vanninen, Animation of user algorithms on the Web, Proceedings of the 1997 IEEE Symposium on Visual Languages (VL '97), p.356, April 23-26, 1997
Hattie, J. and Purdie, N. 1998. The SOLO model: Addressing fundamental measurement issues. InTeaching and Learning in Higher Education, B. Dart and G. Boulton-Lewis Eds., Australian Council for Educational Research, 145--176.
M. Hauswirth , M. Jazayeri , A. Winzer, A Java-based environment for teaching programming language concepts, Proceedings of the 28th Annual Frontiers in Education, p.296-300, November 04-07, 1998
Helminen, J. 2009. Jype - An education-oriented integrated program visualization, visual debugging, and programming exercise tool for Python. Master’s thesis, Department of Computer Science and Engineering, Helsinki University of Technology.
Juha Helminen , Lauri Malmi, Jype - a program visualization and programming exercise tool for Python, Proceedings of the 5th international symposium on Software visualization, October 25-26, 2010, Salt Lake City, Utah, USA[doi>10.1145/1879211.1879234]
Matthew Hertz , Maria Jump, Trace-based teaching in early programming courses, Proceeding of the 44th ACM technical symposium on Computer science education, March 06-09, 2013, Denver, Colorado, USA[doi>10.1145/2445196.2445364]
Mark A. Holliday , David Luginbuhl, CS1 assessment using memory diagrams, ACM SIGCSE Bulletin, v.36 n.1, March 2004[doi>10.1145/1028174.971373]
Huizing, C., Kuiper, R., Luijten, C., and Vandalon, V. 2012. Visualization of object-oriented (Java) programs. InProceedings of the 4th International Conference on Computer Supported Education (CSEDU’12). 65--72.
Hundhausen, C. D., Douglas, S. A., and Stasko, J. T. 2002. A meta-study of algorithm visualization effectiveness.J. Vis. Lang. Comput. 13, 3, 259--290.
S. Isoda , T. Shimomura , Y. Ono, VIPS: A Visual Debugger, IEEE Software, v.4 n.3, p.8-19, May 1987[doi>10.1109/MS.1987.230394]
Essi Isohanni , Maria Knobelsdorf, Behind the curtain: students' use of VIP after class, Proceedings of the Sixth international workshop on Computing education research, August 09-10, 2010, Aarhus, Denmark[doi>10.1145/1839594.1839610]
Essi Isohanni , Maria Knobelsdorf, Students' long-term engagement with the visualization tool VIP, Proceedings of the 11th Koli Calling International Conference on Computing Education Research, November 17-20, 2011, Koli, Finland[doi>10.1145/2094131.2094138]
Guillermo Jiménez-Díaz , Mercedes Gómez-Albarrán , Marco A. Gómez-Martin , Pedro A. González-Calero, Software behaviour understanding Supported by dynamic visualization and role-play, ACM SIGCSE Bulletin, v.37 n.3, September 2005[doi>10.1145/1151954.1067464]
Guillermo Jiménez-Díaz , Mercedes Gómez-Albarrán , Pedro A. González-Calero, Role-Play Virtual Environments: Recreational Learning of Software Design, Proceedings of the 3rd European conference on Technology Enhanced Learning: Times of Convergence: Technologies Across Learning Contexts, p.27-32, September 16-19, 2008, Maastricht, The Netherlands[doi>10.1007/978-3-540-87605-2_3]
Guillermo Jimenez-Diaz , Pedro A. Gonzalez-Calero , Mercedes Gomez-Albarran, Role-play virtual worlds for teaching object-oriented design: the ViRPlay development experience, Software—Practice & Experience, v.42 n.2, p.235-253, February 2012[doi>10.1002/spe.1071]
Richardo Jiménez-Peris , Cristóbal Pareja-Flores , Marta Patiño-Martínez , J. Ángel Velázquez-Iturbide, The locker metaphor to teach dynamic memory, ACM SIGCSE Bulletin, v.29 n.1, p.169-173, March 1997[doi>10.1145/268085.268144]
Ricardo Jiménez-Peris , Marta Patiño-Martínez , Jorge Pacios-Martínez, VisMod: a beginner-friendly programming environment, Proceedings of the 1999 ACM symposium on Applied computing, p.115-120, February 28-March 02, 1999, San Antonio, Texas, USA[doi>10.1145/298151.298218]
Jones, A. 1992. Conceptual models of programming environments: How learners use the glass box.Instruct. Sci. 21, 6, 473--500.
Kaila, E. 2008. A survey of Finnish university teachers on the teaching of programming and tool adoption, in Finnish. http://www.cs.hut.fi/Research/COMPSER/Verkostohanke/raportti.pdf.
Erkki Kaila , Teemu Rajala , Mikko-Jussi Laakso , Tapio Salakoski, Automatic assessment of program visualization exercises, Proceedings of the 8th International Conference on Computing Education Research, November 13-16, 2008, Koli, Finland[doi>10.1145/1595356.1595376]
Kaila, E., Laakso, M.-J., Rajala, T., and Salakoski, T. 2009a. Evaluation of learner engagement in program visualization. InProceedings of the12th International Conference on Computers and Advanced Technology in Education (IASTED’09).
Kaila, E., Rajala, T., Laakso, M.-J., and Salakoski, T. 2009b. Effects, experiences and feedback from studies of a program visualization tool.Inform. Educ. 8, 1, 17--34.
Erkki Kaila , Teemu Rajala , Mikko-Jussi Laakso , Tapio Salakoski, Effects of course-long use of a program visualization tool, Proceedings of the Twelfth Australasian Conference on Computing Education, January 01-01, 2010, Brisbane, Australia
Kannusmäki, O., Moreno, A., Myller, N., and Sutinen, E. 2004. What a novice wants: Students using program visualization in distance programming course. InProceedings of the 3rd Program Visualization Workshop (PVW’04). 126--133.
Ville Karavirta, Integrating Algorithm Visualization Systems, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.79-87, July, 2007[doi>10.1016/j.entcs.2007.01.030]
Kathryn Kasmarik , Joe Thurbon, Experimental evaluation of a program visualisation tool for use in computer science education, Proceedings of the Asia-Pacific symposium on Information visualisation, p.111-116, January 01, 2003, Adelaide, Australia
Caitlin Kelleher , Randy Pausch, Lowering the barriers to programming: A taxonomy of programming environments and languages for novice programmers, ACM Computing Surveys (CSUR), v.37 n.2, p.83-137, June 2005[doi>10.1145/1089733.1089734]
Kirby, S., Toland, B., and Deegan, C. 2010. Program visualization tool for teaching programming in C. InProceedings of the International Conference on Education, Training and Informatics (ICETI’10).
Michael Kölling, Using BlueJ to Introduce Programming, Reflections on the Teaching of Programming: Methods and Implementations, Springer-Verlag, Berlin, Heidelberg, 2008[doi>10.1007/978-3-540-77934-6_9]
Steven Kollmansberger, Helping students build a mental model of computation, Proceedings of the fifteenth annual conference on Innovation and technology in computer science education, June 26-30, 2010, Bilkent, Ankara, Turkey[doi>10.1145/1822090.1822127]
Korhonen, A. n.d. Ohjelmoinnin perusopetuksen verkosto. http://www.cs.hut.fi/Research/COMPSER/Verkostohanke/index.shtml A website for networking amongst Finnish teachers of introductory programming. Finnish Virtual University.
Korhonen, A., Helminen, J., Karavirta, V., and Seppälä, O. 2009a. TRAKLA2. InProceedings of the 9th Koli Calling International Conference on Computing Education Research (KoliCalling’09). 43--46.
Korhonen, A., Laakso, M.-J., and Myller, N. 2009b. How does algorithm visualization affect collaboration? Video analysis of engagement and discussions. InProceedings of the 5th International Conference on Web Information Systems and Technologies (WEBIST’09). 479--488.
Korhonen, A., Malmi, L., Silvasti, P., Karavirta, V., Lönnberg, J., Nikander, J., Stålnacke, K., and Ihantola, P. 2004. Matrix - A framework for interactive software visualization. Research rep. TKO-B 154/04, Department of Computer Science and Engineering, Helsinki University of Technology.
J. F. Korsh , R. Sangwan, Animating programs and students in the laboratory, Proceedings of the 28th Annual Frontiers in Education, p.1139-1144, November 04-07, 1998
Amruth N. Kumar, Results from the evaluation of the effectiveness of an online tutor on expression evaluation, ACM SIGCSE Bulletin, v.37 n.1, 2005[doi>10.1145/1047124.1047422]
Amruth N. Kumar, Data space animation for learning the semantics of C++ pointers, ACM SIGCSE Bulletin, v.41 n.1, March 2009[doi>10.1145/1539024.1509039]
Laakso, M.-J., Myller, N., and Korhonen, A. 2009. Comparing learning performance of students using algorithm visualizations collaboratively on different engagement levels.J. Educ. Tech. Soc. 12, 2, 267--282.
Laakso, M.-J., Rajala, T., Kaila, E., and Salakoski, T. 2008. The impact of prior experience in using a visualization tool on learning to program. InProceedings of Cognition and Exploratory Learning in Digital Age (CELDA’08). 129--136.
LaFollette, P., Korsh, J., and Sangwan, R. 2000. A visual interface for effortless animation of C/C++ programs.J. Vis. Lang. Comput. 11, 1, 27--48.
Lahtinen, E. and Ahoniemi, T. 2005. Visualizations to support programming on different levels of cognitive development. InProceedings of the 5th Koli Calling Conference on Computer Science Education (KoliCalling’05). 87---94.
Essi Lahtinen , Tuukka Ahoniemi, Annotations for Defining Interactive Instructions to Interpreter Based Program Visualization Tools, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.121-128, July, 2007[doi>10.1016/j.entcs.2007.01.041]
Essi Lahtinen , Kirsti Ala-Mutka , Hannu-Matti Järvinen, A study of the difficulties of novice programmers, ACM SIGCSE Bulletin, v.37 n.3, September 2005[doi>10.1145/1151954.1067453]
Essi Lahtinen , Tuukka Ahoniemi , Anniina Salo, Effectiveness of integrating program visualizations to a programming course, Proceedings of the Seventh Baltic Sea Conference on Computing Education Research, November 15-18, 2007, Koli National Park, Finland
Essi Lahtinen , Hannu-Matti Järvinen , Suvi Melakoski-Vistbacka, Targeting program visualizations, ACM SIGCSE Bulletin, v.39 n.3, September 2007[doi>10.1145/1269900.1268858]
Larochelle, M., Bednarz, N., and Garrison, J., Eds. 1998.Constructivism and Education. Cambridge University Press.
Matti Lattu , Veijo Meisalo , Jorma Tarhio, A visualisation tool as a demonstration aid, Computers & Education, v.41 n.2, p.133-148, September 2003[doi>10.1016/S0360-1315(03)00032-0]
Lattu, M., Tarhio, J., and Meisalo, V. 2000. How a visualization tool can be used - Evaluating a tool in a research & development project. InProceedings of the 18th Workshop of the Psychology of Programming Interest Group (PPIG’’00). 19--32.
Tobias Lauer, Learner interaction with algorithm visualizations: viewing vs. changing vs. constructing, ACM SIGCSE Bulletin, v.38 n.3, September 2006[doi>10.1145/1140123.1140179]
Lessa, D., Czyz, J. K., Gestwicki, P. V., and Jayaraman, B. n.d. JIVE: Java interactive visualization environment (website). http://www.cse.buffalo.edu/jive/.
Henry Lieberman, Steps toward better debugging tools for LISP, Proceedings of the 1984 ACM Symposium on LISP and functional programming, p.247-255, August 06-08, 1984, Austin, Texas, USA[doi>10.1145/800055.802041]
Lieberman, H. and Fry, C. 1997. ZStep 95: A reversible, animated source code stepper. InSoftware Visualization: Programming as a Multimedia Experience, J. Stasko, J. Domingue, B. Price, and M. Brown Eds., MIT Press, 277--292.
Raymond Lister , Elizabeth S. Adams , Sue Fitzgerald , William Fone , John Hamer , Morten Lindholm , Robert McCartney , Jan Erik Moström , Kate Sanders , Otto Seppälä , Beth Simon , Lynda Thomas, A multi-national study of reading and tracing skills in novice programmers, ACM SIGCSE Bulletin, v.36 n.4, December 2004[doi>10.1145/1041624.1041673]
Luijten, C. 2009. Interactive visualization of the execution of object-oriented programs. Master’s thesis, Department of Mathematics and Computer Science, Eindhoven University of Technology.
Ma, L. 2007. Investigating and improving novice programmers’ mental models of programming concepts. Doctoral dissertation, Department of Computer & Information Sciences, University of Strathclyde.
Linxiao Ma , John Ferguson , Marc Roper , Isla Ross , Murray Wood, Improving the mental models held by novice programmers using cognitive conflict and jeliot visualisations, ACM SIGCSE Bulletin, v.41 n.3, September 2009[doi>10.1145/1595496.1562931]
Ma, L., Ferguson, J., Roper, M., and Wood, M. 2011. Investigating and improving the models of programming concepts held by novice programmers..Comp. Sci. Educ. 21, 1, 57--80.
Jonathan I. Maletic , Andrian Marcus , Michael L. Collard, ATask Oriented View of Software Visualization, Proceedings of the 1st International Workshop on Visualizing Software for Understanding and Analysis, p.32, June 26-26, 2002
Mann, L. M., Linn, M. C., and Clancy, M. 1994. Can tracing tools contribute to programming proficiency? The LISP evaluation modeler.Inter. Learn. Envir. 4, 1, 96--113.
Maravić Čisar, S., Pinter, R., Radosav, D., and Čisar, P. 2010. Software visualization: The educational tool to enhance student learning. InProceedings of the 33rd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO’10). 990--994.
Maravić Čisar, S., Radosav, D., Pinter, R., and Čisar, P. 2011. Effectiveness of program visualization in learning Java: A case study with Jeliot 3.Int. J. Comp. Comm. Control 6, 4, 669--682.
Mayer, R. E. 1975. Different problem-solving competencies established in learning computer programming with and without meaningful models.J. Educ. Psych. 67, 6, 725--734.
Mayer, R. E. 1976. Some conditions of meaningful learning for computer programming: advance organizers and subject control of frame order.J. Educ. Psych. 68, 143--150.
Richard E. Mayer, The Psychology of How Novices Learn Computer Programming, ACM Computing Surveys (CSUR), v.13 n.1, p.121-141, March 1981[doi>10.1145/356835.356841]
Mayer, R. E., Ed. 2005.The Cambridge Handbook of Multimedia Learning. Cambridge University Press.
Richard E. Mayer, Multimedia Learning, Cambridge University Press, New York, NY, 2009
L. A.. Miller, Natural language programming: styles, strategies, and contrasts, IBM Systems Journal, v.20 n.2, p.184-215, June 1981[doi>10.1147/sj.202.0184]
Iain Milne , Glenn Rowe, Difficulties in Learning and Teaching Programming—Views of Students and Tutors, Education and Information Technologies, v.7 n.1, p.55-66, March 2002[doi>10.1023/A:1015362608943]
Iain Milne , Glenn Rowe, OGRE: Three-Dimensional Program Visualization for Novice Programmers, Education and Information Technologies, v.9 n.3, p.219-237, September 2004[doi>10.1023/B:EAIT.0000042041.04999.17]
Miyadera, Y., Kurasawa, K., Nakamura, S., Yonezawa, N., and Yokoyama, S. 2007. A real-time monitoring system for programming education using a generator of program animation systems.J. Comp. 2, 3, 12--20.
Jan Moons , Carlos De Backer, The design and pilot evaluation of an interactive learning environment for introductory programming influenced by cognitive load theory and constructivism, Computers & Education, v.60 n.1, p.368-384, January, 2013[doi>10.1016/j.compedu.2012.08.009]
Moreno, A. 2005. The design and implementation of intermediate codes for software visualization. Master’s thesis, Department of Computer Science, University of Joensuu.
Andrés Moreno , Mike S. Joy, Jeliot 3 in a Demanding Educational Setting, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.51-59, July, 2007[doi>10.1016/j.entcs.2007.01.033]
Moreno, A. and Myller, N. 2003. Producing an educationally effective and usable tool for learning, the case of the Jeliot family. InProceedings of the International Conference on Networked e-learning for European Universities (EUROPACE’03).
Andrés Moreno , Niko Myller , Erkki Sutinen , Mordechai Ben-Ari, Visualizing programs with Jeliot 3, Proceedings of the working conference on Advanced visual interfaces, May 25-28, 2004, Gallipoli, Italy[doi>10.1145/989863.989928]
Mota, M. P., Brito, S., Moreira, M. P., and Favero, E. L. 2009. Ambiente Integrado à Plataforma Moodle para Apoio ao Desenvolvimento das Habilidades Iniciais de Programação. An environment integrated into the moodle platform for the development of first habits of programming, in Portuguese. InAnais do XX Simpósio Brasileiro de Informatica na Educacaon.
Mselle, L. J. 2011. Enhancing comprehension by using random access memory (RAM) diagrams in teaching programming: Class experiment. InProceedings of the 23rd Annual Workshop of the Psychology of Programming Interest Group (PPIG’11).
Christian Murphy , Eunhee Kim , Gail Kaiser , Adam Cannon, Backstop: a tool for debugging runtime errors, ACM SIGCSE Bulletin, v.40 n.1, March 2008[doi>10.1145/1352322.1352193]
Brad A. Myers, Taxonomies of visual programming and program visualization, Journal of Visual Languages and Computing, v.1 n.1, p.97-123, March, 1990[doi>10.1016/S1045-926X(05)80036-9]
Myers, B. A., Chandhok, R., and Sareen, A. 1988. Automatic data visualization for novice Pascal programmers. InProceedings of the IEEE Workshop on Visual Languages (WVL’88). 192--198.
Myller, N., Bednarik, R., and Moreno, A. 2007a. Integrating dynamic program visualization into BlueJ: The Jeliot 3 extension. InProceedings of the 7th IEEE International Conference on Advanced Learning Technologies (ICALT’07). 505--506.
Niko Myller , Mikko Laakso , Ari Korhonen, Analyzing engagement taxonomy in collaborative algorithm visualization, ACM SIGCSE Bulletin, v.39 n.3, September 2007[doi>10.1145/1269900.1268857]
Niko Myller , Roman Bednarik , Erkki Sutinen , Mordechai Ben-Ari, Extending the Engagement Taxonomy: Software Visualization and Collaborative Learning, ACM Transactions on Computing Education (TOCE), v.9 n.1, p.1-27, March 2009[doi>10.1145/1513593.1513600]
Najjar, L. J. 1998. Principles of educational multimedia user interface design.Hum. Fact. 40, 2, 311--323.
Thomas L. Naps, JHAVÉ: Supporting Algorithm Visualization, IEEE Computer Graphics and Applications, v.25 n.5, p.49-55, September 2005[doi>10.1109/MCG.2005.110]
Thomas L. Naps , Jeremy Stenglein, Tools for visual exploration of scope and parameter passing in a programming languages course, ACM SIGCSE Bulletin, v.28 n.1, p.305-309, March 1996[doi>10.1145/236462.236561]
Thomas L. Naps , Guido Rößling , Vicki Almstrum , Wanda Dann , Rudolf Fleischer , Chris Hundhausen , Ari Korhonen , Lauri Malmi , Myles McNally , Susan Rodger , J. Ángel Velázquez-Iturbide, Exploring the role of visualization and engagement in computer science education, ACM SIGCSE Bulletin, v.35 n.2, June 2003[doi>10.1145/782941.782998]
Nevalainen, S. and Sajaniemi, J. 2005. Short-term effects of graphical versus textual visualization of variables on program perception. InProceedings of the 17th Workshop of the Psychology of Programming Interest Group (PPIG’05). 77--91.
Seppo Nevalainen , Jorma Sajaniemi, An experiment on short-term effects of animated versus static visualization of operations on program perception, Proceedings of the second international workshop on Computing education research, September 09-10, 2006, Canterbury, United Kingdom[doi>10.1145/1151588.1151591]
Nevalainen, S. and Sajaniemi, J. 2008. An experiment on the short-term effects of engagement and representation in program animation.J. Educ. Comput. Res. 39, 4, 395--430.
Rainer Oechsle , Thiemo Morth, Peer Review of Animations Developed by Students, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.181-186, July, 2007[doi>10.1016/j.entcs.2007.01.047]
Rainer Oechsle , Thomas Schmitt, JAVAVIS: Automatic Program Visualization with Object and Sequence Diagrams Using the Java Debug Interface (JDI), Revised Lectures on Software Visualization, International Seminar, p.176-190, May 20-25, 2001
Paas, F., Renkl, A., and Sweller, J., Eds. 2003. Educational psychologist.Cogn. Load Theory 38, 1.
John F. Pane , Brad A. Myers , Chotirat Ann Ratanamahatana, Studying the language and structure in non-programmers' solutions to programming problems, International Journal of Human-Computer Studies, v.54 n.2, p.237-264, Feb. 2001[doi>10.1006/ijhc.2000.0410]
Papert, S. 1993.Mindstorms: Children, Computers, and Powerful Ideas. Da Capo Press.
Cristóbal Pareja-Flores , Jamie Urquiza-Fuentes , J. Ángel Velázquez-Iturbide, WinHIPE: an IDE for functional programming based on rewriting and visualization, ACM SIGPLAN Notices, v.42 n.3, p.14-23, March 2007[doi>10.1145/1273039.1273042]
Pea, R. D. 1986. Language-independent conceptual “bugs” in novice programming.J. Educ. Comp. Res. 2, 1, 25--36.
Arnold Pears , Moritz Rogalli, mJeliot: a tool for enhanced interactivity in programming instruction, Proceedings of the 11th Koli Calling International Conference on Computing Education Research, November 17-20, 2011, Koli, Finland[doi>10.1145/2094131.2094135]
Arnold Pears , Moritz Rogalli, mJeliot: ICT support for interactive teaching of programming, Proceedings of the 2011 Frontiers in Education Conference, p.T1J-1-1-T1J-4, October 12-15, 2011[doi>10.1109/FIE.2011.6143119]
Arnold Pears , Stephen Seidman , Lauri Malmi , Linda Mannila , Elizabeth Adams , Jens Bennedsen , Marie Devlin , James Paterson, A survey of literature on the teaching of introductory programming, ACM SIGCSE Bulletin, v.39 n.4, December 2007[doi>10.1145/1345375.1345441]
Perkins, D. N., Hancock, C., Hobbs, R., Martin, F., and Simmons, R. 1986. Conditions of learning in novice programmers.J. Educ. Comp. Res. 2, 1, 37--55.
Marian Petre, Why looking isn't always seeing: readership skills and graphical programming, Communications of the ACM, v.38 n.6, p.33-44, June 1995[doi>10.1145/203241.203251]
Phillips, D. C., Ed. 2000.Constructivism in Education: Opinions and Second Opinions on Controversial Issues. The National Society for the Study of Education.
Plass, J. L., Moreno, R., and Brünken, R., Eds. 2010.Cognitive Load Theory. Cambridge University Press.
Price, B. A., Baecker, R. M., and Small, I. S. 1993. A principled taxonomy of software visualization.J. Vis. Lang. Comput. 4, 3, 211--266.
Ragonis, N. and Ben-Ari, M. 2005. A long-term investigation of the comprehension of OOP concepts by novices.Comp. Sci. Educ. 15, 3, 203--221.
Teemu Rajala , Mikko-Jussi Laakso , Erkki Kaila , Tapio Salakoski, VILLE: a language-independent program visualization tool, Proceedings of the Seventh Baltic Sea Conference on Computing Education Research, November 15-18, 2007, Koli National Park, Finland
Rajala, T., Laakso, M.-J., Kaila, E., and Salakoski, T. 2008. Effectiveness of program visualization: A case study with the ViLLE tool.J. Inf. Tech. Educ. Innov. Prac. 7, 15--32.
Rajala, T., Kaila, E., Laakso, M.-J., and Salakoski, T. 2009. Effects of collaboration in program visualization. InProceedings of the Technology Enhanced Learning Conference (TELearn’09).
Rajala, T., Kaila, E., and Laakso, M.-J. ViLLE: Collaborative education tool (website). http://ville.cs.utu.fi.
Ramadhan, H. A. 2000. Programming by discovery.J. Comp. Assist. Learn. 16, 83--93.
Haider A. Ramadhan , Fadi Deek , Khalil Shihab, Incorporating  Software Visualization  in the Design of Intelligent  Diagnosis Systems for User Programming, Artificial Intelligence Review, v.16 n.1, p.61-84, September 2001[doi>10.1023/A:1011078011415]
Robinett, W. 1979. Basic Programming.
Gruia-Catalin Roman , Kenneth C. Cox, A Taxonomy of Program Visualization Systems, Computer, v.26 n.12, p.11-24, December 1993[doi>10.1109/2.247643]
Rockford J. Ross, LOPLE: a dynamic library of programming language examples, ACM SIGCUE Outlook, v.17 n.4, p.27-31, Fall 1983[doi>10.1145/1045083.1045087]
Rockford J. Ross, Experience with the DYNAMOD program animator, ACM SIGCSE Bulletin, v.23 n.1, p.35-42, Mar. 1991[doi>10.1145/107005.107013]
Rowe, G. and Thorburn, G. 2000. VINCE - An online tutorial tool for teaching introductory programming.Brit. J. Educ. Tech. 31, 4, 359--369.
Sajaniemi, J. n.d. The roles of variables home page. http://cs.joensuu.fi/~saja/var_roles/.
Jorma Sajaniemi , Marja Kuittinen, Program animation based on the roles of variables, Proceedings of the 2003 ACM symposium on Software visualization, June 11-13, 2003, San Diego, California[doi>10.1145/774833.774835]
Sajaniemi, J. and Kuittinen, M. 2005. An experiment on using roles of variables in teaching introductory programming.Comp. Sci. Educ. 15, 1, 59--82.
Jorma Sajaniemi , Pauli Byckling , Petri Gerdt, Animation Metaphors for Object-Oriented Concepts, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.15-22, July, 2007[doi>10.1016/j.entcs.2007.01.037]
Jorma Sajaniemi , Marja Kuittinen , Taina Tikansalo, A study of the development of students' visualizations of program state during an elementary object-oriented programming course, Journal on Educational Resources in Computing (JERIC), v.7 n.4, p.1-31, January 2008[doi>10.1145/1316450.1316453]
Katharina Scheiter , Peter Gerjets , Richard Catrambone, Making the abstract concrete: Visualizing mathematical solution procedures, Computers in Human Behavior, v.22 n.1, p.9-25, January, 2006[doi>10.1016/j.chb.2005.01.009]
Carsten Schulte , Jens Bennedsen, What do teachers teach in introductory programming?, Proceedings of the second international workshop on Computing education research, September 09-10, 2006, Canterbury, United Kingdom[doi>10.1145/1151588.1151593]
Scott, A., Watkins, M., and McPhee, D. 2008. Progranimate - A Web enabled algorithmic problem solving application. InProceedings of the International Conference on E-Learning, E-Business, Enterprise Information Systems, & E-Government (EEE’’08). 498--508.
Seppälä, O. 2004. Program state visualization tool for teaching CS1. InProceedings of the 3rd Program Visualization Workshop (PVW’04). 118--125.
Shaffer, C. A., Naps, T. L., and Fouh, E. 2011. Truly interactive textbooks for computer science education. InProceedings of the 6th Program Visualization Workshop (PVW’11). 97--106.
Lorraine Sherry, A model computer simulation as an epistemic game, ACM SIGCSE Bulletin, v.27 n.2, p.59-64, June 1995[doi>10.1145/201998.202016]
Shinners-Kennedy, D. 2008. The everydayness of threshold concepts: State as an example from computer science. InThreshold Concepts within the Disciplines, R. Land and J. H. F. Meyer Eds., SensePublishers, 119--128.
Simon, Assignment and sequence: why some students can't recognise a simple swap, Proceedings of the 11th Koli Calling International Conference on Computing Education Research, November 17-20, 2011, Koli, Finland[doi>10.1145/2094131.2094134]
Teemu Sirkiä , Juha Sorva, Exploring programming misconceptions: an analysis of student mistakes in visual program simulation exercises, Proceedings of the 12th Koli Calling International Conference on Computing Education Research, p.19-28, November 15-18, 2012, Koli, Finland[doi>10.1145/2401796.2401799]
Sivula, K. 2005. A qualitative case study on the use of Jeliot 3. Master’s thesis, Department of Computer Science, University of Joensuu.
Sleeman, D., Putnam, R. T., Baxter, J., and Kuspa, L. 1986. Pascal and high school students: A study of errors.J. Educ. Comp. Res. 2, 1, 5--23.
Smith, P. A. and Webb, G. I. 1991. Debugging using partial models. InProceedings of the 4th Australian Society for Computer in Learning in Tertiary Education Conference (ASCILITE’91). 581--590.
Smith, P. A. and Webb, G. I. 1995a. Reinforcing a generic computer model for novice programmers. InProceedings of the 7th Australian Society for Computer in Learning in Tertiary Education Conference (ASCILITE’95).
Smith, P. A. and Webb, G. I. 1995b. Transparency debugging with explanations for novice programmers. InProceedings of the 2nd Workshop on Automated and Algorithmic Debugging (AADEBUG’95). 105--118.
Smith, P. A. and Webb, G. I. 2000. The efficacy of a low-level program visualization tool for teaching programming concepts to novice c programmers.J. Educ. Comp. Res. 22, 2, 187--215.
Juha Sorva, Reflections on threshold concepts in computer programming and beyond, Proceedings of the 10th Koli Calling International Conference on Computing Education Research, p.21-30, October 28-31, 2010, Koli, Finland[doi>10.1145/1930464.1930467]
Sorva, J. 2012. Visual program simulation in introductory programming education. Doctoral dissertation, Department of Computer Science and Engineering, Aalto University.
Juha Sorva, Notional machines and introductory programming education, ACM Transactions on Computing Education (TOCE), v.13 n.2, p.1-31, June 2013[doi>10.1145/2483710.2483713]
Juha Sorva , Teemu Sirkiä, UUhistle: a software tool for visual program simulation, Proceedings of the 10th Koli Calling International Conference on Computing Education Research, p.49-54, October 28-31, 2010, Koli, Finland[doi>10.1145/1930464.1930471]
Sorva, J. and Sirkiä, T. 2011. Context-sensitive guidance in the UUhistle program visualization system. InProceedings of the 6th Program Visualization Workshop (PVW’11). 77--85.
Sorva, J., Lönnberg, J., and Malmi, L. accepted. Students’ ways of experiencing visual program simulation.Comp. Sci. Educ.
Stasko, J. T. and Patterson, C. 1992. Understanding and characterizing software visualization systems. InProceedings of the IEEE Workshop on Visual Languages (VL’92). 3--10.
Stützle, T. and Sajaniemi, J. 2005. An empirical evaluation of visual metaphors in the animation of roles of variables.Inform. Sci. J. 8, 87--100.
Jaishankar Sundararaman , Godmar Back, HDPV: interactive, faithful, in-vivo runtime state visualization for C/C++ and Java, Proceedings of the 4th ACM symposium on Software visualization, September 16-17, 2008, Ammersee, Germany[doi>10.1145/1409720.1409729]
Sutinen, E., Tarhio, J., Lahtinen, S.-P., Tuovinen, A.-P., Rautama, E., and Meisalo, V. 1997. Eliot - An algorithm animation environment. Teaching and Learning rep. A-1997-4, Department of Computer Science, University of Helsinki.
Minoru Terada, ETV: a program trace player for students, ACM SIGCSE Bulletin, v.37 n.3, September 2005[doi>10.1145/1151954.1067480]
Lynda Thomas , Mark Ratcliffe , Benjy Thomasson, Scaffolding with object diagrams in first year programming classes: some unexpected results, ACM SIGCSE Bulletin, v.36 n.1, March 2004[doi>10.1145/1028174.971390]
Thuné, M. and Eckerdal, A. 2010. Students’ conceptions of computer programming. Tech. rep. 2010-021, Department of Information Technology, Uppsala University.
Jaime Urquiza-Fuentes , J. Ángel Velázquez-Iturbide, An Evaluation of the Effortless Approach to Build Algorithm Animations with WinHIPE, Electronic Notes in Theoretical Computer Science (ENTCS), 178, p.3-13, July, 2007[doi>10.1016/j.entcs.2007.01.038]
Jaime Urquiza-Fuentes , J. Ángel Velázquez-Iturbide, A Survey of Successful Evaluations of Program Visualization and Algorithm Animation Systems, ACM Transactions on Computing Education (TOCE), v.9 n.2, p.1-21, June 2009[doi>10.1145/1538234.1538236]
Jaime Urquiza-Fuentes , J. Ángel Velázquez-Iturbide, Comparing the effectiveness of different educational uses of program animations, Proceedings of the 17th ACM annual conference on Innovation and technology in computer science education, July 03-05, 2012, Haifa, Israel[doi>10.1145/2325296.2325340]
Evgenia Vagianou, Program working storage: a beginner's model, Proceedings of the 6th Baltic Sea conference on Computing education research: Koli Calling 2006, February 01-01, 2006, Uppsala, Sweden[doi>10.1145/1315803.1315816]
Vesa Vainio , Jorma Sajaniemi, Factors in novice programmers' poor tracing skills, ACM SIGCSE Bulletin, v.39 n.3, September 2007[doi>10.1145/1269900.1268853]
J. Ángel Velázquez-Iturbide , Antonio Pérez-Carrasco , Jaime Urquiza-Fuentes, SRec: an animation system of recursion for algorithm courses, ACM SIGCSE Bulletin, v.40 n.3, September 2008[doi>10.1145/1597849.1384332]
Virtanen, A. T., Lahtinen, E., and Järvinen, H.-M. 2005. VIP, a visual interpreter for learning introductory programming with C++. InProceedings of the 5th Koli Calling Conference on Computer ACM Transactions on Computing Education (KoliCalling’05). 125--130.
Peng Wang , Roman Bednarik , Andrés Moreno, During automatic program animation, explanations after animations have greater impact than before animations, Proceedings of the 12th Koli Calling International Conference on Computing Education Research, p.100-109, November 15-18, 2012, Koli, Finland[doi>10.1145/2401796.2401808]
Weber, G. and Brusilovsky, P. 2001. ELM-ART: An adaptive versatile system for web-based instruction.Int. J. Art. Intell. Educ. 12, 351--384.
Yehezkel, C., Ben-Ari, M., and Dreyfus, T. 2007. The contribution of visualization to learning computer architecture.Comp. Sci. Educ. 17, 2, 117--127.
