Theresa Beaubouef , John Mason, Why the high attrition rate for computer science students: some thoughts and observations, ACM SIGCSE Bulletin, v.37 n.2, June 2005[doi>10.1145/1083431.1083474]
Andrew Begel, Spoken Language Support for Software Development, Proceedings of the 2004 IEEE Symposium on Visual Languages - Human Centric Computing, p.271-272, September 26-29, 2004[doi>10.1109/VLHCC.2004.49]
Jeffrey P. Bigham , Maxwell B. Aller , Jeremy T. Brudvik , Jessica O. Leung , Lindsay A. Yazzolino , Richard E. Ladner, Inspiring blind high school students to pursue computer science with instant messaging chatbots, Proceedings of the 39th SIGCSE technical symposium on Computer science education, March 12-15, 2008, Portland, OR, USA[doi>10.1145/1352135.1352287]
Binkley, D., Davis, M., Lawrie, D., and Morrell, C. 2009. To CamelCase or under score. InProceedings of the IEEE 17th International Conference on Program Comprehension (ICPC’09). 158--167.
Jeffrey Bonar , Elliot Soloway, Uncovering principles of novice programming, Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.10-13, January 24-26, 1983, Austin, Texas[doi>10.1145/567067.567069]
Alan Borning , Tim O'Shea, Deltatalk: An Empirically and Aesthetically Motivated Simplification of the Smalltalk-80 Language, Proceedings of the European Conference on Object-Oriented Programming, p.1-10, June 15-17, 1987
Brown, M. H. and Hershberger, J. 1991. Color and sound in algorithm animation. InProceedings of the IEEE Workshop on Visual Languages (VL’91). 10--17.
Brendan Cleary , Chris Exton , Jim Buckley , Michael English, An empirical analysis of information retrieval based concept location techniques in software comprehension, Empirical Software Engineering, v.14 n.1, p.93-130, February  2009[doi>10.1007/s10664-008-9095-3]
Comstock, C., Jiang, Z., and Naudé, P. 2007. Strategic software development: Productivity comparisons of general development programs.World Acad. Sci. Eng. Tech. 34, 25--30.
Stephen Cooper, The Design of Alice, ACM Transactions on Computing Education (TOCE), v.10 n.4, p.1-16, November 2010[doi>10.1145/1868358.1868362]
Wanda Dann , Dennis Cosgrove , Don Slater , Dave Culyba , Steve Cooper, Mediated transfer: Alice 3 to Java, Proceedings of the 43rd ACM technical symposium on Computer Science Education, February 29-March 03, 2012, Raleigh, North Carolina, USA[doi>10.1145/2157136.2157180]
Florian Deissenboeck , Markus Pizka, Concise and Consistent Naming, Proceedings of the 13th International Workshop on Program Comprehension, p.97-106, May 15-16, 2005[doi>10.1109/WPC.2005.14]
Daniel P. Delorey , Charles D. Knutson , Scott Chun, Do Programming Languages Affect Productivity? A Case Study Using Data from Open Source Projects, Proceedings of the First International Workshop on Emerging Trends in FLOSS Research and Development, p.8, May 20-26, 2007[doi>10.1109/FLOSS.2007.5]
Delorey, D. P., Knutson, C. D., and Davies, M. 2009. Mining programming language vocabularies from source code. InProceedings of the Psychology of Programming Interest Group Conference (PPIG 2009).
Paul Denny , Andrew Luxton-Reilly , Ewan Tempero, All syntax errors are not equal, Proceedings of the 17th ACM annual conference on Innovation and technology in computer science education, July 03-05, 2012, Haifa, Israel[doi>10.1145/2325296.2325318]
Paul Denny , Andrew Luxton-Reilly , Ewan Tempero , Jacob Hendrickx, Understanding the syntax barrier for novices, Proceedings of the 16th annual joint conference on Innovation and technology in computer science education, June 27-29, 2011, Darmstadt, Germany[doi>10.1145/1999747.1999807]
J. J. Dolado , M. Harman , M. C. Otero , L. Hu, An Empirical Investigation of the Influence of a Type of Side Effects on Program Comprehension, IEEE Transactions on Software Engineering, v.29 n.7, p.665-670, July 2003[doi>10.1109/TSE.2003.1214329]
Richard J. Enbody , William F. Punch, Performance of python CS1 students in mid-level non-python CS courses, Proceedings of the 41st ACM technical symposium on Computer science education, March 10-13, 2010, Milwaukee, Wisconsin, USA[doi>10.1145/1734263.1734437]
Richard J. Enbody , William F. Punch , Mark McCullen, Python CS1 as preparation for C++ CS2, Proceedings of the 40th ACM technical symposium on Computer science education, March 04-07, 2009, Chattanooga, TN, USA[doi>10.1145/1508865.1508907]
Stefan Endrikat , Stefan Hanenberg, Is Aspect-Oriented Programming a Rewarding Investment into Future Code Changes? A Socio-technical Study on Development and Maintenance Time, Proceedings of the 2011 IEEE 19th International Conference on Program Comprehension, p.51-60, June 22-24, 2011[doi>10.1109/ICPC.2011.46]
Feigenspan, J., Kästner, C., Liebig, J., Apel, S., and Hanenberg, S. 2012. Measuring programming experience. InProceedings of the IEEE 20th International Conference on Program Comprehension (ICPC’12).
Robert Bruce Findler , John Clements , Cormac Flanagan , Matthew Flatt , Shriram Krishnamurthi , Paul Steckler , Matthias Felleisen, DrScheme: a programming environment for Scheme, Journal of Functional Programming, v.12 n.2, p.159-182, March 2002[doi>10.1017/S0956796801004208]
Ryan Garlick , Ebru Celikel Cankaya, Using alice in CS1: a quantitative experiment, Proceedings of the fifteenth annual conference on Innovation and technology in computer science education, June 26-30, 2010, Bilkent, Ankara, Turkey[doi>10.1145/1822090.1822138]
Green, T. R. G. and Petre, M. 1996. Usability analysis of visual programming environments: A cognitive dimensions framework.J. Vis. Lang. Comput. 7, 2, 131--174.
Stefan Hanenberg, An experiment about static and dynamic type systems: doubts about the positive impact of static type systems on development time, Proceedings of the ACM international conference on Object oriented programming systems languages and applications, October 17-21, 2010, Reno/Tahoe, Nevada, USA[doi>10.1145/1869459.1869462]
Stefan Hanenberg, Faith, hope, and love: an essay on software science's neglect of human factors, Proceedings of the ACM international conference on Object oriented programming systems languages and applications, October 17-21, 2010, Reno/Tahoe, Nevada, USA[doi>10.1145/1869459.1869536]
Stefan Hanenberg , Sebastian Kleinschmager , Manuel Josupeit-Walter, Does aspect-oriented programming increase the development speed for crosscutting code? An empirical study, Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, p.156-167, October 15-16, 2009[doi>10.1109/ESEM.2009.5316028]
Christian Holmboe, The linguistics of object-oriented design: implications for teaching, Proceedings of the 10th annual SIGCSE conference on Innovation and technology in computer science education, June 27-29, 2005, Caparica, Portugal[doi>10.1145/1067445.1067498]
Richard C. Holt , James R. Cordy, The Turing programming language, Communications of the ACM, v.31 n.12, p.1410-1423, Dec. 1988[doi>10.1145/53580.53581]
R. C. Holt , D. B. Wortman , D. T. Barnard , J. R. Cordy, SP/k: a system for teaching computer programming, Communications of the ACM, v.20 n.5, p.301-309, May 1977[doi>10.1145/359581.359586]
Einar W. Høst, Understanding programmer language, Companion to the 22nd ACM SIGPLAN conference on Object-oriented programming systems and applications companion, October 21-25, 2007, Montreal, Quebec, Canada[doi>10.1145/1297846.1297957]
Einar W. Host , Bjarte M. Ostvold, The Programmer's Lexicon, Volume I: The Verbs, Proceedings of the Seventh IEEE International Working Conference on Source Code Analysis and Manipulation, p.193-202, September 30-October 01, 2007[doi>10.1109/SCAM.2007.31]
Hubert, L. 1977. Kappa revisited.Psychol. Bull. 84, 2, 289--297.
Christopher D. Hundhausen , Sean F. Farley , Jonathan L. Brown, Can direct manipulation lower the barriers to computer programming and promote transfer of training?: An experimental study, ACM Transactions on Computer-Human Interaction (TOCHI), v.16 n.3, p.1-40, September 2009[doi>10.1145/1592440.1592442]
Kaptchuk, T. J. 1998. Intentional ignorance: A history of blind assessment and placebo controls in medicine.Bull. Hist. Med. 72, 3, 389--433.
Caitlin Kelleher , Randy Pausch, Lowering the barriers to programming: A taxonomy of programming environments and languages for novice programmers, ACM Computing Surveys (CSUR), v.37 n.2, p.83-137, June 2005[doi>10.1145/1089733.1089734]
G. Kiczales, Aspect-oriented programming, ACM Computing Surveys (CSUR), v.28 n.4es, Dec. 1996[doi>10.1145/242224.242420]
Kleinschmager, S., Hanenberg, S., Robbes, R., Tanter, E., and Stefik, A. 2012. Do static type systems improve the maintainability of software systems? An empirical study. InProceedings of the IEEE 20th International Conference on Program Comprehension (ICPC’12).
Kline, P. 2002.An Easy Guide to Factor Analysis. New York, NY: Routledge.
Andrew J. Ko , Brad A. Myers, Finding causes of program output with the Java Whyline, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, April 04-09, 2009, Boston, MA, USA[doi>10.1145/1518701.1518942]
Andrew J. Ko , Robin Abraham , Laura Beckwith , Alan Blackwell , Margaret Burnett , Martin Erwig , Chris Scaffidi , Joseph Lawrance , Henry Lieberman , Brad Myers , Mary Beth Rosson , Gregg Rothermel , Mary Shaw , Susan Wiedenbeck, The state of the art in end-user software engineering, ACM Computing Surveys (CSUR), v.43 n.3, p.1-44, April 2011[doi>10.1145/1922649.1922658]
Bil Lewis , Mireille Ducasse, Using events to debug Java programs backwards in time, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, October 26-30, 2003, Anaheim, CA, USA[doi>10.1145/949344.949367]
Raymond Lister , Elizabeth S. Adams , Sue Fitzgerald , William Fone , John Hamer , Morten Lindholm , Robert McCartney , Jan Erik Moström , Kate Sanders , Otto Seppälä , Beth Simon , Lynda Thomas, A multi-national study of reading and tracing skills in novice programmers, Working group reports from ITiCSE on Innovation and technology in computer science education, June 28-30, 2004, Leeds, United Kingdom[doi>10.1145/1044550.1041673]
Cristina Videira Lopes , Paul Dourish , David H. Lorenz , Karl Lieberherr, Beyond AOP: toward naturalistic programming, Companion of the 18th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, October 26-30, 2003, Anaheim, CA, USA[doi>10.1145/949344.949400]
George Lukas, Uses of the LOGO programming language in undergraduate instruction, Proceedings of the ACM annual conference, p.1130-1136, August 01-01, 1972, Boston, Massachusetts, USA[doi>10.1145/800194.805908]
John Maloney , Mitchel Resnick , Natalie Rusk , Brian Silverman , Evelyn Eastmond, The Scratch Programming Language and Environment, ACM Transactions on Computing Education (TOCE), v.10 n.4, p.1-15, November 2010[doi>10.1145/1868358.1868363]
Shane Markstrum, Staking claims: a history of programming language design claims and evidence: a positional work in progress, Evaluation and Usability of Programming Languages and Tools, p.1-5, October 17-21, 2010, Reno, Nevada[doi>10.1145/1937117.1937124]
Clemens Mayer , Stefan Hanenberg , Romain Robbes , Éric Tanter , Andreas Stefik, An empirical study of the influence of static type systems on the usability of undocumented software, Proceedings of the ACM international conference on Object oriented programming systems languages and applications, October 19-26, 2012, Tucson, Arizona, USA[doi>10.1145/2384616.2384666]
Anneliese von Mayrhauser , A. Marie Vans, Program understanding behavior during debugging of large scale software, Papers presented at the seventh workshop on Empirical studies of programmers, p.157-179, October 1997, Alexandria, Virginia, USA[doi>10.1145/266399.266414]
McIver, L. K. 2001. Syntactic and semantic issues in introductory programming education. Ph.D. thesis, Monash University.
Leo A. Meyerovich , Ariel S. Rabkin, Socio-PLT: principles for programming language adoption, Proceedings of the ACM international symposium on New ideas, new paradigms, and reflections on programming and software, October 19-26, 2012, Tucson, Arizona, USA[doi>10.1145/2384592.2384597]
Brad A. Myers , John F. Pane , Andy Ko, Natural programming languages and environments, Communications of the ACM, v.47 n.9, September 2004[doi>10.1145/1015864.1015888]
Brad A. Myers , Andrew J. Ko , Sun Young Park , Jeffrey Stylos , Thomas D. LaToza , Jack Beaton, More natural end-user software engineering, Proceedings of the 4th international workshop on End-user software engineering, p.30-34, May 12-12, 2008, Leipzig, Germany[doi>10.1145/1370847.1370854]
John F. Pane , Brad A. Myers , Chotirat Ann Ratanamahatana, Studying the language and structure in non-programmers' solutions to programming problems, International Journal of Human-Computer Studies, v.54 n.2, p.237-264, Feb. 2001[doi>10.1006/ijhc.2000.0410]
Randy Pausch, Alice: a dying man's passion, Proceedings of the 39th SIGCSE technical symposium on Computer science education, March 12-15, 2008, Portland, OR, USA[doi>10.1145/1352135.1352137]
Nancy Pennington, Comprehension strategies in programming, Empirical studies of programmers: second workshop, Ablex Publishing Corp., Norwood, NJ, 1987
Pennington, N. 1987b. Stimulus structures and mental representations in expert comprehension of computer programs.Cogn. Psych. 19, 295--341.
Pinker, S. 1991. Rules of language.Sci. 253, 530--535.
Guillaume Pothier , Éric Tanter , José Piquer, Scalable omniscient debugging, Proceedings of the 22nd annual ACM SIGPLAN conference on Object-oriented programming systems and applications, October 21-25, 2007, Montreal, Quebec, Canada[doi>10.1145/1297027.1297067]
Vennila Ramalingam , Susan Wiedenbeck, An empirical study of novice program comprehension in the imperative and object-oriented styles, Papers presented at the seventh workshop on Empirical studies of programmers, p.124-139, October 1997, Alexandria, Virginia, USA[doi>10.1145/266399.266411]
Mitchel Resnick , John Maloney , Andrés Monroy-Hernández , Natalie Rusk , Evelyn Eastmond , Karen Brennan , Amon Millner , Eric Rosenbaum , Jay Silver , Brian Silverman , Yasmin Kafai, Scratch: programming for all, Communications of the ACM, v.52 n.11, November 2009[doi>10.1145/1592761.1592779]
Christopher J. Rossbach , Owen S. Hofmann , Emmett Witchel, Is transactional programming actually easier?, ACM SIGPLAN Notices, v.45 n.5, May 2010[doi>10.1145/1837853.1693462]
Jaime Sánchez , Fernando Aguayo, Blind learners programming through audio, CHI '05 Extended Abstracts on Human Factors in Computing Systems, April 02-07, 2005, Portland, OR, USA[doi>10.1145/1056808.1057018]
Carsten Schulte , Johannes Magenheim, Novices' expectations and prior knowledge of software development: results of a study with high school students, Proceedings of the first international workshop on Computing education research, p.143-153, October 01-02, 2005, Seattle, WA, USA[doi>10.1145/1089786.1089800]
Science House of Commons and Technology Committee. 2010. Evidence check 2: Homeopathy, fourth report of session 2009-10. http://www.publications.parliament.uk/pa/cm200910/cmselect/cmsctech/45/45.pdf.
Ann C. Smith , Justin S. Cook , Joan M. Francioni , Asif Hossain , Mohd Anwar , M. Fayezur Rahman, Nonvisual tool for navigating hierarchical structures, Proceedings of the 6th international ACM SIGACCESS conference on Computers and accessibility, October 18-20, 2004, Atlanta, GA, USA[doi>10.1145/1028630.1028654]
Elliot Soloway , Jeffrey Bonar , Kate Ehrlich, Cognitive strategies and looping constructs: an empirical study, Communications of the ACM, v.26 n.11, p.853-860, Nov. 1983[doi>10.1145/182.358436]
Stefik, A. 2008. On the design of program execution environments for non-sighted computer programmers. Ph.D. thesis, Washington State University.
Andreas Stefik , Roger Alexander , Robert Patterson , Jonathan Brown, WAD: A Feasibility study using the Wicked Audio Debugger, Proceedings of the 15th IEEE International Conference on Program Comprehension, p.69-80, June 26-29, 2007[doi>10.1109/ICPC.2007.42]
Stefik, A. and Gellenbeck, E. 2009. Using spoken text to aid debugging: An empirical study. InProceedings of the 17th IEEE International Conference on Program Comprehension (ICPC’09). 110--119.
Andreas Stefik , Ed Gellenbeck, Empirical studies on programming language stimuli, Software Quality Control, v.19 n.1, p.65-99, March     2011[doi>10.1007/s11219-010-9106-7]
Andreas Stefik , Christopher Hundhausen , Robert Patterson, An empirical investigation into the design of auditory cues to enhance computer program comprehension, International Journal of Human-Computer Studies, v.69 n.12, p.820-838, December, 2011[doi>10.1016/j.ijhcs.2011.07.002]
Andreas M. Stefik , Christopher Hundhausen , Derrick Smith, On the design of an educational infrastructure for the blind and visually impaired in computer science, Proceedings of the 42nd ACM technical symposium on Computer science education, March 09-12, 2011, Dallas, TX, USA[doi>10.1145/1953163.1953323]
Andreas Stefik , Susanna Siebert , Melissa Stefik , Kim Slattery, An empirical comparison of the accuracy rates of novices using the quorum, perl, and randomo programming languages, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, October 24-24, 2011, Portland, Oregon, USA[doi>10.1145/2089155.2089159]
Friedrich Steimann, The paradoxical success of aspect-oriented programming, Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications, October 22-26, 2006, Portland, Oregon, USA[doi>10.1145/1167473.1167514]
Jeffrey Stylos , Steven Clarke, Usability Implications of Requiring Parameters in Objects' Constructors, Proceedings of the 29th international conference on Software Engineering, p.529-539, May 20-26, 2007[doi>10.1109/ICSE.2007.92]
Jeffrey Stylos , Brad A. Myers, The implications of method placement on API learnability, Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, November 09-14, 2008, Atlanta, Georgia[doi>10.1145/1453101.1453117]
Taylor, J. 1990. Analyzing novices analyzing prolog: What stories do novices tell themselves about prolog?Instruct. Sci. 19, 283--309.
Tim Teitelbaum , Thomas Reps, The Cornell program synthesizer: a syntax-directed programming environment, Communications of the ACM, v.24 n.9, p.563-573, Sept. 1981[doi>10.1145/358746.358755]
Allison Elliott Tew , Mark Guzdial, The FCS1: a language independent assessment of CS1 knowledge, Proceedings of the 42nd ACM technical symposium on Computer science education, March 09-12, 2011, Dallas, TX, USA[doi>10.1145/1953163.1953200]
Vickers, P. and Alty, J. L. 2002. When bugs sing.Interact. Comp. 14, 6, 793--819.
Vogt, W. P. 2006.Quantitative Research Methods for Professionals in Education and Other Fields, 1st Ed. Allyn and Bacon, Columbus, OH.
Whitney, P. 1998.The Psychology of Language. Houghton Mifflin Company, Boston, MA.
