In this article, the development of the Swedish informatics curriculum during the 1970s, 1980s and 1990s is studied and described. The study’s design is inspired by the curriculum theory presented by Lindensjö and Lundgren [2000], who suggest using the concept of arenas (the arenas of enactment, transformation and realisation) when discussing curriculum development. Data collection in this study comprises activities and actors in the arenas of enactment and transformation. Collected data include contemporary articles, journals, reports, booklets, government documents and archived documents. Findings show that informatics education in Sweden evolved from primarily focusing on programming knowledge related to automatic data processing and offered exclusively in vocational education (the 1960s and 1970s) to later (early 1980s) being introduced in the upper secondary school curriculum under the headingDatakunskap. The enactment of the informatics curriculum in 1983 encompassed programming, system development and computing in relation to applied sciences and civics. Mathematics teachers did much of the experimental work. It is shown that the competencies of upper secondary school teachers at the time rarely corresponded to the demands of the subject (content knowledge, resources and pedagogical skills). Stereotypical examples were therefore developed to support teachers in instructing about the subject content. When implemented in the theoretical natural science-programme, system development/systemisation was transformed into a twofold issue, comprising vocational attributes and societal aspects of computer programming. The implementation of today’s informatics education, including programming in the curriculum, should draw from lessons learned from history. For a successful outcome, this study emphasises the necessity to understand 1) the common incentives for introducing computer programming in the curriculum, 2) the requirement for teachers’ pedagogical content knowledge and 3) the stakeholders’ role in the curriculum development process.