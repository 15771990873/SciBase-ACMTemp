We present the first dynamic algorithm that maintains a clique tree representation of a chordal graph and supports the following operations: (1) query whether deleting or inserting an arbitrary edge preserves chordality; and (2) delete or insert an arbitrary edge, provided it preserves chordality. We give two implementations. In the first, each operation runs inO(n) time, wherenis the number of vertices. In the second, an insertion query runs inO(log2n) time, an insertion inO(n) time, a deletion query inO(n) time, and a deletion inO(nlogn) time. We also present a data structure that allows a deletion query to run inO(&sqrt;m) time in either implementation, wheremis the current number of edges. Updating this data structure after a deletion or insertion requiresO(m) time.We also present a very simple dynamic algorithm that supports each of the following operations inO(1) time on a general graph: (1) query whether the graph is split, and (2) delete or insert an arbitrary edge.