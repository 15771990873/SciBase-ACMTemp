We show that any priority queue data structure that supportsinsert,delete, andfind-minoperations inpq(n) amortized time, wherenis an upper bound on the number of elements in the priority queue, can be converted into a priority queue data structure that also supports fastmeldoperations with essentially no increase in the amortized cost of the other operations. More specifically, the new data structure supportsinsert,meldandfind-minoperations inO(1) amortized time, anddeleteoperations inO(pq(n) &plus; α(n)) amortized time, where α(n) is a functional inverse of the Ackermann function, and wherenthis time is the total number of operations performed on all the priority queues. The construction is very simple. The meldable priority queues are obtained by placing a nonmeldable priority queues at each node of a union-find data structure. We also show that when all keys are integers in the range [1,N], we can replacenin the bound stated previously by min&lcub;n,N&rcub;.Applying this result to the nonmeldable priority queue data structures obtained recently by Thorup [2002b] and by Han and Thorup [2002] we obtain meldable RAM priority queues withO(log logn) amortized time per operation, orO(&sqrt;log logn) expected amortized time per operation, respectively. As a by-product, we obtain improved algorithms for the minimum directed spanning tree problem on graphs with integer edge weights, namely, a deterministicO(mlog logn)-time algorithm and a randomizedO(m&sqrt;log logn)-time algorithm. For sparse enough graphs, these bounds improve on theO(m&plus;nlogn) running time of an algorithm by Gabow et al. [1986] that works for arbitrary edge weights.