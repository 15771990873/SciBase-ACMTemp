We consider the problem of maintaining a dynamic dictionaryTof keys and associated data for which both the keys and data are bit strings that can vary in length from zero up to the lengthwof a machine word. We present a data structure for this variable-bit-length dictionary problem that supports constant time lookup and expected amortized constant-time insertion and deletion. It usesO(m&plus; 3n−nlog2n) bits, wherenis the number of elements inT, andmis the total number of bits across all strings inT(keys and data). Our dictionary uses an arrayA&lsqb;1 …n&rsqb; in which locations store variable-bit-length strings. We present a data structure for this variable-bit-length array problem that supports worst-case constant-time lookups and updates and usesO(m&plus;n) bits, wheremis the total number of bits across all strings stored inA.The motivation for these structures is to support applications for which it is helpful to efficiently store short varying-length bit strings. We present several applications, including representations for semidynamic graphs, order queries on integers sets, cardinal trees with varying cardinality, and simplicial meshes ofddimensions. These results either generalize or simplify previous results.