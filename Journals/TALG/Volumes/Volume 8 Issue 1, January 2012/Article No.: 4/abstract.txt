This article presents asymptotically optimal algorithms for rectangular matrix transpose, fast Fourier transform (FFT), and sorting on computers with multiple levels of caching. Unlike previous optimal algorithms, these algorithms arecache oblivious: no variables dependent on hardware parameters, such as cache size and cache-line length, need to be tuned to achieve optimality. Nevertheless, these algorithms use an optimal amount of work and move data optimally among multiple levels of cache. For a cache with sizeMand cache-line lengthBwhereM=Ω(B2), the number of cache misses for anm×nmatrix transpose isΘ(1 +mn/B). The number of cache misses for either ann-point FFT or the sorting ofnnumbers isΘ(1 + (n/B)(1 + logM n)). We also give aΘ(mnp)-work algorithm to multiply anm×nmatrix by ann×pmatrix that incursΘ(1 + (mn+np+mp)/B+mnp/B√M) cache faults.We introduce an “ideal-cache” model to analyze our algorithms. We prove that an optimal cache-oblivious algorithm designed for two levels of memory is also optimal for multiple levels and that the assumption of optimal replacement in the ideal-cache model can be simulated efficiently by LRU replacement. We offer empirical evidence that cache-oblivious algorithms perform well in practice.