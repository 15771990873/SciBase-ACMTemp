LetG= (V,E) be adirectedgraph and letPbe a shortest path fromstotinG. In thereplacement pathsproblem, we are required to find, for every edgeeonP, a shortest path fromstotinGthat avoidse. The only known algorithm for solving the problem, even for unweighted directed graphs, is the trivial algorithm in which each edge on the path, in its turn, is excluded from the graph and a shortest paths tree is computed froms. The running time isO(mn+n2logn).The replacement paths problem is strongly motivated by two different applications:(1) The fastest algorithm to compute theksimpleshortest paths betweensandtin directed graphs [Yen 1971; Lawler 1972] computes the replacement paths betweensandt. Its running time isÕ(mnk).(2) The replacement paths problem is used to compute theVickrey pricingof edges in a distributed network. It was raised as an open problem by Nisan and Ronen [2001] whether it is possible to compute the Vickrey pricing faster thanncomputations of a shortest paths tree.In this article we present the first nontrivial algorithm for computing replacement paths in unweighted directed graphs (and in graphs with small integer weights). Our algorithm is Monte-Carlo and its running time isÕ(m√n). This result immediately improves the running time of the two applications mentioned above in a factor of √n.We also show how to reduce the problem of computingksimple shortest paths betweensandttoO(k) computations of a second simple shortest path fromstoteach time in a different subgraph ofG. The importance of this result is that computing a second simple shortest path may turn out to be an easier problem than computing the replacement paths, thus, we can focus our efforts to improve theksimple shortest paths algorithm in obtaining a faster algorithm for the second shortest path problem.