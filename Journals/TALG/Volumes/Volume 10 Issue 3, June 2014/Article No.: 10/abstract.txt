We present fast and simple algebraic algorithms for the linear matroid parity problem and its applications. For the linear matroid parity problem, we obtain a simple randomized algorithm with running timeO(mrω-1), wheremandrare the number of columns and the number of rows, respectively, and ω &ap; 2.3727 is the matrix multiplication exponent. This improves theO(mrω)-time algorithm by Gabow and Stallmann and matches the running time of the algebraic algorithm for linear matroid intersection, answering a question of Harvey. We also present a very simple alternative algorithm with running timeO(mr2), which does not need fast matrix multiplication.We further improve the algebraic algorithms for some specific graph problems of interest. For the Mader’s disjointS-path problem, we present anO(nω)-time randomized algorithm wherenis the number of vertices. This improves the running time of the existing results considerably and matches the running time of the algebraic algorithms for graph matching. For the graphic matroid parity problem, we give anO(n4)-time randomized algorithm wherenis the number of vertices, and anO(n3)-time randomized algorithm for a special case useful in designing approximation algorithms. These algorithms are optimal in terms ofnas the input size could be Ω (n4) and Ω (n3), respectively.The techniques are based on the algebraic algorithmic framework developed by Mucha and Sankowski, Harvey, and Sankowski. While linear matroid parity and Mader’s disjointS-path are challenging generalizations for the design of combinatorial algorithms, our results show that both the algebraic algorithms for linear matroid intersection and graph matching can be extended nicely to more general settings. All algorithms are still faster than the existing algorithms even if fast matrix multiplication is not used. These provide simple algorithms that can be easily implemented in practice.