We introduce a framework for reducing the number of element comparisons performed in priority-queue operations. In particular, we give a priority queue which guarantees the worst-case cost ofO(1) per minimum finding and insertion, and the worst-case cost ofO(logn) with at most logn+O(1) element comparisons per deletion, improving the bound of 2 logn+O(1) known for binomial queues. Here,ndenotes the number of elements stored in the data structure prior to the operation in question, and lognequals log2(max {2, n}). As an immediate application of the priority queue developed, we obtain a sorting algorithm that is optimally adaptive with respect to the inversion measure of disorder, and that sorts a sequence havingnelements andIinversions with at mostnlog (I/n) +O(n) element comparisons.