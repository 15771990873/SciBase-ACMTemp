We analyze the shortest remaining processing time (SRPT) algorithm with respect to the problem of schedulingnjobs with release times onmidentical machines to minimize total flow time. It is known that SRPT is optimal ifm&equals; 1 but that SRPT has a worst-case approximation ratio of Θ(min(logn/m, log Δ)) for this problem, where Δ is the ratio of the length of the longest job divided by the length of the shortest job. It has previously been shown that SRPT is able to use faster machines to produce a scheduleas good asan optimal algorithm using slower machines. We now show that SRPToptimallyuses these faster machines with respect to the worst-case approximation ratio. That is, if SRPT is given machines that ares≥ 2 − 1/mtimes as fast as those used by an optimal algorithm, SRPT's flow time is at leasts times smallerthan the flow time incurred by the optimal algorithm. Clearly, no algorithm can offer a better worst-case guarantee, and we show that existing algorithms with similar performance guarantees to SRPT without resource augmentation do not optimally use extra resources.