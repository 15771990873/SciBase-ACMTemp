We propose a framework for dynamic composition of communication services that is well suited for facilitating research and prototyping on real experimental infrastructures of remotely configurable embedded devices. By using the concept of composability, our framework supports modular component development for various networking functions, thereby promoting code reuse. The framework consists of four components: the physical testbed, the module library, the declarative language, and the workbench. Its reference implementation, ProtoStack, developed using semantic web technologies, supports remote experimentation on sensor platform-based infrastructure and is thus well suited also for experimenters who do not possess their own physical experimentation infrastructure. We illustrate how ProtoStack supports research in service-oriented networks and cognitive networking. The cost of increased flexibility and prototyping speed of the protocol stack is paid in terms of increased memory footprint, processing speed, and energy consumption. Compared to the most related noncomposable approach, the CRime library used by ProtoStack has a 16--17&percnt; larger footprint, takes 2.4 times longer to execute an open-send-recv-close sequence, and consumes 1.6&percnt; more power in doing so. Even though with ProtoStack more resources are consumed by the node, the tradeoff in terms of prototyping speed pays off.