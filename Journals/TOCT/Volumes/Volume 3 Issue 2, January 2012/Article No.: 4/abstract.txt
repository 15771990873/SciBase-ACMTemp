We introduce thetree evaluation problem, show that it is inLogDCFL(and hence inP), and study its branching program complexity in the hope of eventually proving a superlogarithmic space lower bound. The input to the problem is a rooted, balancedd-ary tree of heighth, whose internal nodes are labeled withd-ary functions on [k] = {1,...,k}, and whose leaves are labeled with elements of [k]. Each node obtains a value in [k] equal to itsd-ary function applied to the values of itsdchildren. The output is the value of the root. We show that the standard black pebbling algorithm applied to the binary tree of heighthyields a deterministick-way branching program withO(kh) states solving this problem, and we prove that this upper bound is tight forh= 2 andh= 3. We introduce a simple semantic restriction calledthriftyonk-way branching programs solving tree evaluation problems and show that the same state bound ofΘ(kh) is tight for allh≥ 2 for deterministic thrifty programs. We introduce fractional pebbling for trees and show that this yields nondeterministic thrifty programs withΘ(kh/2+1) states solving the Boolean problem “determine whether the root has value 1”, and prove that this bound is tight forh= 2,3,4. We also prove that this same bound is tight for unrestricted nondeterministick-way branching programs solving the Boolean problem forh= 2,3.