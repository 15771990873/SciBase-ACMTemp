Persistent memory provides data durability in main memory and enables memory-level storage systems. To ensure consistency of such storage systems, memory writes need to be transactional and are carefully moved across the boundary between thevolatileCPU cache and thepersistentmain memory. Unfortunately, cache management in the CPU cache is hardware-controlled. Legacy transaction mechanisms, which are designed for disk-based storage systems, are inefficient in ordered data persistence of transactions in persistent memory. In this article, we propose theBlurred Persistencemechanism to reduce the transaction overhead of persistent memory by blurring the volatility-persistence boundary.Blurred Persistenceconsists of two techniques. First,Execution in Logexecutes a transaction in the log to eliminate duplicated data copies for execution. It allows persistence of the volatile uncommitted data, which are detectable with reorganized log structure. Second,Volatile Checkpoint with Bulk Persistenceallows the committed data to aggressively stay volatile by leveraging the data durability in the log, as long as the commit order across threads is kept. By doing so, it reduces the frequency of forced persistence and improves cache efficiency. Evaluations show that our mechanism improves system performance by 56.3&percnt; to 143.7&percnt; for a variety of workloads.