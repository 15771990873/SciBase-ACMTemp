AVIZIENm, A. Fault-tolerant systems. IEEE Trans. Comput. C-25, 12 (Dec. 1976), 1304-1312.
BARLOW, R. W., AND PROSCHAN, F. Mathematical Theory of Reliability. Wiley, New York, 1965.
Peter J. Denning, Fault Tolerant Operating Systems, ACM Computing Surveys (CSUR), v.8 n.4, p.359-389, Dec. 1976[doi>10.1145/356678.356680]
Edsger Wybe Dijkstra, A  Discipline of Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1997
Jim Gray, Notes on Data Base Operating Systems, Operating Systems, An Advanced Course, p.393-481, January 1978
David Gries, The  Science of Programming, Springer-Verlag New York, Inc., Secaucus, NJ, 1987
Arthur Bernstein , Paul K. Harter, Jr., Proving real-time properties of programs with temporal logic, Proceedings of the eighth ACM symposium on Operating systems principles, p.1-11, December 14-16, 1981, Pacific Grove, California, USA[doi>10.1145/800216.806585]
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
HOARE, C. A. R., AND WIRTH, N. An axiomatic definition of the programming language PASCAL. Acta Inf. 2 (1973), 335-355.
HOPKINS, A. L., SMITH, T. B., AND LALA, J.H. FTMPmA highly reliable fault-tolerant multiprocessor for aircraft. Proc. IEEE 66, 10 (Oct. 1978), 1221-1239.
Leslie Lamport, Time, clocks, and the ordering of events in a distributed system, Communications of the ACM, v.21 n.7, p.558-565, July 1978[doi>10.1145/359545.359563]
LAMPORT, L. Using time instead of timeout for fault-tolerant distributed systems. Tech. Rep. 59, SRI Int., June 1981.
Leslie Lamport , Robert Shostak , Marshall Pease, The Byzantine Generals Problem, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.382-401, July 1982[doi>10.1145/357172.357176]
Butler W. Lampson, Atomic Transactions, Distributed Systems - Architecture and Implementation, An Advanced Course, p.246-265, January 1981
LAMPSON, B., AND STURGIS, H. Crash recovery in a distributed data storage system. To be published.
Susan Owicki , Leslie Lamport, Proving Liveness Properties of Concurrent Programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.455-495, July 1982[doi>10.1145/357172.357178]
M. Pease , R. Shostak , L. Lamport, Reaching Agreement in the Presence of Faults, Journal of the ACM (JACM), v.27 n.2, p.228-234, April 1980[doi>10.1145/322186.322188]
Amir Pnueli, The Temporal Semantics of Concurrent Programs, Proceedings of the International Sympoisum on Semantics of Concurrent Computation, p.1-20, July 02-04, 1979
B. Randell , P. Lee , P. C. Treleaven, Reliability Issues in Computing System Design, ACM Computing Surveys (CSUR), v.10 n.2, p.123-165, June 1978[doi>10.1145/356725.356729]
Richard Dale Schlichting, Axiomatic verification to enhance software reliability, Cornell University, Ithaca, NY, 1982
Richard D. Schlichting , Fred B. Schneider, Understanding and using asynchronous message passing (Preliminary Version), Proceedings of the first ACM SIGACT-SIGOPS symposium on Principles of distributed computing, p.141-147, August 18-20, 1982, Ottawa, Canada[doi>10.1145/800220.806691]
Fred B. Schneider, Synchronization in Distributed Programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.2, p.125-148, April 1982[doi>10.1145/357162.357163]
SCHNEIDER, F. B. Fail-stop processors. Digest of Papers from Spring CompCon '83 (San Francisco, Calif., Mar., 1983), IEEE Computer Society, New York.
SCHNEIDER, F. B., AND SCHLICHTING, R.D. Towards fault-tolerant process control software. In Proc. Eleventh Ann. Int. Syrup. Fault-Tolerant Computing (Portland, Maine, June 1981), IEEE Computer Society, New York, pp. 48-55.
SIEWIOREK, D., AND SWARZ, R.S. The Theory and Practice of Reliable System Design. Digital Press, Bedford, Mass., 1982.
WENSLEY, J., WENSKY, J. H., LAMPORT, L., GOLDBERG, J., GREEN, M., LEVITT, K. N., MELLIAR- SMITH, P. M., SHOSTAK, R. E., AND WEINSTOCK, C.B. SIFT: Design and analysis of a faulttolerant computer for aircraft control. Proc. IEEE 66, 10 (Oct. 1978) 1240-1255.
