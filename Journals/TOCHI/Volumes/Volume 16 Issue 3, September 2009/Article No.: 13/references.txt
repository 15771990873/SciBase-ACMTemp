Bakeman, R. and Gottman, J. M. 1996. Observing Iteraction: An Introduction to Sequential Analysis. Cambridge University Press, Cambridge, UK.
Theresa Beaubouef , John Mason, Why the high attrition rate for computer science students: some thoughts and observations, ACM SIGCSE Bulletin, v.37 n.2, June 2005[doi>10.1145/1083431.1083474]
Ronit Ben-Bassat Levy , Mordechai Ben-Ari , Pekka A. Uronen, The Jeliot 2000 program animation system, Computers & Education, v.40 n.1, p.1-15, January 2003[doi>10.1016/S0360-1315(02)00076-3]
Susan Bergin , Ronan Reilly , Desmond Traynor, Examining the role of self-regulated learning on introductory programming performance, Proceedings of the first international workshop on Computing education research, p.81-86, October 01-02, 2005, Seattle, WA, USA[doi>10.1145/1089786.1089794]
GianMario Besana , Lucia Dettori, Together is better: strengthening the confidence of women in computer science via a learning community, Journal of Computing Sciences in Colleges, v.19 n.5, p.130-139, May 2004
Benjamin E. Birnbaum , Kenneth J. Goldman, Achieving Flexibility in Direct-Manipulation Programming Environments by Relaxing the Edit-Time Grammar, Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing, p.259-266, September 20-24, 2005[doi>10.1109/VLHCC.2005.15]
Margaret M. Burnett , Herkimer J. Gottfried, Graphical definitions: expanding spreadsheet languages through direct manipulation and gestures, ACM Transactions on Computer-Human Interaction (TOCHI), v.5 n.1, p.1-33, March 1998[doi>10.1145/274444.274445]
Stuart K. Card , Allen Newell , Thomas P. Moran, The  Psychology of Human-Computer Interaction, L. Erlbaum Associates Inc., Hillsdale, NJ, 1983
Martin C. Carlisle , Terry A. Wilson , Jeffrey W. Humphries , Steven M. Hadfield, RAPTOR: a visual programming environment for teaching algorithmic problem solving, Proceedings of the 36th SIGCSE technical symposium on Computer science education, February 23-27, 2005, St. Louis, Missouri, USA[doi>10.1145/1047344.1047411]
Allen Cypher , Daniel C. Halbert , David Kurlander , Henry Lieberman , David Maulsby , Brad A. Myers , Alan Turransky, Watch what I do: programming by demonstration, MIT Press, Cambridge, MA, 1993
Wanda Dann , Stephen Cooper , Randy Pausch, Making the connection: programming with animated small world, Proceedings of the 5th annual SIGCSE/SIGCUE ITiCSEconference on Innovation and technology in computer science education, p.41-44, July 11-13, 2000, Helsinki, Finland[doi>10.1145/343048.343070]
Chris DiGiano , Mike Eisenberg, Self-disclosing design tools: a gentle introduction to end-user programming, Proceedings of the 1st conference on Designing interactive systems: processes, practices, methods, & techniques, p.189-197, August 23-25, 1995, Ann Arbor, Michigan, USA[doi>10.1145/225434.225455]
Farley, S. 2006. The design and evaluation of a direct manipulation interface for novice programmers. M.S. thesis, School of Electrical Engineering and Computer Science, Washington State University, Pullman, WA.
Goldenson, D. R. 1996. Why teach programming&quest; Some evidence about generalization and transfer. In Proceedings of the National Educational Computing Conference.
Goldenson, D. R. and Wang, B. J. 1991. Use of structure editing tools by novice programmers. In Proceedings of the Empirical Studies of Programmers: 4th Workshop. 99--120.
Green, T. R. G. and Petre, M. 1996. Usability analysis of visual programming environments: A ‘cognitive dimensions’ framework. J. Visual Lang. Comput. 7, 131--174.
Tovi Grossman , Pierre Dragicevic , Ravin Balakrishnan, Strategies for accelerating on-line learning of hotkeys, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, April 28-May 03, 2007, San Jose, California, USA[doi>10.1145/1240624.1240865]
Mark J. Guzdial , Barbara Ericson, Introduction to Computing and Programming in Python, A Multimedia Approach, Prentice Hall Press, Upper Saddle River, NJ, 2009
Guzdial, M. 2004b. Programming environments for novices. In Computer Science Education Research, S. Fincher and M. Petre, Eds. Taylor and Francis, London, 128--154.
Guzdial, M., Hohmann, L., Konneman, M., Walton, C., and Soloway, E. 1998. Supporting programming and learning-to-program with an integrated CAD and scaffolding workbench. Interact. Learn. Environ. 6, 143--179.
T. Dean Hendrix , James H. Cross, II , Larry A. Barowski, An extensible framework for providing dynamic data structure visualizations in a lightweight IDE, Proceedings of the 35th SIGCSE technical symposium on Computer science education, March 03-07, 2004, Norfolk, Virginia, USA[doi>10.1145/971300.971433]
Hubert, L. 1977. Kappa revisited. Psych. Bull. 84, 289--297.
Christopher D. Hundhausen , Jonathan Lee Brown, What You See Is What You Code: A Radically Dynamic Algorithm Visualization Development Model for Novice Learners, Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing, p.163-170, September 20-24, 2005[doi>10.1109/VLHCC.2005.72]
Christopher D. Hundhausen , Jonathan Lee Brown, An experimental study of the impact of visual semantic feedback on novice programming, Journal of Visual Languages and Computing, v.18 n.6, p.537-559, December, 2007[doi>10.1016/j.jvlc.2006.09.001]
Christopher D. Hundhausen , Jonathan L. Brown, What You See Is What You Code: A "live" algorithm development and visualization environment for novice learners, Journal of Visual Languages and Computing, v.18 n.1, p.22-47, February, 2007[doi>10.1016/j.jvlc.2006.03.002]
Christopher D. Hundhausen , Jonathan L. Brown, Designing, visualizing, and discussing algorithms within a CS 1 studio experience: An empirical study, Computers & Education, v.50 n.1, p.301-326, January, 2008[doi>10.1016/j.compedu.2006.06.002]
Christopher D. Hundhausen , Jonathan L. Brown , Sean Farley, Adding procedures and pointers to the ALVIS algorithm visualization software: a preliminary design, Proceedings of the 2006 ACM symposium on Software visualization, September 04-05, 2006, Brighton, United Kingdom[doi>10.1145/1148493.1148521]
Christopher D. Hundhausen , Jonathan L. Brown , Sean Farley , Daniel Skarpas, A methodology for analyzing the temporal evolution of novice programs based on semantic components, Proceedings of the second international workshop on Computing education research, September 09-10, 2006, Canterbury, United Kingdom[doi>10.1145/1151588.1151599]
Christopher D. Hundhausen , Sean Farley , Jonathan Lee Brown, Can Direct Manipulation Lower the Barriers to Programming and Promote Positive Transfer to Textual Programming? An Experimental Study, Proceedings of the Visual Languages and Human-Centric Computing, p.157-164, September 04-08, 2006[doi>10.1109/VLHCC.2006.12]
Hundhausen, C. D., Farley, S., and Brown, J. L. 2008. Using semantic components analysis to study the temporal evolution of computer code: Video analysis manual Ver. 2.8. http://eecs.wsu.edu/~veupl/pub/VideoAnalysisManual-v2.8.doc. (Accessed December 2008.)
Edwin L. Hutchins , James D. Hollan , Donald A. Norman, Direct manipulation interfaces, Human-Computer Interaction, v.1 n.4, p.311-338, December 1985[doi>10.1207/s15327051hci0104_2]
Caitlin Kelleher , Randy Pausch, Lowering the barriers to programming: A taxonomy of programming environments and languages for novice programmers, ACM Computing Surveys (CSUR), v.37 n.2, p.83-137, June 2005[doi>10.1145/1089733.1089734]
Lego Systems, Inc. 2008. Lego mindstorms NXT robotics invention system. http://mindstorms.lego.com.
Henry Lieberman, Tinker: a programming by demonstration system for beginning programmers, Watch what I do: programming by demonstration, MIT Press, Cambridge, MA, 1993
MicroSoft Corporation. 2006. Microsoft PowerPoint 2007. http://office.microsoft.com/en-us/powerpoint/default.aspx
Miller, P., Pane, J., Meter, G., and Vorthmann, S. 1994. Evolution of novice programming environments: The structure editors of Carnegie Mellon University. Interact. Learn. Environ. 4, 140--158.
Francesmary Modugno , Albert T. Corbett , Brad A. Myers, Graphical representation of programs in a demonstrational visual shell—an empirical evaluation, ACM Transactions on Computer-Human Interaction (TOCHI), v.4 n.3, p.276-308, Sept. 1997[doi>10.1145/264645.264659]
Myers, B., Chandhok, R., and Sareen, A. 1988. Automatic data visualizations for novice Pascal programmers. In Proceedings of the IEEE Workshop on Visual Languages. IEEE Computer Society Press, Los Alamitos, CA.
Norman, D. and Draper, S. 1986. User-Centered System Design. Lawrence Erlbaum Associates, Mahwah, NJ.
Ormerod, T. C. and Ball, L. J. 1993. Does programming knowledge or design strategy determine shifts of focus in Prolog programming&quest; In Proceedings of the Empirical Studies of Programmers: 5th Workshop, 162--186.
Paivio, A. 1983. The empirical case for dual coding. In Imagery, Memory, and Cognition: Essays in Honor of Allan Paivio, J. C. Yuille, Ed., Lawrence Erlbaum Associates, Hillsdale, NJ.
Palumbo, D. B. 1990. Programming language/problem-solving research: A review of relevant issues. Rev. Edu. Res. 60, 65--89.
Pandey, R. K. and Burnett, M. M. 1993. Is it easier to write matrix manipulation programs visually or textually&quest; An empirical study. In Proceedings of the IEEE Symposium on Visual Languages. IEEE, Los Alamitos, CA, 344--351.
John F. Pane , Brad A. Myers , Leah B. Miller, Using HCI Techniques to Design a More Usable Programming System, Proceedings of the IEEE 2002 Symposia on Human Centric Computing Languages and Environments (HCC'02), p.198, September 03-06, 2002
D. N. Perkins , Fay Martin, Fragile knowledge and neglected strategies in novice programmers, Papers presented at the first workshop on empirical studies of programmers on Empirical studies of programmers, p.213-229, June 1986, Washington, D.C., USA
Pirolli, P. and Recker, M. 1994. Learning strategies and transfer in the domain of programming. Cognition Instruct. 12, 235--275.
Rieber, L. P. 1991. Animation, incidental learning, and continuing motivation. J. Edu. Psych. 83, 318--328.
Jorma Sajaniemi , Marja Kuittinen, Program animation based on the roles of variables, Proceedings of the 2003 ACM symposium on Software visualization, June 11-13, 2003, San Diego, California[doi>10.1145/774833.774835]
Christopher Scaffidi , Mary Shaw , Brad Myers, Estimating the Numbers of End Users and End User Programmers, Proceedings of the 2005 IEEE Symposium on Visual Languages and Human-Centric Computing, p.207-214, September 20-24, 2005[doi>10.1109/VLHCC.2005.34]
Scholtz, J. and Wiedenbeck, S. 1993. An analysis of novice programmers learning a second language. In Proceedings of Empirical Studies of Programmers: 5th Workshop. Ablex, Norwood, NJ, 187--205.
Scholz, J. and Wiedenbeck, S. 1990. Learning second and subsequent programming languages: A problem of transfer. Int. J. Hum.-Comput. Interact. 2, 51--72.
B. Shneiderman, Direct Manipulation: A Step Beyond Programming Languages, Computer, v.16 n.8, p.57-69, August 1983[doi>10.1109/MC.1983.1654471]
Mark K. Singley , John R. Anderson, The transfer of cognitive skill, Harvard University Press, Cambridge, MA, 1989
David Canfield Smith , Allen Cypher , Jim Spohrer, KidSim: programming agents without a programming language, Communications of the ACM, v.37 n.7, p.54-67, July 1994[doi>10.1145/176789.176795]
Elliot Soloway , Jeffrey Bonar , Kate Ehrlich, Cognitive strategies and looping constructs: an empirical study, Communications of the ACM, v.26 n.11, p.853-860, Nov. 1983[doi>10.1145/182.358436]
Soloway, E., Ehrlich, K., Bonar, J., and Greenspan, J. 1984. What do novices know about programming&quest; In Directions in Human-Computer Interaction, A. Badre and B. Shneiderman, Eds. Ablex, Norwood, NJ, 27--54.
SPSS, Inc. 2008. SPSS statistics 17.0. http://www.spss.com. (Accessed January 2009.)
John T. Stasko, Using direct manipulation to build algorithm animations by demonstration, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.307-314, April 27-May 02, 1991, New Orleans, Louisiana, USA[doi>10.1145/108844.108930]
TechSmith Corporation. 2007. Morae recorder. http://www.morae.com. (Accessed December 2007.)
van Merrienboer, J. J. G. and Sweller, J. 2005. Cognitive load theory and complex learning: Recent developments and future directions. Edu. Psych. Rev. 17, 147--177.
Whitley, K. N. 1997. Visual programming languages and the empirical evidence for and against. J. Visual Lang. Comput. 8, 109--142.
