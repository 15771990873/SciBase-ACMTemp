Multithread programming is widely adopted in novel embedded system applications due to its high performance and flexibility. This article addresses compiler optimization for reducing the power consumption of multithread programs. A traditional compiler employs energy management techniques that analyze component usage in control-flow graphs with a focus on single-thread programs. In this environment the leakage power can be controlled by inserting on and off instructions based on component usage information generated by flow equations. However, these methods cannot be directly extended to a multithread environment due to concurrent execution issues.This article presents a multithread power-gating framework composed ofmultithread power-gating analysis(MTPGA) andpredicated power-gating(PPG) energy management mechanisms for reducing the leakage power when executing multithread programs onsimultaneous multithreading(SMT) machines. Our multithread programming model is based on hierarchical bulk-synchronous parallel (BSP) models. Based on a multithread component analysis with dataflow equations, our MTPGA framework estimates the energy usage of multithread programs and inserts PPG operations as power controls for energy management. We performed experiments by incorporating our power optimization framework into SUIF compiler tools and by simulating the energy consumption with a post-estimated SMT simulator based on Wattch toolkits. The experimental results show that the total energy consumption of a system with PPG support and our power optimization method is reduced by an average of 10.09&percnt; for BSP programs relative to a system without a power-gating mechanism on leakage contribution set to 30&percnt;; and the total energy consumption is reduced by an average of 4.27&percnt; on leakage contribution set to 10&percnt;. The results demonstrate our mechanisms are effective in reducing the leakage energy of BSP multithread programs.