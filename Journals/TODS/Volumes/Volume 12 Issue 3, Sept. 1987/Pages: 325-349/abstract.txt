The use of first-order logic as database logic is shown to be powerful enough for formalizing and implementing not only relational but also hierarchical and network-type databases. It enables one to treat all the types of databases in a uniform manner. This paper focuses on the database language for heterogeneous databases. The language is shown to be general enough to specify constraints for a particular type of database, so that a specification of database type can be “translated” to the specification given in the database language, creating a “logical environment” for different views that can be defined by users. Owing to the fact that any database schema is seen as a first-order theory expressed by a finite set of sentences, the problems concerned with completeness and compactness of the database logic discussed by Jacobs ("On Database Logic,”J. ACM 29,2 (Apr. 1982), 310-332) are avoided.