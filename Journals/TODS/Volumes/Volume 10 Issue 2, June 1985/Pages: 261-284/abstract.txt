We study restricted classes of B-trees, called H(&bgr;, &ggr;, &dgr;) trees. A class is defined by three parameters: &bgr;, the size of a node; &ggr;, the minimal number of grandsons a node must have; and &dgr;, the minimal number of leaves bottom nodes must have. This generalizes the brother condition of 2-3 brother trees in a uniform way to B-trees of higher order. The class of B-trees of order m is obtained by choosing &bgr; = m, &ggr; = (m/2)2and &dgr; = m/2. An algorithm to construct H-trees for any given number of keys is given in Section 1. Insertion and deletion algorithms are given in Section 2. The costs of these algorithms increase smoothly as the parameters are increased. Furthermore, it is proved that the insertion can be done in time O(&bgr; + log N), where N is the number of nodes in the tree. Deletion can also be accomplished without reconstructing the entire tree. Properties of H-trees are given in Section 3. It is shown that the height of H-trees decreases as &ggr; increases, and the storage utilization increases significantly as &dgr; increases. Finally, comparisons with other restricted classes of B-trees are given in Section 4 to show the attractiveness of H-trees.