Two modifications ofB-trees are described, simple prefixB-trees and prefixB-trees. Both store only parts of keys, namely prefixes, in the index part of aB*-tree. In simple prefixB-trees those prefixes are selected carefully to minimize their length. In prefixB-trees the prefixes need not be fully stored, but are reconstructed as the tree is searched. PrefixB-trees are designed to combine some of the advantages ofB-trees, digital search trees, and key compression techniques while reducing the processing overhead of compression techniques.