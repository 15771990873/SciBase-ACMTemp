We consider theskyline problem(aka themaxima problem), which has been extensively studied in the database community. The input is a setPofd-dimensional points. A pointdominatesanother if the coordinate of the former is at most that of the latter on every dimension. The goal is to find theskyline, which is the set of pointsp∈Psuch thatpis not dominated by any other point inP.The main result of this article is that, for any fixed dimensionalityd≥ 3, in external memory the skyline problem can be settled by performingO((N/B)logM/Bd−2(N/B)) I/Os in the worst case, whereNis the cardinality ofP, Bthe size of a disk block, andMthe capacity of main memory. Similar bounds can also be achieved for computing several skyline variants, including thek-dominant skyline, k-skyband, andα-skyline. Furthermore, the performance can be improved if some dimensions of the data space have small domains. When the dimensionalitydis not fixed, the challenge is to outperform the naive algorithm that simply checks all pairs of points inP×P. We give an algorithm that terminates inO((N/B) logd − 2N) I/Os, thus beating the naive solution for anyd=O(logN/ log logN).