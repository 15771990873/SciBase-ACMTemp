The concept of serializability has been the traditionally accepted correctness criterion in database systems. However in multidatabase systems (MDBSs), ensuring global serializability is a difficult task. The difficulty arises due to theheterogeneityof the concurrency control protocols used by the participating local database management systems (DBMSs), and the desire to preserve theautonomyof the local DBMSs. In general, solutions to the global serializability problem result in executions with a low degree of concurrency. The alternative, relaxed serializability, may result in data inconsistency.In this article, we introduce a systematic approach to relaxing the serializability requirement in MDBS environments. Our approach exploits the  structure of the integrity constraints and the nature of transaction programs to ensure consistency without requiring executions to be serializable. We develop a simple yet powerful classification of MDBSs based on the nature of integrity constraints and transaction programs. For each of the identified models we show how consistency can be preserved by ensuring that executions aretwo-level serializable(2LSR). 2LSR is a correctness criterion for MDBS environments weaker than serializability. What makes our approach interesting is that unlike global serializability, ensuring 2LSR in MDBS environments is relatively simple and protocols to ensure 2LSR  permit a high degree of concurrency. Furthermore, we believe the range of models we consider cover many practical MDBS  environments to which the results of this article can be applied to preserve database consistency.