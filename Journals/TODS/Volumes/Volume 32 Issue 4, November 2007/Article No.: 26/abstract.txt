Thepacked-memory array(PMA) is a data structure that maintains a dynamic set ofNelements in sorted order in a Θ(N)-sized array. The idea is to intersperse Θ(N) empty spaces orgapsamong the elements so that only a small number of elements need to be shifted around on an insert or delete. Because the elements are stored physically in sorted order in memory or on disk, the PMA can be used to support extremely efficient range queries. Specifically, the cost to scanLconsecutive elements isO(1 &plus;L&sol;B) memory transfers.This article gives the firstadaptive packed-memory array(APMA), which automatically adjusts to the input pattern. Like the traditional PMA, any pattern of updates costs onlyO(log2N) amortized element moves andO(1 &plus; (log2N)&sol;B) amortized memory transfers per update. However, the APMA performs even better on many common input distributions achieving onlyO(logN) amortized element moves andO(1&plus; (logN)&sol;B) amortized memory transfers. The article analyzessequentialinserts, where the insertions are to the front of the APMA,hammerinserts, where the insertions “hammer” on one part of the APMA,randominserts, where the insertions are after random elements in the APMA, andbulkinserts, where for constant α &epsi; [0, 1],Nαelements are inserted after random elements in the APMA. The article then gives simulation results that are consistent with the asymptotic bounds. For sequential insertions of roughly 1.4 million elements, the APMA has four times fewer element moves per insertion than the traditional PMA and running times that are more than seven times faster.