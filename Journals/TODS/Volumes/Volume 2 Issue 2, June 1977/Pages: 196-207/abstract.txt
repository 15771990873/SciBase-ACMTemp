Buffer pools are created and managed in database systems in order to reduce the total number of accesses to the I/O devices. In systems using virtual memory, any reduction in I/O accesses may be accompanied by an increase in paging. The effects of these factors on system performance are quantified, where system performance is a function of page faults and database accesses to the I/O devices. A previous study of this phenomenon is extended through the analysis of empirical data gathered in a multifactor experiment. In this study memory is partitioned between the program and the buffer so that the impact of the controlled factors can be more effectively evaluated. It is possible to improve system performance through the use of different paging algorithms in the program partition and the buffer partition. Also, the effects on system performance as the virtual buffer size is increased beyond the real memory allocated to the buffer partition are investigated.