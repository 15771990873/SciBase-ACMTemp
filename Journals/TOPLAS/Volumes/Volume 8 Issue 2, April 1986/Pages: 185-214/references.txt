Alfred V. Aho , Jeffrey D. Ullman, Principles of Compiler Design (Addison-Wesley series in computer science and information processing), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1977
Krzysztof R. Apt, Ten Years of Hoare's Logic: A Surveyâ€”Part I, ACM Transactions on Programming Languages and Systems (TOPLAS), v.3 n.4, p.431-483, Oct. 1981[doi>10.1145/357146.357150]
BOCHMANN, G. V., AND WARD, P. Compiler writing system for attribute grammars. Cornput. J. 21, 5 (May 1978), 144-148.
BROSGOL, B.M. Deterministic translation grammars. TR 3-74, Center for Research in Computing Technology, Harvard Univ., 1974.
BURSTALL, R. M., AND LANDIN, P.J. Programs and their proofs: An algebraic approach. In Machine Intelligence 4, D. Michie, Ed., American Elsevier, New York, 1969, 17-43.
CHIRICA, L. M. Contributions to compiler correctness. UCLA-ENG-7697, UCLA Computer Science Dept., Oct. 1976.
CHIRICA, L. M., AND MARTIN, D. F. An order-algebraic definition of Knuthian semantics. Math. Syst. Theor. 13 (1979), 1-27.
J. A. Goguen , J. W. Thatcher , E. G. Wagner , J. B. Wright, Initial Algebra Semantics and Continuous Algebras, Journal of the ACM (JACM), v.24 n.1, p.68-95, Jan. 1977[doi>10.1145/321992.321997]
Michael J. C. Gordon, The  Denotational Description of Programming Languages: An Introduction, Springer-Verlag New York, Inc., Secaucus, NJ, 1979
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
KNUTH D.E. Semantics of context-free languages. Math. Syst. Theor. 2 (1968), 127-145.
LIGLER, G. Surface properties of programming language constructs. In Proceedings IRIA Symposium on Proving and Improving Programs (Arc-et-Senans, July, 1975), IRIA, 299-323.
Daniel D. McCracken, Guide to PL-M Programming for Microcomputer Applications, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1978
MCKEEMAN, W. M., HORNING, J. J., AND WORTMAN D.B. A Compiler Generator. Prentice- Hall, Englewood Cliffs, N.J., 1970.
MILNER, R., AND WEYRAUCH, R. Proving compiler correctness in a mechanized logic. In Machine Intelligence 7, B. Meltzer and D. Michie, Eds, American Elsevier, New York, 1972, 51-70.
MORRIS, F.L. Correctness of programming languages--An algebraic approach. STAN-CS-72- 303, Stanford Computer Science Dept., Aug. 1972.
F. Lockwood Morris, Advice on structuring compilers and proving them correct, Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.144-152, October 01-03, 1973, Boston, Massachusetts[doi>10.1145/512927.512941]
Wolfgang Polak, Compiler Specification and Verification, Springer-Verlag New York, Inc., Secaucus, NJ, 1981
THATCHER, J., ET AL. More on advice on structuring compilers and proving them correct. Theor. Comput. Sci. 15 (Sept. 1981), 223-249.
Niklaus Wirth , Helmut Weber, EULER: a generalization of ALGOL, and its formal definition: Part II, Communications of the ACM, v.9 n.2, p.89-99, Feb. 1966[doi>10.1145/365170.365202]
