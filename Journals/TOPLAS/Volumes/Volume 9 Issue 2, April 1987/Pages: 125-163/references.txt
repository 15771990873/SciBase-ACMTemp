Alfred V. Aho , Jeffrey D. Ullman, Principles of Compiler Design (Addison-Wesley series in computer science and information processing), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1977
Roland C. Backhouse, Syntax of Programming Languages: Theory and Practice, Prentice-Hall, Inc., Upper Saddle River, NJ, 1979
John A. Campbell, Implementation of PROLOG, Prentice Hall PTR, Upper Saddle River, NJ, 1984
CARLSSON, M. A microcoded unifier for Lisp machine Prolog. In IEEE Proceedings 1985 Symposium on Logic Programming (Boston, July 1985), IEEE, New York, 1985, 162-171.
R. G. Cattell, Automatic Derivation of Code Generators from Machine Descriptions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.2 n.2, p.173-190, April 1980[doi>10.1145/357094.357097]
W F. Clocksin , Christopher S. Mellish, Programming in Prolog (2nd ed.), Springer-Verlag New York, Inc., New York, NY, 1984
COHEN, J., SITVER, R., AND AUTY, D. Evaluating and improving recursive descent parsers. IEEE Trans. So{tw. Eng. SE-5, 5 (Sept. 1979), 472-480.
Jacques Cohen, Describing Prolog by its interpretation and compilation, Communications of the ACM, v.28 n.12, p.1311-1324, Dec. 1985[doi>10.1145/214956.214960]
Alain Colmerauer, Metamorphosis Grammars, Natural Language Communication with Computers, p.133-189, January 1978
COLMERAUER, A., KANOUI, H., AND VAN CANEOHEM, M. Prolog II. Groupe d'Intelligence Artificielle, Univ. of Marseilles-Luminy, 1982.
COLMERAUER, A. Prolog and infinite trees. In Logic Programming, Clark and Tarnlund (Eds.), Academic Press, New York, 1982, 231-251.
COUPET, S., AND DUPLESSIS, F. Prolog programs for transforming regular expressions into the corresponding minimal finite state recognizers. Memoirs de D.E.A., GIA, Univ. of Marseilles, June 1984 (in French).
Jay Earley, An efficient context-free parsing algorithm, Communications of the ACM, v.13 n.2, p.94-102, Feb 1970[doi>10.1145/362007.362035]
GIANNESINI, F., AND COHEN, J. Parser generation and grammar manipulations using Prolog's infinite trees. J. Logic Programm. (Oct. 1984), 253-265.
Robert Steven Glanville, A machine independent algorithm for code generation and its use in retargetable compilers., 1977
Susan L. Graham , Robert R. Henry , Robert A. Schulman, An experiment in table driven code generation, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.32-43, June 23-25, 1982, Boston, Massachusetts, United States[doi>10.1145/800230.806978]
David Gries, Compiler Construction for Digital Computers, John Wiley & Sons, Inc., New York, NY, 1971
T. V. Griffiths , S. R. Petrick, On the relative efficiencies of context-free grammar, Communications of the ACM, v.8 n.5, p.289-300, May 1965[doi>10.1145/364914.364943]
J. D. Ichbiah , S. P. Morse, A technique for generating almost optimal Floyd-Evans productions for precedence grammars, Communications of the ACM, v.13 n.8, p.501-508, Aug. 1970[doi>10.1145/362705.362712]
Robert Kowalski, Logic for problem-solving, North-Holland Publishing Co., Amsterdam, The Netherlands, 1986
MELLISH, C. S. Some global optimizations for a Prolog compiler. J. Logic Programm. 2, 1 (Apr. 1985), 43-66.
M. Dennis Mickunas , John A. Modry, Automatic error recovery for LR parsers, Communications of the ACM, v.21 n.6, p.459-465, June 1978[doi>10.1145/359511.359519]
Lee Naish, Automating control for logic programs, Journal of Logic Programming, v.2 n.3, p.167-183, Oct. 1985[doi>10.1016/0743-1066(85)90017-2]
Fernando C. N. Pereira , David H. D. Warren, Parsing as deduction, Proceedings of the 21st annual meeting on Association for Computational Linguistics, June 15-17, 1983, Cambridge, Massachusetts[doi>10.3115/981311.981338]
PEREIRA, F. C. N., AND WARREN, D. H.D. Definite clause grammars for language analysis. Artif Intell. 13 (1980), 231-278.
PIQUE, J.F. Drawing trees and their equations in Prolog. In Proceedings o{ the 2nd International Logic Programming Conference (Uppsala, 1984), Ord and Furm, Uppsala, 1984, 23-33.
Andrew S. Tanenbaum , Hans van Staveren , Johan W. Stevenson, Using Peephole Optimization on Intermediate Code, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.1, p.21-36, Jan. 1982[doi>10.1145/357153.357155]
UEHARA, K., OCHITANI, R., AND KAKUSHO, O. A bottom-up parser based on predicate logic. In IEEE Proceedings 1984, International Symposium on Logic Programming (Atlantic City, N.J., Feb. 1984), IEEE, New York, 1984, 220-227.
W. M. Waite , G. Goos, Compiler Construction, Springer-Verlag New York, Inc., Secaucus, NJ, 1985
WARREN, D. H.D. Applied logic--its use and implementation as a programming tool. Ph.D. dissertation, Univ. of Edinburgh, 1977 (also appeared as Tech. Note 290, SRI International, 1983).
WARREN, D. H.D. Logic programming and compiler writing. So{tw. Pract. Exper. 10 (Feb. 1980), 97-125.
