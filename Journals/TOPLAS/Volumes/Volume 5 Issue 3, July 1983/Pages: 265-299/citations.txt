Norman H. Cohen, A note on Cohen's “eliminating redundant recursive calls”, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.4, p.680-685, Oct. 1985
Jeffrey F. Naughton , Raghu Ramakrishnan, How to forget the past without repeating it, Journal of the ACM (JACM), v.41 n.6, p.1151-1177, Nov. 1994
Jeffrey F. Naughton , Raghu Ramakrishnan, How to Forget the Past Without Repeating It, Proceedings of the 16th International Conference on Very Large Data Bases, p.278-289, August 13-16, 1990
Alberto Pettorossi, A powerful strategy for deriving efficient programs by transformation, Proceedings of the 1984 ACM Symposium on LISP and functional programming, p.273-281, August 06-08, 1984, Austin, Texas, USA
Wei-Ngan Chin , Masami Hagiya, A bounds inference method for vector-based memoization, ACM SIGPLAN Notices, v.32 n.8, p.176-187, Aug. 1997
Zhenjiang Hu , Hideya Iwasaki , Masato Takeichi , Akihiko Takano, Tupling calculation eliminates multiple data traversals, ACM SIGPLAN Notices, v.32 n.8, p.164-175, Aug. 1997
Adam Webber, Optimization of functional programs by grammar thinning, ACM Transactions on Programming Languages and Systems (TOPLAS), v.17 n.2, p.293-330, March 1995
Steven Prestwich, Online partial deduction of logic programs, Proceedings of the 1993 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.111-118, June 14-16, 1993, Copenhagen, Denmark
Umut A. Acar , Guy E. Blelloch , Robert Harper, Selective memoization, ACM SIGPLAN Notices, v.38 n.1, p.14-25, January 2003
Vance E. Waddle, Production trees: a compact representation of parsed programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.1, p.61-83, Jan. 1990
Yanhong A. Liu , Tim Teitelbaum, Caching intermediate results for program improvement, Proceedings of the 1995 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.190-201, June 21-23, 1995, La Jolla, California, United States
Peter Madden , Alan Bundy , Alan Smaill, Recursive Program Optimization through Inductive Synthesis Proof Transformation, Journal of Automated Reasoning, v.22 n.1, p.65-115, January 1999
Yanhong A. Liu , Scott D. Stoller, Program optimization using indexed and recursive data structures, ACM SIGPLAN Notices, v.37 n.3, p.108-118, March 2002
Yanhong A. Liu , Scott D. Stoller, From recursion to iteration: what are the optimizations?, ACM SIGPLAN Notices, v.34 n.11, p.73-82, Nov. 1999
Wei-Ngan Chin , Siau-Cheng Khoo , Neil Jones, Redundant Call Elimination via Tupling, Fundamenta Informaticae, v.69 n.1-2, p.1-37, January 2006
Wei-Ngan Chin , Siau-Cheng Khoo , Neil Jones, Redundant Call Elimination via Tupling, Fundamenta Informaticae, v.69 n.1-2, p.1-37, January 2006
Yanhong A. Liu , Scott D. Stoller, Dynamic Programming via Static Incrementalization, Proceedings of the 8th European Symposium on Programming Languages and Systems, p.288-305, March 22-28, 1999
Akimasa Morihata, A Short Cut to Optimal Sequences, Proceedings of the 7th Asian Symposium on Programming Languages and Systems, December 14-16, 2009, Seoul, Korea
Hessam Khoshnevisan, Efficient memo-table management strategies, Acta Informatica, v.28 n.1, p.43-81, November  1990
Yanhong A. Liu , Scott D. Stoller, Dynamic Programming via Static Incrementalization, Higher-Order and Symbolic Computation, v.16 n.1-2, p.37-62, March-June 2003
Yanhong A. Liu , Scott D. Stoller , Tim Teitelbaum, Static caching for incremental computation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.3, p.546-585, May 1998
Yanhong A. Liu, Efficiency by Incrementalization: An Introduction, Higher-Order and Symbolic Computation, v.13 n.4, p.289-313, Dec. 1, 2000
