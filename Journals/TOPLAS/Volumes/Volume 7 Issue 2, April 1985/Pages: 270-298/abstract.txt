The CIRCAL calculus is presented as a mathematical framework in which to describe and analyze concurrent systems, whether hardware or software.Thedot operatoris used to compose CIRCAL descriptions, and it is this operator which permits the natural modeling of asynchronousandsimultaneous behavior, thus allowing the representation and analysis of system timing properties such as those found in circuits.The CIRCAL framework uses anabstractionoperator to permit the modeling of a system at different levels of detail. Behavioral complexity of real systems makes abstraction crucial when producing a tractable model, and we illustrate how abstraction introducesnondeterminisiminto system representations.An operational semantics,acceptancesemantics, is introduced, and it is in terms of thisactive experimentationthat meaning is given to the CIRCAL syntax, thus allowing proof of system properties to be constructed.