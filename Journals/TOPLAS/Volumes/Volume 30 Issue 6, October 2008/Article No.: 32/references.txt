Alfred V. Aho , Monica S. Lam , Ravi Sethi , Jeffrey D. Ullman, Compilers: Principles, Techniques, and Tools (2nd Edition), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2006
Ken Kennedy , John R. Allen, Optimizing compilers for modern architectures: a dependence-based approach, Morgan Kaufmann Publishers Inc., San Francisco, CA, 2001
Zahira Ammarguellat , W. L. Harrison, III, Automatic recognition of induction variables and recurrence relations by abstract interpretation, Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation, p.283-295, June 1990, White Plains, New York, USA[doi>10.1145/93542.93583]
Diego Andrade , Manuel Arenaz , Basilio B. Fraguela , Juan Touriño , Ramón Doallo, Automated and accurate cache behavior analysis for codes with irregular access patterns: Research Articles, Concurrency and Computation: Practice & Experience, v.19 n.18, p.2407-2423, December 2007[doi>10.1002/cpe.v19:18]
Arenaz, M. 2003. Compiler framework for the automatic detection of loop-level parallelism. Ph.D. dissertation, Department of Electronics and Systems, University of A Coruña. (Available at http://www.des.udc.es/~arenaz/papers/phdthesis_arenaz.pdf.
Manuel Arenaz , Juan Touriño , Ramón Doallo, A GSA-based compiler infrastructure to extract parallelism from complex loops, Proceedings of the 17th annual international conference on Supercomputing, June 23-26, 2003, San Francisco, CA, USA[doi>10.1145/782814.782842]
Arenaz, M., Touriño, J., and Doallo, R. 2004. Compiler support for parallel code generation through kernel recognition. In Proceedings of the 18th International Parallel and Distributed Processing Symposium (Santa Fe, NM). IEEE Computer Society Press, Los Alamitos, CA.
Karl J. Ottenstein , Robert A. Ballance , Arthur B. MacCabe, The program dependence web: a representation supporting control-, data-, and demand-driven interpretation of imperative languages, Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation, p.257-271, June 1990, White Plains, New York, USA[doi>10.1145/93542.93578]
Bank, R. E. 2007. PLTMG package. Available at http://cam.ucsd.edu/~reb/software.html.
Berry, M., Chen, D., Koss, P., Kuck, D., Pointer, L., Lo, S., Pang, Y., Roloff, R., Sameh, A., Clementi, E., Chin, S., Schneider, D., Fox, G., Messina, P., Walker, D., Hsiung, C., Schwarzmeier, J., Lue, K., Orzag, S., Seidl, F., Johnson, O., Swanson, G., Goodrum, R., and Martin, J. 1989. The Perfect Club benchmarks: Effective performance evaluation of supercomputers. Int. J. Supercomput. Apps. 3, 3, 5--40.
Bhansali, S. and Hagemeister, J. R. 1995. A pattern matching approach for reusing software libraries in parallel systems. In Proceedings of Workshop on Knowledge Based Systems for the Reuse of Program Libraries (Sophia Anthipolis, France).
William Blume , Ramon Doallo , Rudolf Eigenmann , John Grout , Jay Hoeflinger , Thomas Lawrence , Jaejin Lee , David Padua , Yunheung Paek , Bill Pottenger , Lawrence Rauchwerger , Peng Tu, Parallel Programming with Polaris, Computer, v.29 n.12, p.78-82, December 1996[doi>10.1109/2.546612]
David Callahan, Recognizing and Parallelizing Bounded Recurrences, Proceedings of the Fourth International Workshop on Languages and Compilers for Parallel Computing, p.169-185, August 07-09, 1991
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
Beniamino Di Martino , Giulio Iannello, PAP Recognizer: A Tool for Automatic Recognition of Parallelizable Patterns, Proceedings of the 4th International Workshop on Program Comprehension (WPC '96), p.164, March 29-31, 1996
Thomas Fahringer , Bernhard Scholz, A Unified Symbolic Evaluation Framework for Parallelizing Compilers, IEEE Transactions on Parallel and Distributed Systems, v.11 n.11, p.1105-1125, November 2000[doi>10.1109/71.888633]
Keith A. Faigin , Stephen A. Weatherford , Jay P. Hoeflinger , David A. Padua , Paul M. Petersen, The Polaris internal representation, International Journal of Parallel Programming, v.22 n.5, p.553-586, Oct. 1994[doi>10.1007/BF02577778]
Allan L. Fisher , Anwar M. Ghuloum, Parallelizing complex scans and reductions, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.135-146, June 20-24, 1994, Orlando, Florida, USA[doi>10.1145/178243.178255]
GCC Internals. GNU Compiler Collection Internals (GCC). Available at http://gcc.gnu. org/onlinedocs/gccint.pdf.
Michael P. Gerlek , Eric Stoltz , Michael Wolfe, Beyond induction variables: detecting and classifying sequences using a demand-driven SSA form, ACM Transactions on Programming Languages and Systems (TOPLAS), v.17 n.1, p.85-122, Jan. 1995[doi>10.1145/200994.201003]
Mohammad R. Haghighat , Constantine D. Polychronopoulos, Symbolic analysis for parallelizing compilers, ACM Transactions on Programming Languages and Systems (TOPLAS), v.18 n.4, p.477-518, July 1996[doi>10.1145/233561.233568]
Mehdi T. Harandi , Jim Q. Ning, Knowledge-Based Program Analysis, IEEE Software, v.7 n.1, p.74-81, January 1990[doi>10.1109/52.43052]
Pierre Jouvelot , Babak Dehbonei, A unified semantic approach for the vectorization and parallelization of generalized reductions, Proceedings of the 3rd international conference on Supercomputing, p.186-194, June 05-09, 1989, Crete, Greece[doi>10.1145/318789.318810]
Christoph W. Kessler, Pattern-Driven Automatic Parallelization, Scientific Programming, v.5 n.3, p.251-274, August 1996
Christoph W. Kessler , Craig H. Smith, The SPARAMAT Approach to Automatic Comprehension of Sparse Matrix Computations, Proceedings of the 7th International Workshop on Program Comprehension, p.200, May 05-07, 1999
Kathleen Knobe , Vivek Sarkar, Array SSA form and its use in parallelization, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.107-120, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268956]
Knobe, K. and Sarkar, V. 2000. Enhanced parallelization via analyses and transformations on Array SSA form. In Proceedings of the 8th International Workshop on Compilers for Parallel Computers (Aussois, France).
Wojtek Kozaczynski , Jim Ning , Andre Engberts, Program Concept Recognition and Transformation, IEEE Transactions on Software Engineering, v.18 n.12, p.1065-1075, December 1992[doi>10.1109/32.184761]
Lin, Y. and Padua, D. A. 1998. On the automatic parallelization of sparse and irregular Fortran programs. In Proceedings of the 4th International Workshop on Languages, Compilers, and Run-Time Systems for Scalable Computers (Pittsburgh, PA). Lecture Notes in Computer Science, vol. 1511. Springer-Verlag, New York, 41--56.
Merrill, J. 2003. GENERIC and GIMPLE: A new tree representation for entire functions. In Proceedings of the 2003 GCC Developers Summit. 171--180. (Available at http://www.gccsummit.org/2003.
Metzger, R. 1995. Automated recognition of parallel algorithms in scientific applications. In IJCAI-95 Workshop Program Working Notes: “The Next Generation of Plan Recognition Systems”.
Steven S. Muchnick, Advanced compiler design and implementation, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1998
S. Paul , A. Prakash, A Framework for Source Code Search Using Program Patterns, IEEE Transactions on Software Engineering, v.20 n.6, p.463-475, June 1994[doi>10.1109/32.295894]
Shlomit S. Pinter , Ron Y. Pinter, Program optimization and parallelization using idioms, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.3, p.305-327, May 1994[doi>10.1145/177492.177494]
Bill Pottenger , Rudolf Eigenmann, Idiom recognition in the Polaris parallelizing compiler, Proceedings of the 9th international conference on Supercomputing, p.444-448, July 03-07, 1995, Barcelona, Spain[doi>10.1145/224538.224655]
Xavier Redon , Paul Feautrier, Detection of Recurrences in Sequential Programs with Loops, Proceedings of the 5th International PARLE Conference on Parallel Architectures and Languages Europe, p.132-145, June 14-17, 1993
Saad, Y. 1994. SPARSKIT: A Basic Tool Kit for Sparse Matrix Computations (Version 2). (Available at http://www.cs.umn.edu/~saad/software/SPARSKIT/sparskit.html.
Gary Sabot , Skef Wholey, CMAX: a Fortran translator for the connection machine system, Proceedings of the 7th international conference on Supercomputing, p.147-156, July 19-23, 1993, Tokyo, Japan[doi>10.1145/165939.165965]
SPEC. SPEC CPU2000. Standard Performance Evaluation Corporation. Available at http://www.spec.org/cpu2000/.
Toshio Suganuma , Hideaki Komatsu , Toshio Nakatani, Detection and global optimization of reduction operations for distributed parallel machines, Proceedings of the 10th international conference on Supercomputing, p.18-25, May 25-28, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/237578.237581]
Tarjan, R. E. 1972. Depth-first search and linear graph algorithms. SIAM J. Comput. 1, 2 (June), 146--160.
Peng Tu , David Padua, Gated SSA-based demand-driven symbolic analysis for parallelizing compilers, Proceedings of the 9th international conference on Supercomputing, p.414-423, July 03-07, 1995, Barcelona, Spain[doi>10.1145/224538.224648]
van Engelen, R. 2001. Efficient symbolic analysis for optimizing compilers. In Proceedings of the 10th International Conference on Compiler Construction (Genova, Italy). Lecture Notes in Computer Science, vol. 2027. Springer-Verlag, New York, 118--132.
Robert A. van Engelen , J. Birch , Y. Shou , B. Walsh , Kyle A. Gallivan, A unified framework for nonlinear dependence testing and symbolic analysis, Proceedings of the 18th annual international conference on Supercomputing, June 26-July 01, 2004, Malo, France[doi>10.1145/1006209.1006226]
L. M. Wills, Automated program recognition: a feasibility demonstration, Artificial Intelligence, v.45 n.1-2, p.113-171, Sep. 1990[doi>10.1016/0004-3702(90)90039-3]
Michael Joseph Wolfe , Carter Shanklin , Leda Ortega, High Performance Compilers for Parallel Computing, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1995
Peng Wu , Albert Cohen , Jay Hoeflinger , David Padua, Monotonic evolution: an alternative to induction variable substitution for dependence analysis, Proceedings of the 15th international conference on Supercomputing, p.78-91, June 2001, Sorrento, Italy[doi>10.1145/377792.377809]
Fubo Zhang , Erik H. D'Hollander, Enhancing Parallelism by Removing Cyclic Data Dependencies, Proceedings of the 6th International PARLE Conference on Parallel Architectures and Languages Europe, p.387-397, July 04-08, 1994
E V Zima, Automatic construction of systems of recurrence relations, USSR Computational Mathematics and Mathematical Physics, v.24 n.11-12, p.193-197, March 1986
Eugene V. Zima, Simplification and optimization transformations of chains of recurrences, Proceedings of the 1995 international symposium on Symbolic and algebraic computation, p.42-50, July 10-12, 1995, Montreal, Quebec, Canada[doi>10.1145/220346.220352]
