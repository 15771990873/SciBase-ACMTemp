Interactive screen editors repeatedly determine terminal command sequences to update a screen row. Computing an optimal command sequence differs from the traditional sequence comparison problem in that there is a cost for moving the cursor over unedited characters and the cost of ann-character command is not always the cost ofnone-character commands. For example, on an ANSI-standard terminal, it takes nine bytes to insert one character, ten to insert two, eleven to insert three, and so on. This paper presents anO(MN) dynamic programming algorithm for row replacement where ann-character command costs &agr;n+ &bgr; for constants &agr; and &bgr;.Mis the length of the original row andNis the length of its replacement. Also given is anO(Cost× (M+N)) “greedy” algorithm for optimal row replacement. HereCostis the optimal cost (in bytes) of the replacement, so the algorithm is fast when the require
d update is small. Though the algorithm is rather complicated, it is fast enough to be useful in practice.