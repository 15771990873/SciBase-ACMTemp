Hassan Aït-Kaci, Warren's abstract machine: a tutorial reconstruction, MIT Press, Cambridge, MA, 1991
Krzysztof R. Apt, Arrays, bounded quantification and iteration in logic and constraint logic programming, Science of Computer Programming, v.26 n.1-3, p.133-148, May 1996[doi>10.1016/0167-6423(95)00020-8]
Krzysztof R. Apt, From logic programming to Prolog, Prentice-Hall, Inc., Upper Saddle River, NJ, 1996
APT, K. R. AND BOL, R. 1994. Logic programming and negation: A survey. J. Logic Program. 19- 20, 9-71.
Krzysztof R. Apt , Andrea Schaerf, Search and imperative programming, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.67-79, January 15-17, 1997, Paris, France[doi>10.1145/263699.263709]
Jonas Barklund , Johan Bevemyr, Prolog with Arrays and Bounded Quantifications, Proceedings of the 4th International Conference on Logic Programming and Automated Reasoning, p.28-39, July 13-20, 1993
BARR, A., FEIGENBAUM, E. A., AND COHEN, P. R. 1981. The Handbook of Artificial Intelligence Vol~ 1. HeurisTech, Stanford.
BRUNEKREEF, J. 1998. Annotated algebraic specification of the syntax and semantics of the programming language Alma-0. Tech. Rep. P9803, Programming Research Group, University of Amsterdam, The Netherlands. Available via http://www.cwi.nl/alma.
BYLANDER, W. 1991. Complexity results for planning. In Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI-91). 274-279.
CASEAU, Y. AND LABURTHE, F. 1996. Introduction to the CLAIRE programming language. Tech. rep., Departement Math~matiques et Informatique, Ecole Normale Sup6rieure, Paris, France.
COELHO, H. AND COTTA, J. C. 1988. Prolog by Example. Springer-Verlag, Berlin.
Jacques Cohen, Non-Deterministic Algorithms, ACM Computing Surveys (CSUR), v.11 n.2, p.79-94, June 1979[doi>10.1145/356770.356773]
Alain Colmerauer, An introduction to Prolog III, Communications of the ACM, v.33 n.7, p.69-90, July 1990[doi>10.1145/79204.79210]
DONNOLY, C. AND STALLMAN, R. 1995. Bison, the YACC-compatible parser generator. Free Software Foundation, Cambridge, Mass. Available via http://www.math.utah.edu/docs/info/bison_toc.html.
Margaret A. Ellis , Bjarne Stroustrup, The annotated C++ reference manual, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1990
ERIKSSON, L.-H. AND RAYNER, M. 1984. Incorporating mutable arrays into logic programming. In Proceedings of the Pnd International Conference on Logic Programming, S. /~. Tarnlund, Ed. Uppsala University, 101-114.
FIKES, R. E. AND NILSSON, N. J. 1971. STRIPS: A new approach to the application of theorem proving to problem solving. Artif. InteU. J. 2, 189-208.
James Gosling , Bill Joy , Guy L. Steele, The  Java Language Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1996
Ralph E. Griswold , Madge T. Griswold, ICON Programmng Language, Prentice Hall Professional Technical Reference, 1983
GROENENDIJK, J. AND STOKHOF, M. 1991. Dynamic predicate logic. Ling. Phil. 14{, 2, 39-101.
HENNESSY, M. C. n. AND PLOTKIN, G. D. 1979. Full abstraction for a simple programming language. In Proceedings of Mathematical Foundations of Computer Science. Lecture Notes in Computer Science, vol. 74, Springer-Verlag, New York, 108-120.
HEWITT, C. 1971. Procedural embedding of knowledge in PLANNER. In Proceedings of the Pnd International Joint Conference on Artificial Intelligence (IJCAI-71). 167-182.
P. Klint, A meta-environment for generating programming environments, ACM Transactions on Software Engineering and Methodology (TOSEM), v.2 n.2, p.176-201, April 1993[doi>10.1145/151257.151260]
Feliks Kluźniak , Mirosława Miłkowska, Spill—a logic language for writing testable requirements specifications, Science of Computer Programming, v.28 n.2-3, p.193-223, April 1997[doi>10.1016/S0167-6423(96)00021-4]
Leo Marcus, Syntactic and semantic dependence of array-arithmetic sentences, with an application to program verification, Fundamenta Informaticae, v.27 n.1, p.77-100, July 1996
MCALOON, K. AND TRETKOFF, C. 1995. 2LP: Linear programming and logic programming. In Principles and Practice of Constraint Programming, P. Van Hentenryck and V. Saraswat, Eds. MIT Press, Cambridge, Mass., 101-116.
PARTINGTON, V. 1997. Implementation of an imperative programming language with backtracking. Tech. Rep. P9712, Department of Mathematics, Computer Science, Physics & Astronomy, University of Amsterdam, The Netherlands. Available via http://www.wins, uva. nl/research/prog/reports/rep orts. ht ml.
PAXSON, V. 1995. Flex, version P.5, A fast scanner generator. The Regents of the University of California. Available http://www.math, utah. edu/docs/inf o/flex_toe .html.
PUGET, J.-F. 1994. A C++ implementation of CLP. In Proceedings of the 2nd Singapore International Conference on Intelligent Systems.
J. T. Schwartz , R. B. Dewar , E. Schonberg , E. Dubinsky, Programming with sets; an introduction to SETL, Springer-Verlag New York, Inc., New York, NY, 1986
SCOTT, D. S. AND DE BAKKER, J. W. 1969. A theory of programs. Unpublished seminar notes, IBM, Vienna.
SEO, K. AND YOKOTA, W. 1988. Pegasus: A RISC processor for high-performance execution of Prolog programs, in VLSI '87, C. H. Sequin, Ed. IFIP, North-Holland, Amsterdam, 261-274.
Yoav Shoham, Artificial intelligence techniques in Prolog, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1994
Leon Sterling , Ehud Shapiro, The art of Prolog (2nd ed.): advanced programming techniques, MIT Press, Cambridge, MA, 1994
SUSSMAN~ G. J. AND MCDERMOTT~ D. V. 1972. CONNIVER reference manual. AI Memo no. 259, MIT Project MAC.
Gerald Sussman , Terry Winograd, Micro-Planner Reference Manual, Massachusetts Institute of Technology, Cambridge, MA, 1970
Arie Van Deursen , Jan Heering , Paul Klint, Language Prototyping: An Algebraic Specification Approach: Vol. V, World Scientific Publishing Co., Inc., River Edge, NJ, 1996
Andrei Voronkov, Logic Programming with Bounded Quantifiers, Proceedings of the First Russian Conference on Logic Programming, p.486-514, September 14-18, 1990
Niklaus Wirth, Programming in MODULA-2 (3rd corrected ed.), Springer-Verlag New York, Inc., New York, NY, 1985
Niklaus Wirth, Algorithms & data structures, Prentice-Hall, Inc., Upper Saddle River, NJ, 1985
Niklaus Wirth, Compiler construction, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 1996
