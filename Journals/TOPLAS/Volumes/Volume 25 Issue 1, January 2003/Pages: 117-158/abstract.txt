This paper presents a type-based information flow analysis for a call-by-value Î»-calculus equipped with references, exceptions and let-polymorphism, which we refer to as ML. The type system is constraint-based and has decidable type inference. Its noninterference proof is reasonably light-weight, thanks to the use of a number of orthogonal techniques. First, a syntactic segregation betweenvaluesandexpressionsallows a lighter formulation of the type system. Second, noninterference is reduced tosubject reductionfor a nonstandard language extension. Lastly, asemi-syntacticapproach to type soundness allows dealing with constraint-based polymorphism separately.