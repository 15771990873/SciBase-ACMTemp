John Allen, Anatomy of LISP, McGraw-Hill, Inc., New York, NY, 1978
Egidio Astesiano , Gerardo Costa, Languages with Reducing Reflective Types, Proceedings of the 7th Colloquium on Automata, Languages and Programming, p.38-50, July 14-18, 1980
Henry G. Baker, Jr., Shallow binding in Lisp 1.5, Communications of the ACM, v.21 n.7, p.565-569, July 1978[doi>10.1145/359545.359566]
Daniel G. Bobrow , Ben Wegbreit, A model and stack implementation of multiple environments, Communications of the ACM, v.16 n.10, p.591-603, Oct. 1973[doi>10.1145/362375.362379]
BURGE, W.H. Recursive Programming Techniques. Addison-Wesley, Reading, Mass., 1975.
BURSTALL, R.M., COLLINS, J.S., AND POPPLESTONE, R.J. Programming in POP-2. Edinburgh University Press, Edinburgh, Scotland, 1971.
EDDY, G.J., AND GEOR(~EFF, M.P. The implementation of higher-order functions in PASCAL. Computer Science Tech. Rep. TR 33, Monash University, Clayton, Victoria, Australia, 1983.
FODERADO, J.K. The FRANZ LISP manual, opus 33b. University of California, Berkeley, Calif., 1980.
GEORGEFF, M.P. Higher-order functions in PASCAL. In Proceedings of the 4th Australian Computer Science Conference (Brisbane, Australia), 1981.
M. P. Georgeff, A scheme for implementing functional values on a stack machine, Proceedings of the 1982 ACM symposium on LISP and functional programming, p.188-195, August 15-18, 1982, Pittsburgh, Pennsylvania, United States[doi>10.1145/800068.802149]
GEOg(~EFF, M.P., AND BODNAR, S. A simple and efficient implementation of FUNARGS in LISP. AI Center Tech. Note, SRI international, Menlo Park, Calif., 1984.
GEOR(~E~, M.P., AND EDDY, G.J. Functional PASCAL: An extension of PASCAL to higherorder functions. Computer Science Tech. Rep. TR 27, Monash University, Clayton, Victoria, Australia, 1982.
Peter Henderson, Functional Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1980
LANDIN, P. The mechanical evaluation of expressions. Computer Journal 6, 4 (1964), 308-320.
P. J. Landin, A correspondence between ALGOL 60 and Church's Lambda-notations: Part II, Communications of the ACM, v.8 n.3, p.158-167, March 1965[doi>10.1145/363791.363804]
L~NoS~.Y, C.H., AND VAN OER MEULEN, S.G. Informal Introduction to ALGOL-80. North- Holland, New York, 1971.
Drew McDermott, An efficient environment allocation scheme in an interpreter for a lexically-scoped LISP, Proceedings of the 1980 ACM conference on LISP and functional programming, p.154-162, August 25-27, 1980, Stanford University, California, United States[doi>10.1145/800087.802801]
Joel Moses, The function of FUNCTION in LISP or why the FUNARG problem should be called the environment problem, ACM SIGSAM Bulletin[doi>10.1145/1093410.1093411]
NORI, K., AMMAN, U., JENSEN, K., NAGELI, H., AND JACOBI, C. The Pascal P-compiler implementation notes. 1976.
Guy L Steele, Debunking the ``Expensive Procedure Call'''' Myth or, Procedure Call Implementations Considered Harmful or, LAMDBA: The Ultimate GOTO, Massachusetts Institute of Technology, Cambridge, MA, 1977
TOVaETZS:Y. A summary of MAC-LiSP and other documentation provided by M.I.T. with the MAC-LISP system. Massachusetts Institute of Technology, Cambridge, Mass., 1979.
Peter. Wegner, Programming Languages, Information Structures, and Machine Organization., McGraw Hill Text, 1968
