Philip Samuel Abrams, An apl machine, 1970
BATTAREL, G., DELBREIL, M., ANO TUSERA, D. Optimized interpretation of APL statements. In Proceedings of the APL Congress (Copenhagen, Denmark). Elsevier North-Holland, New York, 1973, pp. 49-57.
Harvey W. Bingham, Content analysis of APL defined functions, Proceedings of seventh international conference on APL, p.60-66, June 11-13, 1975, Pisa, Italy[doi>10.1145/800117.803784]
Harvey W. Bingham , Kenneth T. Carvin, Dynamic usage of APL primitive functions, Proceedings of the eighth international conference on APL, p.83-86, September 22-24, 1976, Ottawa, Canada[doi>10.1145/800114.803664]
CHU, Y., Ed. IEEE Computer 14, 7 (July 1981), issued dedicated to high-level architecture in general.
A. D. Falkoff , D. L. Orth, Development of an APL standard, ACM SIGAPL APL Quote Quad, v.9 n.4, p.409-453, June 1979[doi>10.1145/390008.804495]
FLYNN, M.J. Directions and issues in architecture and language. IEEE Comput. C-13, 10 (Oct. 1980), 5-22.
FLYNN, M.J., A~O HOEVEL, L.W. Execution architecture: The DELTRAN experiment. IEEE Trans. Comput. C-32, 2 (Feb. 1983), 156-175.
Leo J. Guibas , Douglas K. Wyatt, Compilation and delayed evaluation in APL, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.1-8, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512761]
A. Hassitt , J. W. Lageschulte , L. E. Lyon, Implementation of a high level language machine, Communications of the ACM, v.16 n.4, p.199-212, April 1973[doi>10.1145/362003.362006]
HASS~TW, A. A~o LYOn, L.E. Efficient evaluation of array subscripts of arrays. IBM J. Res. Dev. (Jan. 1972), 45-57.
Richard F. Hobson, Structured machine design: An ongoing experiment, Proceedings of the 8th annual symposium on Computer Architecture, p.37-55, May 12-14, 1981, Minneapolis, Minnesota, United States
HOEVEL, L.W. 'Ideal' directly executed languages: An analytical argument for emulation. IEEE Trans. Comput. C-23, 8 (Aug. 1974), 759-767.
Kenneth E. Iverson, Notation as a tool of thought, Communications of the ACM, v.23 n.8, p.444-465, Aug. 1980[doi>10.1145/358896.358899]
KALFO~, P. On a bottom-up method for evaluation of APL expressions. In Proceedings of the APL Congress (Copenhagen, Denmark). Elsevier North-Holland, New York, 1973, pp. 245-250.
KNUTH, D.E. An Empirical Study of FORTRAN Programs. Vol. 1. Software--Practices and Experiences. 1971,
MARCHAL, A., AND KERR, R.A. The design of a structured APL interpreter. In Proceedings of the APL Congress (Copenhagen, Denmark). Elsevier North-Holland, New York, 1973, pp. 313-317.
MCFARLA~D, C. A language-oriented computer design. In Proceedings of AFIPS Fall Joint Computer Conference (Houston, Tex., Nov. 17-19) vol. 37. AFIPS Press, Reston, Va., 1970, pp. 629-64O.
PATT, Y.N. Introduction to the COMET microarchitecture. Digital Equipment Corporation, Mar. 1980.
PERL~S, A.J. Steps toward an APL compiler. Res. Rep. 24, Yale Univ., New Haven, Conn., Jan. 1974.
ROmNET, B.J. Architectural Design of an APL Processor. In High-Level Language Computer Architecture, Y. Chu, Ed. Academic Press, New York, 1975, pp. 243-268.
SNYDER, W.S. MAPLE: Multiprocessor APL machine. Master's thesis, Computing Science Dept., Simon Fraser Univ., Burnaby, B.C., 1981.
Andrew S. Tanenbaum, Implications of structured programming for machine architecture, Communications of the ACM, v.21 n.3, p.237-246, March 1978[doi>10.1145/359361.359454]
TH~JR~ZR, K.J., ANO MYR~A, J.W. System design of a cellular APL computer. IEEE Trans. Comput. C-19, 4 (Apr. 1970), 291-303.
VAN DYKE, E.J. A dynamic incremental compiler for an interpretive language. Hewlett-Packard J 10, 11 (July 1977), 17-23.
W~L~ER, W.T. Design of the Burroughs B1700. In Proceedings of the AFIPS FallJoint Computer Conference (Anaheim, Calif., Dec. 5-7) vol. 41. AFIPS Press, Reston, Va., 1972, pp. 489-497.
Rodnay Zaks, A  Microprogrammed APL Implementation, SYBEX Inc., Alameda, CA, 1978
