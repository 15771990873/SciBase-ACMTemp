We design a system with sixBasic Combinatorsand prove that it is powerful enough to embed the full asynchronous &pgr;-calculus, including replication. Our theory for constructingCombinatory Versionsof concurrent languages is based on a method, used by Quine and Bernays, for the general elimination of variables in linguistic formalisms. Our combinators are designed to eliminate the requirement ofnamesthat areboundby aninput prefix. They also eliminate the need for input prefix, output prefix, and the accompanying mechanism ofsubstitution. We define a notion ofbisimulationfor the combinatory version and show that the combinatory version preserves the semantics  of the original calculus. One of the distinctive features of the approach is that it can be used to rework several process algebras in order to derive equivalent combinatory versions.