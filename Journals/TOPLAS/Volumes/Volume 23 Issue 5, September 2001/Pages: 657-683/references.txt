APPEL,A.W.AND FELTEN, E. W. 2001. Models for security policies in proof-carrying code. Tech. Rep. TR-636-01, Computer Science, Princeton University.
Andrew W. Appel , Amy P. Felty, A semantic model of types and machine instructions for proof-carrying code, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.243-253, January 19-21, 2000, Boston, MA, USA[doi>10.1145/325694.325727]
Lars Birkedal , Robert Harper, Relational Interpretations of Recursive Types in an operational Setting (Summary), Proceedings of the Third International Symposium on Theoretical Aspects of Computer Software, p.458-490, September 23-26, 1997
Christopher Colby , Peter Lee , George C. Necula , Fred Blau , Mark Plesko , Kenneth Cline, A certifying compiler for Java, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.95-107, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349315]
R. L. Constable , S. F. Allen , H. M. Bromley , W. R. Cleaveland , J. F. Cremer , R. W. Harper , D. J. Howe , T. B. Knoblock , N. P. Mendler , P. Panangaden , J. T. Sasaki , S. F. Smith, Implementing mathematics with the Nuprl proof development system, Prentice-Hall, Inc., Upper Saddle River, NJ, 1986
Robert Harper , Furio Honsell , Gordon Plotkin, A framework for defining logics, Journal of the ACM (JACM), v.40 n.1, p.143-184, Jan. 1993[doi>10.1145/138027.138060]
David MacQueen , Gordon Plotkin , Ravi Sethi, An ideal model for recursive polymorphic types, Information and Control, v.71 n.1-2, p.95-130, Oct/Nov. 1986[doi>10.1016/S0019-9958(86)80019-5]
Neophytos G. Michael , Andrew W. Appel, Machine Instruction Syntax and Semantics in Higher Order Logic, Proceedings of the 17th International Conference on Automated Deduction, p.7-24, June 17-20, 2000
MILNER, R. 1977. Fully abstract models of typed -calculi. Theoretical Computer Science 4, 1-22.
Yasuhiko Minamide , Greg Morrisett , Robert Harper, Typed closure conversion, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.271-283, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237791]
John C. Mitchell , Ramesh Viswanathan, Effective Models of Polymorphism, Subtyping and Recursion (Extended Abstract), Proceedings of the 23rd International Colloquium on Automata, Languages and Programming, p.170-181, July 08-12, 1996
J. Gregory Morrisett , Karl Crary , Neal Glew , David Walker, Stack-Based Typed Assembly Language, Proceedings of the Second International Workshop on Types in Compilation, p.28-52, March 25-27, 1998
Greg Morrisett , David Walker , Karl Crary , Neal Glew, From system F to typed assembly language, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.85-97, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268954]
George C. Necula, Proof-carrying code, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.106-119, January 15-17, 1997, Paris, France[doi>10.1145/263699.263712]
George Ciprian Necula , Peter Lee, Compiling with proofs, Carnegie Mellon University, Pittsburgh, PA, 1998
Frank Pfenning, Elf: A Meta-Language for Deductive Systems (System Descrition), Proceedings of the 12th International Conference on Automated Deduction, p.811-815, June 26-July 01, 1994
PFENNING,F.AND SCHURMANN, C. 1999. System description: Twelf-a meta-logical framework for deductive systems. In The 16th International Conference on Automated Deduction. Springer-Verlag, Berlin.
PITTS, A. M. 1996. Relational properties of domains. Information and Computation 127, 2, 66-90.
David A. Schmidt, Denotational semantics: a methodology for language development, William C. Brown Publishers, Dubuque, IA, 1986
SCOTT, D. S. 1976. Data types as lattices. SIAM J. Comput. 5, 3, 522-87.
Glynn Winskel, The formal semantics of programming languages: an introduction, MIT Press, Cambridge, MA, 1993
