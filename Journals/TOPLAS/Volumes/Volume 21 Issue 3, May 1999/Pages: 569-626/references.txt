M. W. Alford , J. P. Ansart , G. Hommel , L. Lamport , B. Liskov , G. P. Mullery , F. B. Schneider, Distributed systems: methods and tools for specification. An advanced course, Springer-Verlag New York, Inc., New York, NY, 1985
ALOUINI, I. AND VAN ROY, P. 1999. Le protocole r6parti de Distributed Oz (in French). In Colloque Francophone sur l'Ingdnierie des Protocoles (CFIP 99). 283-298.
Joe Armstrong , Robert Virding , Claes Wikström , Mike Williams, Concurrent programming in ERLANG (2nd ed.), Prentice Hall International (UK) Ltd., Hertfordshire, UK, 1996
ARVIND AND THOMAS, R. E. 1980. I-Structures: An efficient data type for functional languages. Tech. Rep. 210, MIT, Laboratory for Computer Science.
Henri E. Bal , Jennifer G. Steiner , Andrew S. Tanenbaum, Programming languages for distributed computing systems, ACM Computing Surveys (CSUR), v.21 n.3, p.261-322, Sep. 1989[doi>10.1145/72551.72552]
BRAND, P., VAN ROY, P., COLLET, R., AND I~LINTSKOG, E. 1999. Formal definition and correctness of a reliable mobile-state protocol for constructing fault-tolerant applications. In preparation.
CARDELLI, L. 1995. A language with distributed scope. ACM Trans. Comput. Syst. 8, 1 (Jan.), 27-59.
Randy Chow , Yuen-Chien Chow, Distributed Operating Systems and Algorithms, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1997
COLMERAUER, A. 1982. Prolog and Infinite Trees. Academic Press. In Logic Programming, Keith L. Clark and Sten-Ake Tarnlund, eds.
COURCELLE, B. 1983. Fundamental properties of infinite trees. Theoretical Computer Science 25, 95-169.
DFKI Oz 1998. DFKI Oz version 2.0. Available at http://www.ps.uni-sb.de.
M. Díaz , B. Rubio , J. M. Troya, DRL: A distributed real-time logic language, Computer Languages, v.23 n.2-4, p.87-120, July, 1997[doi>10.1016/S0096-0551(97)00011-8]
DUCHIER, D., KORNSTAEDT, L., SCHULTE, C., AND SMOLKA, G. 1998. A Higher-order Module Discipline with Separate Compilation, Dynamic Linking, and Pickling. Tech. rep., Programming Systems Lab, DFKI and Universitgt des Saarlandes. DRAFT.
FOSTER, I. 1988. Parallel implementation of Parlog. In International Conference on Parallel Processing. IEEE Computer Society, 9-16.
Takashi Chikayama , Tetsuro Fujise , Daigo Sekita, A Portable and Efficient Implementation of KL1, Proceedings of the 6th International Symposium on Programming Language Implementation and Logic Programming, p.25-39, September 14-16, 1994
James Gosling , Bill Joy , Guy L. Steele, The  Java Language Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1996
GUDEMAN, D. 1993. Representing type information in dynamically typed languages. Tech. Rep. TR93-27, University of Arizona, Department of Computer Science. Sept.
Robert H. Halstead, Jr., MULTILISP: a language for concurrent symbolic computation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.4, p.501-538, Oct. 1985[doi>10.1145/4472.4478]
HARIDI, S. 1981. Logic programming based on a natural deduction system. Ph.D. thesis, Royal Institute of Technology, Stockholm.
HARIDI, S. AND FRANZI~N, N. 1999. Tutorial of Oz. Tech. rep. In Mozart documentation, available at http ://www. mozart-oz, org.
HARIDI, S. AND SAHLIN, D. 1984. Efficient implementation of unification of cyclic structures. Ellis Horwood Limited. In Implementations of Prolog, J. A. Campbell, ed.
Seif Haridi , Peter Van Roy , Per Brand , Christian Schulte, Programming languages for distributed applications, New Generation Computing, v.16 n.3, p.223-261, 1998[doi>10.1007/BF03037481]
Seif Haridi , Peter Van Roy , Gert Smolka, An overview of the design of Distributed Oz, Proceedings of the second international symposium on Parallel symbolic computation, p.176-187, July 20-22, 1997, Maui, Hawaii, USA[doi>10.1145/266670.266726]
Martin Henz, Objects for concurrent constraint programming, Kluwer Academic Publishers, Norwell, MA, 1998
HENZ, M. 1997b. Objects in Oz. Ph.D. thesis, Universitgt des Saarlandes, Fachbereich Informatik, Saarbriicken, Germany.
Robert A. Iannucci, Parallel Machines: Parallel Machine Languages, Kluwer Academic Publishers, Norwell, MA, 1990
ICHIYOSHI, N., MIYAZAKI, T., AND TAKI, K. 1987. A distributed implementation of Flat GHC on the Multi-PSI. In gth International Conference on Logic Programming. MIT Press, 257-275.
JAFFAR, J. AND MAHER, M. 1994. Constraint logic programming: A survey. J. Log. Prog. 19/20, 503-581.
Evelina Lamma , Paola Mello , Cesare Stefanelli , Pascal Van Hentenryck, Improving Distributed Unification through Type Analysis, Proceedings of the Third International Euro-Par Conference on Parallel Processing, p.1181-1190, August 26-29, 1997
Douglas Lea, Concurrent Programming in Java(TM): Design Principles and Patterns (3rd Edition) (Java (Addison-Wesley)), Addison-Wesley Professional, 2006
Ho-fung Leung, Distributed Constraint Logic Programming, World Scientific Publishing Co., Inc., River Edge, NJ, 1993
Ho-fung Leung , Keith L. Clark, Constraint satisfaction in distributed concurrent logic programming, Journal of Symbolic Computation, v.21 n.4-6, p.699-714, April/May/June 1996[doi>10.1006/jsco.1996.0037]
J. W. Lloyd, Foundations of logic programming; (2nd extended ed.), Springer-Verlag New York, Inc., New York, NY, 1987
Alberto Martelli , Ugo Montanari, An Efficient Unification Algorithm, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.2, p.258-282, April 1982[doi>10.1145/357162.357169]
MEHL, M. 1999. The Oz virtual machine - records, transients, and deep guards. Ph.D. thesis, Technische FakultSot der UniversitS~t des Saarlandes.
MEHL, M., SCHULTE, C., AND SMOLKA, G. 1998. Futures and by-need synchronization for Oz.
K. Mehlhorn , A. Tsakalidis, Data structures, Handbook of theoretical computer science (vol. A): algorithms and complexity, MIT Press, Cambridge, MA, 1991
HOZART CONSORTIUM. 1999.The Mozart programming system (Oz 3). Available at http ://www. mozart-oz, org.
Randy Otte , Paul Patrick , Mark Roy, Understanding CORBA (Common Object Request Broker Architecture), Prentice-Hall, Inc., Upper Saddle River, NJ, 1995
David Plainfossé , Marc Shapiro, A Survey of Distributed Garbage Collection Techniques, Proceedings of the International Workshop on Memory Management, p.211-249, September 27-29, 1995
Andreas Podelski , Gert Smolka, Situated simplification, Theoretical Computer Science, v.173 n.1, p.235-252, Feb. 1997[doi>10.1016/S0304-3975(96)00197-1]
J. A. Robinson, A Machine-Oriented Logic Based on the Resolution Principle, Journal of the ACM (JACM), v.12 n.1, p.23-41, Jan. 1965[doi>10.1145/321250.321253]
ROKUSAWA, K., NAKASE, A., AND CHIKAYAMA, T. 1996. Distributed memory implementation of KLIC. New Generation Computing 14, 3, 261-280.
Vijay A. Saraswat, Concurrent constraint programming, MIT Press, Cambridge, MA, 1993
SCHULTE, C. 1997. Programming constraint inference engines. In Proceedings of the 3rd International Conference on Principles and Practice of Constraint Programming, G. Smolka, Ed. Lecture Notes in Computer Science, vol. 1330. Springer-Verlag, Schlof3 Hagenberg, Austria, 519-533.
Ehud Shapiro, The family of concurrent logic programming languages, ACM Computing Surveys (CSUR), v.21 n.3, p.413-510, Sep. 1989[doi>10.1145/72551.72555]
SMOLKA, G. 1995. The Oz programming model. In Computer Science Today. Lecture Notes in Computer Science, vol. 1000. Springer-Verlag, Berlin, 324-343.
Gert Smolka, Constraints in OZ, ACM Computing Surveys (CSUR), v.28 n.4es, Dec. 1996[doi>10.1145/242224.242321]
Gert Smolka, Concurrent Constraint Programming Based on Functional Programming (Extended Abstract), Proceedings of the 7th European Symposium on Programming: Programming Languages and Systems, p.1-11, March 28-April 04, 1998
SMOLKA, G., SCHULTE, C., AND VAN ROY, P. 1995. PERDIO--Persistent and distributed programming in Oz. BHBF project proposal. Available at http://www.ps.uni-sb.de.
Bjarne Stroustrup, The C++ programming language (2nd ed.), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1991
SUN MICROSYSTEMS. 1997. The Remote Method Invocation Specification. Available at http ://www. j avasoft, com.
SUNDSTROM, A. 1998. Comparative study between Oz 3 and Java. Tech. rep., Uppsala University and Swedish Institute of Computer Science. July.
TAYLOR, t. 1991. High-performance Prolog implementation. Ph.D. thesis, Basset Department of Computer Science, University of Sydney.
Gerard Tel, Introduction to distributed algorithms, Cambridge University Press, New York, NY, 1994
VAN RoY, P. 1994. 1983-1993: The wonder years of sequential Prolog implementation. J. Log. Prog. 19/20, 385-441.
VAN ROY, P. 1999. On the separation of concerns in distributed programming: Application to distribution structure and fault tolerance in Mozart. In International Workshop on Parallel and Distributed Computing for Symbolic and Irregular Applications (PDSIA 99). Tohoku University, Sendal, Japan.
VAN RoY, P., BRAND, P., HARIDI, S., AND COLLET, R. 1999. A lightweight reliable object migration protocol. Lecture Notes in Computer Science, vol. 1686. Springer Verlag.
VAN ROY, P., HARIDI, S., AND BRAND, P. 1999. Distributed progr&mming in Moz&rt - A tutori&l introduction. Tech. rep. In Moz&rt document&tion, &v&il&ble &t http://www.mozart-oz.org.
Peter Van Roy , Seif Haridi , Per Brand , Gert Smolka , Michael Mehl , Ralf Scheidhauer, Mobile objects in distributed Oz, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.5, p.804-851, Sept. 1997[doi>10.1145/265943.265972]
Arthur H. Veen, Dataflow machine architecture, ACM Computing Surveys (CSUR), v.18 n.4, p.365-396, Dec. 1986[doi>10.1145/27633.28055]
WARREN, D. H. D. 1977. Applied logic-its use &nd implement&tion &s & progr&mming tool. Ph.D. thesis, University of Edinburgh. Reprinted &s Technic&l Note 290, SRI Intern&tion&l.
WIKSTROM, C. 1994. Distributed progr&mming in Erl&ng. In the 1st International Symposium on Parallel Symbolic Computation (PASCO 94). World Scientific, Sing&pore, 412-421.
