ALLEN, F. E., AND COCKE, J. A catalogue of optimizing transformations. In Design and Optimization of Compilers, R. Rustin, Ed., Prentice-Hall, Englewood Cliffs, N.J., 1972, 1-30.
Jacques J. Arsac, Syntactic source to source transforms and program manipulation, Communications of the ACM, v.22 n.1, p.43-54, Jan. 1979[doi>10.1145/359046.359057]
AUB1N, R. Some generalization heuristics in proofs by induction. In Proceedings IRIA Symposium on Proving and Improving Programs (Arc-et-Senans, France, July 1975), 197-208.
R. J. R. Back , Heikki Mannila , Kari-Jouko Räihä, Derivation of efficient DAG marking algorithms, Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.20-27, January 24-26, 1983, Austin, Texas[doi>10.1145/567067.567071]
BALZER, R. M. Transformational implementation: An example. IEEE Trans. Softw. Eng. SE-7, i (Jan. 1981), 3-14.
David R. Barstow, Knowledgebased Pgm Constr, Elsevier Science Inc., New York, NY, 1979
F. L. Bauer, Programming as an evolutionary process, Proceedings of the 2nd international conference on Software engineering, p.223-234, October 13-15, 1976, San Francisco, California, United States
R. S. Bird, Notes on recursion elimination, Communications of the ACM, v.20 n.6, p.434-439, June 1977[doi>10.1145/359605.359630]
BLIKLE, A. Towards mathematical structured programming. In Formal Descriptions of Programming Concepts, E. J. Neuhold, Ed., North-Holland, Amsterdam, 1978, 9.1-9.19.
Robert S. Boyer , J. Strother Moore, Proving Theorems about LISP Functions, Journal of the ACM (JACM), v.22 n.1, p.129-144, Jan. 1975[doi>10.1145/321864.321875]
BROTSKY, D. Program understanding through clich~ recognition. Working Paper 224, Artificial Intelligence Laboratory, MIT, Cambridge, Dec. 1981.
BROWN, F. M., AND TARNLUND, S.A. Inductive reasoning on recursive equations. Artif. InteU. 12, 3 (Nov. 1979), 207-229.
BROWN, R.H. Reasoning by analogy. Working Paper 132, Artificial Intelligence Laboratory, MIT, Cambridge, Oct. 1976.
BUNDY, A., AND WELHAM, B. Using meta-level inference for selective application of multiple rewrite sets in algebraic manipulation. Artif. InteU. 16, 2 (1981), 189-212.
BURSTEIN, M.H. Concept formation by incremental reasoning and debugging. In Proceedings 2nd International Workshop on Machine Learning (Monticello, Ill., June 1983), 19-25.
CARSONELL, J. G. Derivational analogy in problem solving and knowledge acquisition. In Proceedings 2nd International Workshop on Machine Learning (Monticello, Ill., June 1983), 12-18.
CARBONELL, J.G. Learning by analogy: Formulating and generalizing plans from past experience. In Machine Learning, An Artificial Intelligence Approach, R. S. Michalski, J. G. Carbonell, and T. M. Mitchell, Eds., Tioga, Palo Alto, Calif., 1983, 137-162.
CHEN, D. T. W., AND FINDLER, N. V. Toward analogical reasoning in problem solving by computers. Tech. Rep. 115, Dept. of Computer Science, SUNY, Buffalo, Dec. 1976.
CONWA~, R., AND GRIES, D. An Introduction to Programming: A Structured Approach. 2nd ed., Winthrop, Cambridge, Mass., 1975.
COOPER, D.C. The equivalence of certain computations. Computer J. 9 (1966), 45-52.
DARLINGTON, J. A synthesis of several sorting algorithms. Acta Inf. 11, i (1978), 1-30.
DARLINGTON, J., AND BURSTALL, R. M. A system which automatically improves programs. Acta Inf. 6, I (Mar. 1976), 41-60.
R. Dechter , J. Pearl, A problem simplification approach that generates heuristics for constraint-satisfaction problems, Machine intelligence 11, Oxford University Press, Inc., New York, NY, 1988
Nachum Dershowitz, The  Evolution of Programs, Birkhauser Boston, 1983
DERSHOWlTZ, N., AND MANNA, Z. On automating structured programming. In Proceedings IRIA Symposium on Proving and Improving Programs. (Arc-et-Senans, France, July 1975), 167-193.
DERSHOWlTZ, N., AND MANNA, Z. The evolution of programs: Automatic program modification. IEEE Trans. Softw. Eng. SE-3, 6 (Nov. 1977), 377-385.
Peter Deussen, One Abstract Accepting Algorithm for all Kinds of Parsers, Proceedings of the 6th Colloquium, on Automata, Languages and Programming, p.203-217, July 16-20, 1979
DIJKSTRA, E.W. Notes on structured programming. In Structured Programming, O. J. Dahl, E. W. Dijkstra, and C, A. R. Hoare, Eds., Academic Press, London, 1972.
Edsger Wybe Dijkstra, A  Discipline of Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1997
DIJKSTRA, E.W. Why naive program transformation systems are unlikely to work. In Selected Writings on Computing: A Personal Perspective, Springer, Berlin, 1982, 324-328.
Arthur G. Duncan , Lawrence Yelowitz, Studies in Abstract/Concrete Mappings in Proving Algorithm Correctness, Proceedings of the 6th Colloquium, on Automata, Languages and Programming, p.218-229, July 16-20, 1979
EOAN, D. E., AND GREEN, J.G. Theory of rule induction. In Knowledge and Cognition, L. Gregg, Ed., Lawrence Erlbaum, Hil_lsclale, N.J., 1973.
EVANS, T.G. A program for the solution of geometric-analogy intelligence test questions. In Semantic Information Processing, M. L. Minsky, Ed., MIT Press, Cambridge, Mass., 1968, 271-353.
FIKES, R. E., HART, P. E., AND NILSSON, N.J. Learning and executing generalized robot plans. Artif. InteU. 3, 4 (Winter 1972), 251-288.
FLOYD, g. W. Toward interactive design of correct programs. In Proceedings Information Processing Congress (Ljubljana, Yugoslavia, Aug. 1971), 7-10.
Susan L. Gerhart, Correctness-preserving program transformations, Proceedings of the 2nd ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.54-66, January 20-22, 1975, Palo Alto, California[doi>10.1145/512976.512983]
Susan L. Gerhart, Knowledge about programs: A model and case study, Proceedings of the international conference on Reliable software, p.88-95, April 21-23, 1975, Los Angeles, California[doi>10.1145/800027.808427]
GERHART, S. L., AND YELOWITZ, L. Control structure abstractions of the backtracking programming technique. IEEE Trans. Softw. Eng. SE-2, 4 (Dec. 1976), 285-292.
HESSE, M. Models and Analogies in Science. University of Notre Dame Press, Notre Dame, Ind., 1966.
HUET, G., AND LANG, B. Proving and applying program transformations expressed with secondorder patterns. Acta Inf. 11 (1978), 31-55.
Shmuel Katz , Zohar Manna, Logical analysis of programs, Communications of the ACM, v.19 n.4, p.188-206, April 1976[doi>10.1145/360032.360048]
Richard B. Kieburtz , Jonathan Shultis, Transformations of FP program schemes, Proceedings of the 1981 conference on Functional programming languages and computer architecture, p.41-48, October 18-22, 1981, Portsmouth, New Hampshire, United States[doi>10.1145/800223.806761]
KIRCHNER, C., KIRCHNER, H., AND JOUANNAUD, J.P. Algebraic manipulations as a unification and matching strategy for linear equations in signed binary trees. In Proceedings 7th International Joint Conference on Artificial Intelligence (Vancouver, B.C., Aug. 1981), 1016-1023.
KLING, R.E. A paradigm for reasoning by analogy. Artif. InteU. 2 (1971), 147-178.
Donald E. Knuth, Structured Programming withgo toStatements, ACM Computing Surveys (CSUR), v.6 n.4, p.261-301, Dec. 1974[doi>10.1145/356635.356640]
Robert Kowalski, Logic for problem-solving, North-Holland Publishing Co., Amsterdam, The Netherlands, 1986
Stanley Lee , Willem P. deRoever , Susan L. Gerhart, The evolution of list-copying algorithms and the need for structured program verification, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.53-67, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567758]
David B. Loveman, Program Improvement by Source-to-Source Transformation, Journal of the ACM (JACM), v.24 n.1, p.121-145, Jan. 1977[doi>10.1145/321992.322000]
MCDERMOTT, J. Learning to Use analogies. In Proceedings 6th International Joint Conference on Artificial Intelligence (Tokyo, Aug. 1979), 568-576.
MANNA, Z., AND WALDINGER, R. J. Knowledge and reasoning in program synthesis. Artif. Intell. 6, 2 (Summer 1975), 175-208.
MISRA, J. An approach to formal definitions and proofs of programming principles. IEEE Trans. Softw. Eng. SE-4, 5 (Sept. 1978), 410-413.
MOORE, J. A., AND NEWELL, A. How can MERLIN understand? In Knowledge and Cognition, L. Gregg, Ed., Lawrence Erlbaum, Hillsdale, N.J., 1973.
MOSTOW, J. Toward better models of the design process. AI Mag. 6, 1 (Spring 1985), 44-57.
MUNYER, J.C. Analogy as a heuristic for mechanical theorem-proving. In Collected Abstracts of the Workshop on Automated Deduction, Cambridge, Mass., Aug. 1977.
MURALIDHARAN, M.N. A methodology for algorithm development through schema transformations. Ph.D. dissertation, Computer Science Program, Indian Institute of Technology, Kanpur, India, Jan. 1982.
Dana S. Nau , Vipin Kumar , Laveen Kanal, General branch and bound, and its relation to A* and AO*, Artificial Intelligence, v.23 n.1, p.29-58, May 1984[doi>10.1016/0004-3702(84)90004-3]
Allen Newell, Human Problem Solving, Prentice-Hall, Inc., Upper Saddle River, NJ, 1972
H. Partsch , R. Steinbrüggen, Program Transformation Systems, ACM Computing Surveys (CSUR), v.15 n.3, p.199-236, Sept. 1983[doi>10.1145/356914.356917]
PLAISTED, D.A. Theorem proving with abstraction. Artif InteU. 16, 1 (1981), 47-108.
RICH, C., AND WATERS, R.C. Abstraction, inspection, and debugging in programming. Memo 634, Artificial Intelligence Laboratory, MIT, Cambridge, June 1981.
SCHWARTZ, J. T. Correct program technology. Rep. NS0-12, Courant Institute, New York Univ., Sept. 1977.
STANDISH, T. A., HARRIMAN, D. C., KIBLER, D. F., AND NEIGHBORS, J.M. The Irvine program transformation catalogue. Rep., Dept. Information and Computer Science, Univ. of California, Irvine, Jan. 1976.
Thomas A. Standish , Dennis F. Kibler , James M. Neighbors, Improving and refining programs by program manipulation, Proceedings of the annual conference, p.509-516, October 20-22, 1976, Houston, Texas, United States[doi>10.1145/800191.805652]
STERNBERO, R.J. Intelligence, Information Processing, and Analogical Reasoning. Lawrence Erlbaum, Hillsdale, N.J., 1977.
Gerald Jay Sussman, A  Computer Model of Skill Acquisition, Elsevier Science Inc., New York, NY, 1975
John Wade Ulrich , Robert Moll, Program synthesis by analogy, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.22-28, August 15-17, 1977[doi>10.1145/800228.806928]
United States Department of Defense. The Programming Language Ada: Reference Manual. Springer, Berlin, 1981.
WALKER, S. A., AND STRONG, H. R., JR. Characterizations of fiowchartable recursions. J. Comput. Syst. Sci. 7, 4 (Aug. 1973), 404-447.
WATERS, R.C. The programmer's apprentice: Knowledge-based program editing. IEEE Trans. Softw. Eng. SE-8, i (Jan. 1982), 1-12.
WEGBREIT, B. Goal-directed program transformation. IEEE Trans. Softw. Eng. SE-2 (1976), 69-80.
David S. Wile, Program developments: formal explanations of implementations, Communications of the ACM, v.26 n.11, p.902-911, Nov. 1983[doi>10.1145/182.358443]
Patrick H. Winston, Learning and reasoning by analogy, Communications of the ACM, v.23 n.12, p.689-703, Dec. 1980[doi>10.1145/359038.359042]
Niklaus Wirth, Algorithms + Data Structures = Programs, Prentice Hall PTR, Upper Saddle River, NJ, 1978
Lawrence Yelowitz , Arthur G. Duncan, Abstractions, instantiations, and proofs of marking algorithms, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.13-21, August 15-17, 1977[doi>10.1145/800228.806927]
