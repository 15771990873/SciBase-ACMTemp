ADAMS, D. Recognizing quote deemed harmful to eval's laziness. Private communication. 1987.
John Allen, Anatomy of LISP, McGraw-Hill, Inc., New York, NY, 1978
John Backus, Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs, Communications of the ACM, v.21 n.8, p.613-641, Aug. 1978[doi>10.1145/359576.359579]
BAI~ENDREGT, H. The Lambda Calculus Its Syntax and Semantzcs. North Holland Press, Amsterdam, 1984.
Alan Bawden, Reification without evaluation, Proceedings of the 1988 ACM conference on LISP and functional programming, p.342-349, July 25-27, 1988, Snowbird, Utah, USA[doi>10.1145/62678.62726]
Robert S. Boyer , J. Strother Moore, Proving Theorems about LISP Functions, Journal of the ACM (JACM), v.22 n.1, p.129-144, Jan. 1975[doi>10.1145/321864.321875]
BURSTALL, R. Proving properties of programs by structural induction. Comput. J. 12 (1969).
CARTWR~GHT, R. User defined data types as an aid to venfying lisp programs. In Automata, Languages and Programmmg. Edinburgh University Press, 1976.
Olivier Danvy , Karoline Malmkjaer, Intensions and extensions in a reflective tower, Proceedings of the 1988 ACM conference on LISP and functional programming, p.327-341, July 25-27, 1988, Snowbird, Utah, USA[doi>10.1145/62678.62725]
Jim des RiviÃ¨res , Brian Cantwell Smith, The implementation of procedurally reflective languages, Proceedings of the 1984 ACM Symposium on LISP and functional programming, p.331-347, August 06-08, 1984, Austin, Texas, USA[doi>10.1145/800055.802050]
Mattias Felleisen, The theory and practice of first-class prompts, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.180-190, January 10-13, 1988, San Diego, California, USA[doi>10.1145/73560.73576]
FELLEISEN, M., FRIEDMAN, D., KOHLBECKER, E., AND DUBA, B. Reasonmg with continuations In First Annual Symposzum on Logzc zn Computer Sczence. 1986, pp. 131-141.
Daniel P. Friedman , Mitchell Wand, Reification: Reflection without metaphysics, Proceedings of the 1984 ACM Symposium on LISP and functional programming, p.348-355, August 06-08, 1984, Austin, Texas, USA[doi>10.1145/800055.802051]
Mitchell Wand , Daniel P. Friedman, The mystery of the tower revealed: a non-reflective description of the reflective tower, Proceedings of the 1986 ACM conference on LISP and functional programming, p.298-307, August 1986, Cambridge, Massachusetts, USA[doi>10.1145/319838.319871]
Michael J. C. Gordon, Operational reasoning and denotational semantics., Stanford University, Stanford, CA, 1975
G. Kahn, Natural semantics, 4th Annual Symposium on Theoretical Aspects of Computer Sciences on STACS 87, p.22-39, February 1987, Passau, Germany
J. W. Klop , R. C. de Vrijer, Unique normal forms for Lambda calculus with surjective pairing, Information and Computation, v.80 n.2, p.97-113, Feb. 1989[doi>10.1016/0890-5401(89)90014-X]
E. E. Kohlbecker , M. Wand, Macro-by-example: Deriving syntactic transformations from their specifications, Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.77-84, January 21-23, 1987, Munich, West Germany[doi>10.1145/41625.41632]
MASON, I. Equivalence of first order LISP programs: Proving properties of destructive programs via transformations. In Fzrst Annual Sympostum on Logic in Computer Science. 1986, pp. 105 117.
John McCarthy, Recursive functions of symbolic expressions and their computation by machine, Part I, Communications of the ACM, v.3 n.4, p.184-195, April 1960[doi>10.1145/367177.367199]
John McCarthy, LISP 1.5 Programmer's Manual, The MIT Press, 1962
MCCARTHY, J. Towards a mathematical science of computation. In Proceedings of the IFIP Congress 63. North-Holland, Amsterdam, 1963, pp. 21-28.
Steven S. Muchnick , Uwe F. Pleban, A semantic comparison of LISP and SCHEME, Proceedings of the 1980 ACM conference on LISP and functional programming, p.56-64, August 25-27, 1980, Stanford University, California, USA[doi>10.1145/800087.802790]
I. Mason , C. Talcott, A sound and complete axiomatization of operational equivalence of programs with memory, Proceedings of the Fourth Annual Symposium on Logic in computer science, p.284-293, June 1989, Pacific Grove, California, USA
MULLER, R. Syntax macros in M-LISP: A representation independent dialect of LISP with reduction semantics. Tech. Rep. CRCT TR-04-90, Harvard Univermty, Cambridge, Mass., 1990.
PFE~NI~G~ F., AND LEE, P. LEAP: A language with eval and polymorphism. In Tapsofi, 1988.
Kent M. Pitman, Special forms in Lisp, Proceedings of the 1980 ACM conference on LISP and functional programming, p.179-187, August 25-27, 1980, Stanford University, California, USA[doi>10.1145/800087.802804]
PLOTKIN, G. Call-by-name, call-by-value and the A-calculus. Theor. Comput. Scl. i (1975), 125-159.
PLO~N, G. A structural approach to operational semantics. Tech. Rep. DAIMI FN-19, Aarhus University, Denmark, 1981.
REVESZ, G. A list oriented extension of the Church-Rosser theorem. Tech. Rep. RC 13620 (No. 60941), IBM T. J. Watson Research Center, Yorktown Heights, N.Y., 1988.
John C. Reynolds, Definitional interpreters for higher-order programming languages, Proceedings of the ACM annual conference, p.717-740, August 01-01, 1972, Boston, Massachusetts, USA[doi>10.1145/800194.805852]
Barry K. Rosen, Tree-Manipulating Systems and Church-Rosser Theorems, Journal of the ACM (JACM), v.20 n.1, p.160-187, Jan. 1973[doi>10.1145/321738.321750]
SMITH, B. Refiection and semantics in a procedural language. Ph.D. Thes~s, Massachusetts Institute of Technology, Cambridge, Mass., 1982.
Brian Cantwell Smith, Reflection and semantics in LISP, Proceedings of the 11th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.23-35, January 15-18, 1984, Salt Lake City, Utah, USA[doi>10.1145/800017.800513]
P Wadler, A critique of Abelson and Sussman or why calculating is better than scheming, ACM SIGPLAN Notices, v.22 n.3, p.83-94, March 1987[doi>10.1145/24697.24706]
WADLER, P. Private communication.
