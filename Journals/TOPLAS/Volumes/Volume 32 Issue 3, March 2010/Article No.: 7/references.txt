Martin Abadi , Luca Cardelli, A  Theory of Objects, Springer-Verlag New York, Inc., Secaucus, NJ, 1996
S. Abramsky , K. Honda , G. McCusker, A Fully Abstract Game Semantics for General References, Proceedings of the 13th Annual IEEE Symposium on Logic in Computer Science, p.334, June 21-24, 1998
Umut A. Acar , Amal Ahmed , Matthias Blume, Imperative self-adjusting computation, Proceedings of the 35th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 07-12, 2008, San Francisco, California, USA[doi>10.1145/1328438.1328476]
Amal Ahmed, Step-Indexed syntactic logical relations for recursive and quantified types, Proceedings of the 15th European conference on Programming Languages and Systems, p.69-83, March 27-28, 2006, Vienna, Austria[doi>10.1007/11693024_6]
Amal J. Ahmed , Andrew W. Appel , Roberto Virga, A Stratified Semantics of General References Embeddable in Higher-Order Logic, Proceedings of the 17th Annual IEEE Symposium on Logic in Computer Science, p.75, July 22-25, 2002
Ahmed, A., Appel, A. W., and Virga, R. 2003. An indexed model of impredicative polymorphism and mutable references. http://www.cs.princeton.edu/~appel/papers/impred.pdf.
Amal Ahmed , Matthias Blume, Typed closure conversion preserves observational equivalence, Proceedings of the 13th ACM SIGPLAN international conference on Functional programming, September 20-28, 2008, Victoria, BC, Canada[doi>10.1145/1411204.1411227]
Amal Ahmed , Matthew Fluet , Greg Morrisett, A step-indexed model of substructural state, Proceedings of the tenth ACM SIGPLAN international conference on Functional programming, September 26-28, 2005, Tallinn, Estonia[doi>10.1145/1086365.1086376]
Amal Ahmed , Matthew Fluet , Greg Morrisett, L3: A Linear Language with Locations, Fundamenta Informaticae, v.77 n.4, p.397-449, August 2007
Amal Jamil Ahmed, Semantics of types for mutable state, Princeton University, Princeton, NJ, 2004
Alex Aiken , Jeffrey S. Foster , John Kodumal , Tachio Terauchi, Checking and inferring local non-aliasing, Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation, June 09-11, 2003, San Diego, California, USA[doi>10.1145/781131.781146]
Andrew W. Appel, Semantics-directed code generation, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.315-324, January 14-16, 1985, New Orleans, Louisiana, USA[doi>10.1145/318593.318661]
Appel, A. W. 2000. Hints on proving theorems in Twelf. www.cs.princeton.edu/~appel/twelf-tutorial.
Andrew W. Appel, Foundational Proof-Carrying Code, Proceedings of the 16th Annual IEEE Symposium on Logic in Computer Science, p.247, June 16-19, 2001
Andrew W. Appel , Amy P. Felty, A semantic model of types and machine instructions for proof-carrying code, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.243-253, January 19-21, 2000, Boston, MA, USA[doi>10.1145/325694.325727]
Appel, A. W. and MacQueen, D. B. 1991. Standard ML of New Jersey. In Proceedings of the 3rd International Symposium on Programming Language Implementation and Logic Programming, M. Wirsing, Ed. Springer, New York, 1--13.
Andrew W. Appel , David McAllester, An indexed model of recursive types for foundational proof-carrying code, ACM Transactions on Programming Languages and Systems (TOPLAS), v.23 n.5, p.657-683, September 2001[doi>10.1145/504709.504712]
Andrew W. Appel , Paul-André Melliès , Christopher D. Richards , Jérôme Vouillon, A very modal model of a modern, major, general type system, Proceedings of the 34th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 17-19, 2007, Nice, France[doi>10.1145/1190216.1190235]
Andrew W. Appel , Neophytos Michael , Aaron Stump , Roberto Virga, A Trustworthy Proof Checker, Journal of Automated Reasoning, v.31 n.3-4, p.231-260, 2003[doi>10.1023/B:JARS.0000021013.61329.58]
Arbib, M. and Alagic, S. 1979. Proof rules for gotos. Acta Inf. 11, 139--148.
Nick Benton, A typed, compositional logic for a stack-based abstract machine, Proceedings of the Third Asian conference on Programming Languages and Systems, November 02-05, 2005, Tsukuba, Japan[doi>10.1007/11575467_24]
Nick Benton, Abstracting allocation, Proceedings of the 20th international conference on Computer Science Logic, September 25-29, 2006, Szeged, Hungary[doi>10.1007/11874683_12]
Nick Benton , Benjamin Leperchey, Relational reasoning in a nominal semantics for storage, Proceedings of the 7th international conference on Typed Lambda Calculi and Applications, April 21-23, 2005, Nara, Japan[doi>10.1007/11417170_8]
Nick Benton , Uri Zarfaty, Formalizing and verifying semantic type soundness of a simple compiler, Proceedings of the 9th ACM SIGPLAN international conference on Principles and practice of declarative programming, July 14-16, 2007, Wroclaw, Poland[doi>10.1145/1273920.1273922]
Lars Birkedal , Robert Harper, Relational Interpretations of Recursive Types in an operational Setting (Summary), Proceedings of the Third International Symposium on Theoretical Aspects of Computer Software, p.458-490, September 23-26, 1997
Nina Bohr , Lars Birkedal, Relational reasoning for recursive types and references, Proceedings of the 4th Asian conference on Programming Languages and Systems, November 08-10, 2006, Sydney, Australia[doi>10.1007/11924661_5]
Luca Cardelli, Program fragments, linking, and modularization, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.266-277, January 15-17, 1997, Paris, France[doi>10.1145/263699.263735]
Juan Chen , Andrew Appel, A low-level typed assembly language with a machine-checkable soundness proof, Princeton University, Princeton, NJ, 2004
Juan Chen , Dinghao Wu , Andrew W. Appel , Hai Fang, A provably sound TAL for back-end optimization, Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation, June 09-11, 2003, San Diego, California, USA[doi>10.1145/781131.781155]
Church, A. 1940. A formulation of the simple theory of types. J. Symb. Logic 5, 2, 56--68.
Clint, M. and Hoare, C. A. R. 1972. Program proving: Jumps and functions. Acta Informatica 1, 214--224.
Christopher Colby , Peter Lee , George C. Necula , Fred Blau , Mark Plesko , Kenneth Cline, A certifying compiler for Java, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.95-107, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349315]
Karl Crary, Typed compilation of inclusive subtyping, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming, p.68-81, September 2000[doi>10.1145/351240.351247]
Karl Crary, Toward a foundational typed assembly language, Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.198-212, January 15-17, 2003, New Orleans, Louisiana, USA[doi>10.1145/604131.604149]
Karl Crary , Robert Harper, Syntactic Logical Relations for Polymorphic and Recursive Types, Electronic Notes in Theoretical Computer Science (ENTCS), 172, p.259-299, April, 2007[doi>10.1016/j.entcs.2007.02.010]
Crary, K. and Sarkar, S. 2003. Foundational certified code in a metalogical framework. In Proceedings of the 19th International Conference on Automated Deduction (CADE'03). Springer, Berlin, 106--120.
de Bruin, A. 1981. Goto statements: Semantics and deduction systems. Acta Informatica 15, 385--424.
Xinyu Feng , Zhaozhong Ni , Zhong Shao , Yu Guo, An open framework for foundational proof-carrying code, Proceedings of the 2007 ACM SIGPLAN international workshop on Types in languages design and implementation, January 16-16, 2007, Nice, Nice, France[doi>10.1145/1190315.1190325]
Girard, J.-Y. 1972. Interprétation fonctionnelle et elimination des coupures dans l'arithmétique d'ordre supérieur. Ph.D. thesis, University of Paris VII.
Neal Glew , Greg Morrisett, Type-safe linking and modular assembly language, Proceedings of the 26th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.250-261, January 20-22, 1999, San Antonio, Texas, USA[doi>10.1145/292540.292563]
Nadeem A. Hamid , Zhong Shao , Valery Trifonov , Stefan Monnier , Zhaozhong Ni, A Syntactic Approach to Foundational Proof-Carrying Code, Proceedings of the 17th Annual IEEE Symposium on Logic in Computer Science, p.89-100, July 22-25, 2002
Robert Harper, A simplified account of polymorphic references, Information Processing Letters, v.51 n.4, p.201-206, Aug. 24, 1994[doi>10.1016/0020-0190(94)90120-1]
Robert Harper , Greg Morrisett, Compiling polymorphism using intensional type analysis, Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.130-141, January 23-25, 1995, San Francisco, California, USA[doi>10.1145/199448.199475]
Robert Harper , Frank Pfenning, On equivalence and canonical forms in the LF type theory, ACM Transactions on Computational Logic (TOCL), v.6 n.1, p.61-101, January 2005[doi>10.1145/1042038.1042041]
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Hriţcu, C. and Schwinghammer, J. 2008. A step-indexed semantics of imperative objects. In Informal Proceedings of the Workshop on Foundations of Object-Oriented Languages (FOOL).
Kowaltowski, T. 1977. Axiomatic approach to side effects and general jumps. Acta Inf. 7, 4, 357--360.
Paul Blain Levy, Possible World Semantics for General Storage in Call-By-Value, Proceedings of the 16th International Workshop and 11th Annual Conference of the EACSL on Computer Science Logic, p.232-246, September 22-25, 2002
David MacQueen , Gordon Plotkin , Ravi Sethi, An ideal model for recursive polymorphic types, Information and Control, v.71 n.1-2, p.95-130, Oct/Nov. 1986[doi>10.1016/S0019-9958(86)80019-5]
Jacob Matthews , Amal Ahmed, Parametric polymorphism through run-time sealing or, theorems for low, low prices!, Proceedings of the Theory and practice of software, 17th European conference on Programming languages and systems, March 29-April 06, 2008, Budapest, Hungary
Jerome Vouillon , Paul-André Melliès, Semantic types: a fresh look at the ideal model for types, Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.52-63, January 14-16, 2004, Venice, Italy[doi>10.1145/964001.964006]
Neophytos G. Michael , Andrew W. Appel, Machine Instruction Syntax and Semantics in Higher Order Logic, Proceedings of the 17th International Conference on Automated Deduction, p.7-24, June 17-20, 2000
Greg Morrisett , Amal Ahmed , Matthew Fluet, L3: a linear language with locations, Proceedings of the 7th international conference on Typed Lambda Calculi and Applications, April 21-23, 2005, Nara, Japan[doi>10.1007/11417170_22]
Morrisett, G., Crary, K., Glew, N., Grossman, D., Samuels, R., Smith, F., Walker, D., Weirich, S., and Zdancewic, S. 1999a. TALx86: A realistic typed assembly language. In Proceedings of the 2nd ACM SIGPLAN Workshop on Compiler Support for System Software. ACM Press, New York, 25--35.
Greg Morrisett , Karl Crary , Neal Glew , David Walker, Stack-based typed assembly language, Journal of Functional Programming, v.12 n.1, p.43-88, January 2002[doi>10.1017/S0956796801004178]
Greg Morrisett , David Walker , Karl Crary , Neal Glew, From system F to typed assembly language, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.85-97, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268954]
Greg Morrisett , David Walker , Karl Crary , Neal Glew, From system F to typed assembly language, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.3, p.527-568, May 1999[doi>10.1145/319301.319345]
George C. Necula, Proof-carrying code, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.106-119, January 15-17, 1997, Paris, France[doi>10.1145/263699.263712]
Zhaozhong Ni , Zhong Shao, Certified assembly programming with embedded code pointers, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.320-333, January 11-13, 2006, Charleston, South Carolina, USA[doi>10.1145/1111037.1111066]
Michael J. O'Donnell, A critique of the foundations of Hoare style programming logics, Communications of the ACM, v.25 n.12, p.927-935, Dec 1982[doi>10.1145/358728.358748]
Pfenning, F. and Schürmann, C. 1999. System description: Twelf—A meta-logical framework for deductive systems. In Proceedings of the 16th International Conference on Automated Deduction (CADE). Springer, Berlin.
Pitts, A. M. 1996. Relational properties of domains. Inf. Comput. 127, 2, 66--90.
Andrew M. Pitts, Existential Types: Logical Relations and Operational Equivalence, Proceedings of the 25th International Colloquium on Automata, Languages and Programming, p.309-326, July 13-17, 1998
Andrew M. Pitts, Parametric polymorphism and operational equivalence, Mathematical Structures in Computer Science, v.10 n.3, p.321-359, June 2000[doi>10.1017/S0960129500003066]
Andrew M. Pitts, Operational Semantics and Program Equivalence, Applied Semantics, International Summer School, APPSEM 2000, Caminha, Portugal, September 9-15, 2000, Advanced Lectures, p.378-412, September 09-15, 2000
Andrew M. Pitts , Ian D. B. Stark, Observable Properties of Higher Order Functions that Dynamically Create Local Names, or What's new?, Proceedings of the 18th International Symposium on Mathematical Foundations of Computer Science, p.122-141, August 30-September 03, 1993
Plotkin, G. D. 1973. Lambda-Definability and logical relations. Memo. SAI--RM--4, University of Edinburgh, Edinburgh, Scotland.
Reynolds, J. C. 1981. The essence of Algol. In Algorithmic Languages, J. W. de Bakker and J. C. van Vliet, Eds. North-Holland, Amsterdam, 345--372.
Richards, C. D. 2009. The approximation modality in models of higher-order types. Ph.D. thesis, Princeton University, Princeton, New Jersey.
Saabas, A. and Uustalu, T. 2005. A compositional natural semantics and Hoare logic for low-level languages. In Proceedings of the 2nd Workshop on Structured Operational Semantics (SOS'05).
Scott, D. S. 1976. Data types as lattices. SIAM J. Comput. 5, 3, 522--587.
Shao, Z. 1997. An overview of the FLINT/ML compiler. In Proceedings of the ACM SIGPLAN Workshop on Types in Compilation. ACM Press, New York.
Stark, I. D. B. 1994. Names and higher-order functions. Ph.D. thesis, University of Cambridge, Cambridge, UK.
Statman, R. 1985. Logical relations and the typed λ-calculus. Inf. Control 65, 2--3, 85--97.
Swadi, K. 2003. Typed machine language. Tech. rep. TR-676-03, Princeton University, Princeton, New Jersey.
Tait, W. W. 1967. Intensional interpretations of functionals of finite type I. J. Symb. Logic 32, 2, 198--212.
Gang Tan , Andrew W. Appel, A compositional logic for control flow and its application in foundational proof-carrying code, Princeton University, Princeton, NJ, 2005
Gang Tan , Andrew W. Appel, A compositional logic for control flow, Proceedings of the 7th international conference on Verification, Model Checking, and Abstract Interpretation, p.80-94, January 08-10, 2006, Charleston, SC[doi>10.1007/11609773_6]
Tan, G., Appel, A. W., Swadi, K. N., and Wu, D. 2004. Construction of a semantic model for a typed assembly language. In Proceedings of the 5th International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI). Lecture Notes in Compute Science, vol. 2937. Springer, Berlin, 30--43.
D. Tarditi , G. Morrisett , P. Cheng , C. Stone , R. Harper , P. Lee, TIL: a type-directed optimizing compiler for ML, Proceedings of the ACM SIGPLAN 1996 conference on Programming language design and implementation, p.181-192, May 21-24, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/231379.231414]
Mitchell Wand , Gregory T. Sullivan, Denotational semantics using an operationally-based term model, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.386-399, January 15-17, 1997, Paris, France[doi>10.1145/263699.263755]
Andrew K. Wright , Matthias Felleisen, A syntactic approach to type soundness, Information and Computation, v.115 n.1, p.38-94, Nov. 15, 1994[doi>10.1006/inco.1994.1093]
Dinghao Wu , Andrew W. Appel, Interfacing compilers, proof checkers, and proofs for foundational proof-carrying code, Princeton University, Princeton, NJ, 2005
Dinghao Wu , Andrew W. Appel , Aaron Stump, Foundational proof checkers with small witnesses, Proceedings of the 5th ACM SIGPLAN international conference on Principles and practice of declaritive programming, p.264-274, August 27-29, 2003, Uppsala, Sweden[doi>10.1145/888251.888276]
Dachuan Yu , Nadeem A. Hamid , Zhong Shao, Building certified libraries for PCC: dynamic storage allocation, Proceedings of the 12th European conference on Programming, April 07-11, 2003, Warsaw, Poland
