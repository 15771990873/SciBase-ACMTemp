Steven Pemberton, Technical Correspondence: On Tanenbaum, van Staveren, and Stevenson's ``Using Peephole Optimization on Intermediate Code'', ACM Transactions on Programming Languages and Systems (TOPLAS), v.5 n.3, p.499-500, July 1983
Andrew S. Tanenbaum , Ed Keizer , Hans van Staveren, Does anybody out there want to write <u>HALF</u> of a compiler?, ACM SIGPLAN Notices, v.19 n.8, August 1984
Y H Shyu, From semi-syntactic lexical analyzer to a new compiler model, ACM SIGPLAN Notices, v.21 n.12, p.149-157, Dec. 1986
Jed Marti, An optimizing compiler for LISP for the Z80, Proceedings of the 5th ACM SIGSMALL symposium on Small systems, p.3-8, August 02-04, 1982, Colorado Springs, Colorado, USA
Kevin C. Trott , Frederick K. Frantz, A detailed interactive simulation system for developing command and control systems, Proceedings of the 16th annual symposium on Simulation, p.11-31, March 18-20, 1983, Tampa, Florida, United States
Andrew S. Tanenbaum , Hans van Staveren , E. G. Keizer , Johan W. Stevenson, A practical tool kit for making portable compilers, Communications of the ACM, v.26 n.9, p.654-660, Sept. 1983
Andrew W. Appel, Semantics-directed code generation, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.315-324, January 14-16, 1985, New Orleans, Louisiana, United States
W. F. Wong, A stack addressing scheme based on windowing, ACM SIGARCH Computer Architecture News, v.17 n.1, p.63-69, March 1989
Robert R. Kessler, Peep: an architectural description driven peephole optimizer, ACM SIGPLAN Notices, v.19 n.6, p.106-110, June 1984
David Hildum , Jacques Cohen, A Language for Specifying Program Transformations, IEEE Transactions on Software Engineering, v.16 n.6, p.630-638, June 1990
J. W. Davidson , J. V. Gresh, Cint: a RISC interpreter for the C programming language, ACM SIGPLAN Notices, v.22 n.7, p.189-198, July 1987
Jack W. Davidson , Christopher W. Fraser, Automatic generation of peephole optimizations, ACM SIGPLAN Notices, v.19 n.6, p.111-116, June 1984
Paul Týma, Transient variable caching in Java’s stack-based intermediate representation, Scientific Programming, v.7 n.2, p.157-166, April 1999
Christopher Doble , Colin J. Fidge , Diane Corney, Data flow analysis of embedded program expressions, Proceedings of the Tenth Australasian Information Security Conference, January 31-February 03, 2012, Melbourne, Australia
Jun-ichi Aoe, An Efficient Implementation of Static String Pattern Matching Machines, IEEE Transactions on Software Engineering, v.15 n.8, p.1010-1016, August 1989
Jacques Cohen , Timothy J. Hickey, Parsing and compiling using Prolog, ACM Transactions on Programming Languages and Systems (TOPLAS), v.9 n.2, p.125-163, April 1987
Lin Tan , Brett Brotherton , Timothy Sherwood, Bit-split string-matching engines for intrusion detection and prevention, ACM Transactions on Architecture and Code Optimization (TACO), v.3 n.1, p.3-34, March 2006
Lin Tan , Timothy Sherwood, A High Throughput String Matching Architecture for Intrusion Detection and Prevention, ACM SIGARCH Computer Architecture News, v.33 n.2, p.112-122, May 2005
Rajeev Kumar , Amit Gupta , B. S. Pankaj , Mrinmoy Ghosh , P. P. Chakrabarti, Post-compilation optimization for multiple gains with pattern matching, ACM SIGPLAN Notices, v.40 n.12, December 2005
Ronald Sobczak , Manton Matthews, Automatic code generation for microprocessor based systems, Proceedings of the 1985 ACM SIGSMALL symposium on Small systems, p.64-69, May 1985, Danvers, Massachusetts, USA
Jack W. Davidson , Christopher W. Fraser, Code selection through object code optimization, ACM Transactions on Programming Languages and Systems (TOPLAS), v.6 n.4, p.505-526, Oct. 1984
R. H. Saavedra-Barrera , A. J. Smith , E. Miya, Machine Characterization Based on an Abstract High-Level Language Machine, IEEE Transactions on Computers, v.38 n.12, p.1659-1679, December 1989
Inki Hong , Miodrag Potkonjak , Ramesh Karri, Power optimization using divide-and-conquer techniques for minimization of the number of operations, ACM Transactions on Design Automation of Electronic Systems (TODAES), v.4 n.4, p.405-429, Oct. 1999
Mahadevan Ganapathi , Charles N. Fischer, Affix grammar driven code generation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.4, p.560-599, Oct. 1985
Jack W. Davidson , Christopher W. Fraser, Automatic generation of peephole optimizations, ACM SIGPLAN Notices, v.39 n.4, April 2004
