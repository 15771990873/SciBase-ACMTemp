Alfred V. Aho , Jeffrey D. Ullman, The  Theory of Parsing, Translation, and Compiling, Prentice Hall Professional Technical Reference, 1972
E. A. Ashcroft , W. W. Wadge, Lucid, a nonprocedural language with iteration, Communications of the ACM, v.20 n.7, p.519-526, July 1977[doi>10.1145/359636.359715]
ASMCRO~r, E., AND WADGF., W. Lucid--A formal system for writing and proving programs. SIAM J. Comput. 5, 3 (1976), 336-354.
John Backus, Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs, Communications of the ACM, v.21 n.8, p.613-641, Aug. 1978[doi>10.1145/359576.359579]
John Backus, Programming language semantics and closed applicative languages, Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.71-86, October 01-03, 1973, Boston, Massachusetts[doi>10.1145/512927.512934]
Friedrich L. Bauer , Manfred Broy , Rupert Gnatz , Wolfgang Hesse , Bernd Krieg-Brückner , Helmuth Partsch , Peter Pepper , Hans Wössner, Towards a Wide Spectrum Language to Support Program Specification and Program Development, Program Construction, International Summer Schoo, p.543-552, July 26-August 06, 1978
Gérard Berry , Jean-Jacques Lévy, Minimal and optimal computations of recursive programs, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.215-226, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512971]
BJORNER, D. Finite state tree computations, pt. I. IBM Res. Tech. Rep. RJ 1053 (#17598), 1972.
BRUYNOOGHE, M. An interpreter for predicate logic programs, pt. I. Rep. CW10, Applied Math. and Programming Div., Katholieke Univ., Leuven, Belgium, 1976.
Jean-Marie Cadiou, Recursive definitions of partial functions and their computations, Stanford University, Stanford, CA, 1972
CARGILL, T. Deterministic operational semantics for Lucid. Res. Rep. CS-76-19, Univ. Waterloo, Ontario, 1976.
CHEW, L.P. An improved algorithm for computing with equations. In 21st Ann. IEEE Symp. Foundations of Computer Science, 1980, Syracuse, N.Y., pp. 108-117.
DOWNEY, P., AND SETHI, R. Correct computation rules for recursive languages. SIAM J. Comput. 5, 3 (1976), 378-401.
Mansour Farah, Correct compilation of a useful subset of lucid., 1977
FRIEDMAN, D., AND WISE, D. Cons should not evaluate its arguments. In 3rd Int. Colloq. Automata, Languages and Programming. Edinburgh University Press, Edinburgh, Scotland, 1976, pp. 257-284.
GOGUEN, J. Abstract errors for abstract data types. In IFIP Working Conference on Formal Description of Programming Concepts, E.J. Neuhold (Ed.). Elsevier North-Holland, New York, 1977, pp. 491-522.
GUIBAS, L.,'AND SEDGEWICK, R. A dichromatic framework for balanced trees. In 19th IEEE Symp. Foundations of Computer Science, Ann Arbor, Mich., 1978, pp. 8-21.
GUTTAG, J., HOROWITZ, E., AND MUSSER, D. Abstract data types and software validation. Information Science Res. Rep. ISI/RR-76-48, Univ. Southern Calif., Los Angeles, 1976.
Peter Henderson , James H. Morris, Jr., A lazy evaluator, Proceedings of the 3rd ACM SIGACT-SIGPLAN symposium on Principles on programming languages, p.95-103, January 19-21, 1976, Atlanta, Georgia[doi>10.1145/800168.811543]
HOFFMAN, C. Design and correctness of a compiler for a nonprocedural language. Acta Inf. 9, 3 (1978), 217-241.
Christoph M. Hoffmann , Michael J. O'Donnell, Pattern Matching in Trees, Journal of the ACM (JACM), v.29 n.1, p.68-95, Jan. 1982[doi>10.1145/322290.322295]
Christoph M. Hoffmann , Michael J. O'Donnell, An interpreter generator using tree pattern matching, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.169-179, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567768]
HUET, G., AND Li~vY, J.-J. Computations in nonambiguous linear term rewriting systems. IRIA Tech. Rep. 359, 1979.
JOHNSON, S.D. An interpretive model for a language based on suspended construction. Tech. Rep. 68, Dep. Computer Science, Indiana Univ., Bloomington, Ind., 1977.
KNUTH, D., AND BENDIX, P. Simple word problems in universal algebras. In Computational Problems in Abstract Algebra, J. Leech (Ed.). Pergamon Press, Elmsford, N.Y., pp. 263-297.
Robert Kowalski, Algorithm = logic + control, Communications of the ACM, v.22 n.7, p.424-436, July 1979[doi>10.1145/359131.359136]
John McCarthy, Recursive functions of symbolic expressions and their computation by machine, Part I, Communications of the ACM, v.3 n.4, p.184-195, April 1960[doi>10.1145/367177.367199]
Greg Nelson , Derek C. Oppen, Fast Decision Procedures Based on Congruence Closure, Journal of the ACM (JACM), v.27 n.2, p.356-364, April 1980[doi>10.1145/322186.322198]
Greg Nelson , Derek C. Oppen, A simplifier based on efficient decision algorithms, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.141-150, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512775]
Michael J. O'Donnell, Computing in Systems Described by Equations, Springer-Verlag New York, Inc., Secaucus, NJ, 1977
ROBERTS, G. An Implementation of PROLOG. M.S. thesis, Dep. Computer Science, Univ. Waterloo, Ontario, 1977.
Barry K. Rosen, Tree-Manipulating Systems and Church-Rosser Theorems, Journal of the ACM (JACM), v.20 n.1, p.160-187, Jan. 1973[doi>10.1145/321738.321750]
STAPLES, J. A class of replacement systems with simple optimality theory. Bull. Aust. Math. Soc. 17, 3 (1977), 335-350.
VUXLL~.MXN, J. Correct and optimal implementations of recursion in a simple programming language. J. Comput. Syst. Sci. 9, 3 (1974), 332-354.
WAND, M. First order identities as a defining language. Tech. Rep. 29, Dep. Computer Science, indiana Univ., Bloomington, Ind., 1976.
WARREN, D. Implementing PROLOG. Res. Reps. 39, 40, Dep. Artificial Intelligence, Univ. Edinburgh, Scotland, 1977.
