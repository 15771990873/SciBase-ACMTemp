Gregory R. Andrews, Synchronizing Resources, Cornell University, Ithaca, NY, 1978
Krzysztof R. Apt , Nissim Francez , Willem P. de Roever, A Proof System for Communicating Sequential Processes, ACM Transactions on Programming Languages and Systems (TOPLAS), v.2 n.3, p.359-385, July 1980[doi>10.1145/357103.357110]
Russell Atkinson , Carl Hewitt, Synchronization in actor systems, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.267-280, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512975]
Per Brinch Hansen, Distributed processes: a concurrent programming concept, Communications of the ACM, v.21 n.11, p.934-941, Nov. 1978[doi>10.1145/359642.359651]
BI~INCH I-IANSEN, P. The programming language Concurrent Pascal. IEEE Trans. Softw. Eng. SE-1, 2 (June 1975), 199-207.
Per Brinch Hansen, Operating System Principles, Prentice Hall PTR, Upper Saddle River, NJ, 1973
Roy H. Campbell , A. Nico Habermann, The specification of process synchronization by path expressions, Operating Systems, Proceedings of an International Symposium, p.89-102, April 23-25, 1974
P. J. Courtois , F. Heymans , D. L. Parnas, Concurrent control with “readers” and “writers”, Communications of the ACM, v.14 n.10, p.667-668, Oct. 1971[doi>10.1145/362759.362813]
DIJKSTRA, E.W. Cooperating sequential process. In Programming Languages, F. Genuys (Ed.). Academic Press, New York, 1968, pp. 43-112.
Edsger W. Dijkstra, Guarded commands, nondeterminacy and formal derivation of programs, Communications of the ACM, v.18 n.8, p.453-457, Aug. 1975[doi>10.1145/360933.360975]
Edsger W. Dijkstra , Leslie Lamport , A. J. Martin , C. S. Scholten , E. F. M. Steffens, On-the-fly garbage collection: an exercise in cooperation, Communications of the ACM, v.21 n.11, p.966-975, Nov. 1978[doi>10.1145/359642.359655]
Jerome A. Feldman, High level programming for distributed computing, Communications of the ACM, v.22 n.6, p.353-368, June 1979[doi>10.1145/359114.359127]
FELDMAN, J.A. A programming methodology for distributed computing (among other things). Tech. Rep. TR9, Computer Science Dep., Univ. Rochester, Rochester, N.Y., Jan. 1977.
Donald I. Good , Richard M. Cohen , James Keeton-Williams, Principles of proving concurrent programs in Gypsy, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.42-52, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567757]
David Gries, An exercise in proving parallel programs correct, Communications of the ACM, v.20 n.12, p.921-930, Dec. 1977[doi>10.1145/359897.359903]
HABERMANN, A.N. Path expressions. Tech. Rep., Carnegie-Mellon Univ., Pittsburgh, Pa., June 1975.
A. Nico Habermann, Synchronization of communicating processes, Communications of the ACM, v.15 n.3, p.171-176, March 1972[doi>10.1145/361268.361277]
D. S. Hirschberg, Fast parallel sorting algorithms, Communications of the ACM, v.21 n.8, p.657-661, Aug. 1978[doi>10.1145/359576.359582]
C. A. R. Hoare, Communicating sequential processes, Communications of the ACM, v.21 n.8, p.666-677, Aug. 1978[doi>10.1145/359576.359585]
C. A. R. Hoare, Monitors: an operating system structuring concept, Communications of the ACM, v.17 n.10, p.549-557, Oct. 1974[doi>10.1145/355620.361161]
HOARE, C.A.R. Towards a theory of parallel programming. In Operating Systems Techniques, C.A.R. Hoare and R.H. Perrott (Eds.). Academic Press, New York, 1972, pp. 61-71.
John H. Howard, Signaling in monitors, Proceedings of the 2nd international conference on Software engineering, p.47-52, October 13-15, 1976, San Francisco, California, United States
JAMMEL, A.J., AND STIEGLER, H.G. Managers versus monitors. In Information Processing 77, B. Gilchrist (Ed.). Elsevier North-Holland, New York, 1977, pp. 827-830.
J. L. W. Kessels, An alternative to event queues for synchronization in monitors, Communications of the ACM, v.20 n.7, p.500-503, July 1977[doi>10.1145/359636.359710]
Hugh C. Lauer , Roger M. Needham, On the duality of operating system structures, ACM SIGOPS Operating Systems Review, v.13 n.2, p.3-19, April 1979[doi>10.1145/850657.850658]
Gary Marc Levin, Proof rules for communicating sequential processes, 1980
Barbara Liskov, Primitives for distributed computing, Proceedings of the seventh ACM symposium on Operating systems principles, p.33-42, December 10-12, 1979, Pacific Grove, California, United States[doi>10.1145/800215.806567]
MITCHELL, J.G., MAYBURY, W., AND SWEET, R. Mesa language manual, version 5.0. Rep. CSL- 79-3, Xerox PARC, Palo Alto, Calif., April 1979.
OWlCKI, S., AND GRXES, D. An axiomatic proof technique for parallel programs. Acta Inf. 6, 4 (1976), 319-340.
OWlCKI, S., AND LAMPORT, L. Proving liveness properties of concurrent programs. Tech. Rep., Computer Systems Lab., Stanford Univ., Stanford, Calif., Oct. 1980.
PNEULI, A. The temporal logic of programs. In Proc. 18th Syrup. Foundations of Computer Science, Providence, R.I., Nov. 1977.
J. D. Ichbiah, Preliminary Ada reference manual, ACM SIGPLAN Notices, v.14 n.6a, p.1-145, June 1979[doi>10.1145/956650.956651]
David P. Reed , Rajendra K. Kanodia, Synchronization with eventcounts and sequencers, Communications of the ACM, v.22 n.2, p.115-123, Feb. 1979[doi>10.1145/359060.359076]
Fred B. Schneider , A. J. Bernstein, Mechanisms for Specifying Scheduling Policies, Cornell University, Ithaca, NY, 1979
Toby J. Teorey , Tad B. Pinkerton, A comparative analysis of disk scheduling policies, Communications of the ACM, v.15 n.3, p.177-184, March 1972[doi>10.1145/361268.361278]
WmT~, N. Modula: A programming language for modular multiprogramming. Softw. Pract. Exper. 7, i (Jan. 1977), 3-35.
WroTH, N. The programming language Pascal. Acta Inf. 1, 1 (1971), 35-63.
