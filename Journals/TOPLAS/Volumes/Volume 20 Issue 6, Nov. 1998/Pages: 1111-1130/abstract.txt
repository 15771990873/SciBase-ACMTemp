Compiler optimizations pose many problems to source-level debugging of an optimized program due to reordering, insertion, and deletion of code. On such problem is to determine whether the value of a varible iscurrentat a breakpointâ€”that is, whether its actual value is the same as its expected value. We use the notion ofdynamic currencyof a variable in source-level debugging and propose the use of aminimal unrolled graphto reduce the run-time overhead of dynamic currency determination. We prove that the minimal unrolled graph is an adequate basis for performing bit-vector data flow analyses at a breakpoint. This property is used to perform dynamic currency determination. It is also shown to help in recovery of a   dynamically noncurrent variable.