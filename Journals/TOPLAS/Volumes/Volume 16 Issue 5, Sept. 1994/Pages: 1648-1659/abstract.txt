This paper describes a tool calledvpoisothat was developed to isolate errors automatically in thevpocompiler system. The two general types of compiler errors isolated by this tool are optimization and nonoptimization errors. When isolating optimization errors,vpoisorelies on thevpooptimizer to identify sequences of changes, referred to as transformations, that result in semantically equivalent code and to provide the ability to stop performingimproving(or unnecessary) transformations after a specified number have been performed. A compilation of a typical program byvpooften results in thousands ofimprovingtransformations being performed. Thevpoisotool can automatically isolate the firstimprovingtransformation that causes incorrect output of the execution of the compiled programs by using a binary search that varies the number ofimprovingtransformation performed. Not only is the illegal transformation automatically isolated, butvpoisoalso identifies the location and instant the transformation is performed invpo. Nonoptimization errors occur from problems in the front end, code generator, andnecessarytransformations in the optimizer. If another compiler is available that can produce correct (but perhaps more inefficient) code, thenvpoisocan isolate nonoptimization errors to a single function. Automatic isolation of compiler errors facilitates retargeting a compiler to a new machine, maintenance of the compiler, and supporting experimentation with new optimizations.