Krzysztof R. Apt, Logic programming, Handbook of theoretical computer science (vol. B): formal models and semantics, MIT Press, Cambridge, MA, 1991
APT, K. R. AND BEZEM, M. 1991. Acyclic programs. New Gen. Comput. 9, 3, 335-363.
Krzysztof R. Apt , Dino Pedreschi, Reasoning about termination of pure Prolog programs, Information and Computation, v.106 n.1, p.109-157, Sept. 1993[doi>10.1006/inco.1993.1051]
ARAVIDAN, C. AND DUNG, V. M. 1993. On the correctness of unfold/fold transformation of normal and extended logic programs. Tech. Rep., Div. of Computer Science, Asian Inst. of Technology, Bangkok, Thailand.
Marc Bezem, Strong termination of logic programs, Journal of Logic Programming, v.15 n.1-2, p.79-97, Jan. 1993[doi>10.1016/0743-1066(93)90014-8]
BossI, A. AND Cocco, N. 1993. Basic transformation operations which preserve computed answer substitutions of logic programs. J. Log. Program. 16, 1, 47-87.
Lawrence Cavedon, Acyclic logic programs and the completeness of SLDNF-resolution, Theoretical Computer Science, v.86 n.1, p.81-92, Aug. 18, 1991[doi>10.1016/0304-3975(91)90005-M]
CLARK, K.L. 1978. Negation as failure rule. In Logic and Data Bases, H. Gallaire and G. Minker, Eds. Plenum Press, New York, 293-322.
FITTING, M. 1985. A Kripke-Kleene semantics for logic programs. J. Logic. Program. 2, 4, 295-312.
Allen Van Gelder , Kenneth Ross , John S. Schlipf, Unfounded sets and well-founded semantics for general logic programs, Proceedings of the seventh ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems, p.221-230, March 1988, Austin, Texas, United States[doi>10.1145/308386.308444]
KAWAMURA, T. AND KANAMORI, T. 1988. Preservation of stronger equivalence in unfold/fold logic programming transformation. In Proceedings of the International Conference on Fifth Generatton Computer Systems. Institute for New Generation Computer Technology, Tokyo, 413-422.
J. W. Lloyd, Foundations of logic programming; (2nd extended ed.), Springer-Verlag New York, Inc., New York, NY, 1987
MAHER, M. 1987. Correctness of a logic program transformation system. IBM Res. Rep. RC13496, T. J. Watson Research Center, Yorktown Heights, N~Y.
T. C. Przymusinski, Every logic program has a natural stratification and an iterated least fixed point model, Proceedings of the eighth ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems, p.11-21, March 1989, Philadelphia, Pennsylvania, United States[doi>10.1145/73721.73723]
Taisuke Sato, An Equivalence Preserving First Order Unfold/fold Transformation System, Proceedings of the Second International Conference on Algebraic and Logic Programming, p.173-188, October 01-03, 1990
SEKI, H. 1993. Unfold/fold transformation of general logic programs for the Well-Founded semantics. J. Logzc Program. 16, 1, 5-23.
Hiroshisa Seki, Unfold/fold transformation of stratified programs, Theoretical Computer Science, v.86 n.1, p.107-139, Aug. 18, 1991[doi>10.1016/0304-3975(91)90007-O]
SEK~, H. 1990. A comparative study of the well-founded and stable model semantics: Transformation's viewpoint. In the Workshop on Logic Programmzng and Non-Monotonic Logic (Austin, Tex., Oct.), D. P. W. Marek, A. Nerode, and V. Subrahmanian, Eds., Association for Logic Programming and Mathematical Sciences Inst., Cornell Umv., 115-123.
SEKI, H. 1989. Unfold/fold transformation of stratified programs. In the 6th International Conference on Logtc Programming, G. Levi and M. Martelli, Eds. MIT Press, Cambridge, Mass., 554-568.
TAMAKI, H. AND SATO, T. 1984. Unfold/fold transformations of logic programs In Proceedzngs o/the 2nd Internattonal Conference on Logic Programming (Uppsala Univ.), 127-139.
