Alexander Aiken , T. K. Lakshman, Directional Type Checking of Logic Programs, Proceedings of the First International Static Analysis Symposium on Static Analysis, p.43-60, September 28-30, 1994
APT, K. R. AND DOETS, K. 1994. A new definition of SLDNF-reso~ution. J. Logic Program. 18, 2 (Feb.), 177-190.
Krzysztof R. Apt , M. H. van Emden, Contributions to the Theory of Logic Programming, Journal of the ACM (JACM), v.29 n.3, p.841-862, July 1982[doi>10.1145/322326.322339]
Roberto Barbuti , Maurizio Martelli, A Tool to Check the Non-Floundering Logic Programs and Goals, Proceedings of the 1st International Workshop on Programming Language Implementation and Logic Programming, p.58-67, May 16-18, 1988
P. A. Bloniarz , H. B. Hunt, III , D. J. Rosenkrantz, Algebraic Structures with Hard Equivalence and Minimization Problems, Journal of the ACM (JACM), v.31 n.4, p.879-904, Oct. 1984[doi>10.1145/1634.1639]
M. Bruynooghe, Compile-time garbage collectionor How to transform programs in an assignment-free language into code with assignments, The IFIP TC2/WG 2.1 Working Conference on Program specification and transformation, p.113-129, June 1987, Bad To:9Ailz, Germany
CHANG, J., DESPAIN, A. M., AND DEGROOT, D. 1985. And-parallelism of logic programs based on a static data dependency analysis. In D~gest of Papers, Cornpcon 85. IEEE Computer Society, Washington, D.C., 218-225.
Michael Codish , Bart Demoen, Analysing logic programs using “prop”-ositional logic programs and a magic wand, Proceedings of the 1993 international symposium on Logic programming, p.114-129, December 1993, Vancouver, British Columbia, Canada
CODISH, M., DAMS, D., AND YARDENI, Y. 1990. Abstract unification and a bottom-upanalysis to detect aliasing in logic programs. Tech. Rep. CS90-10, Dept. of Applied Mathematics and Computer Science, Weizmann Institute of Science, Rehovot, Israel. May.
Michael Codish , Moreno Falaschi , Kim Marriott, Suspension analyses for concurrent logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.3, p.649-686, May 1994[doi>10.1145/177492.177656]
Stephen A. Cook, The complexity of theorem-proving procedures, Proceedings of the third annual ACM symposium on Theory of computing, p.151-158, May 03-05, 1971, Shaker Heights, Ohio, United States[doi>10.1145/800157.805047]
Agostino Cortesi , Baudouin Le Charlier , Pascal Van Hentenryck, Combinations of abstract domains for logic programming, Proceedings of the 21st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.227-239, January 16-19, 1994, Portland, Oregon, United States[doi>10.1145/174675.177880]
Patrick Cousot , Radhia Cousot, Systematic design of program analysis frameworks, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.269-282, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567778]
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Saumya K. Debray, Efficient dataflow analysis of logic programs, Journal of the ACM (JACM), v.39 n.4, p.949-984, Oct. 1992[doi>10.1145/146585.146624]
Saumya K. Debray, Static inference of modes and data dependencies in logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.3, p.418-450, July 1989[doi>10.1145/65979.65983]
Saumya K. Debray , David S. Warren, Automatic mode inference for logic programs, Journal of Logic Programming, v.5 n.3, p.207-229, Sept. 1988[doi>10.1016/0743-1066(88)90010-6]
DRABENT, W. 1987. Do logic programs resemble programs in conventional languages? In Proceedings of the {EEE Symposium on Logzc Programming. IEEE, New York, 389-396.
M. Falaschi , G. Levi , C. Palamidessi , M. Martelli, Declarative modeling of the operational behavior of logic languages, Theoretical Computer Science, v.69 n.3, p.289-318, Dec. 18, 1989[doi>10.1016/0304-3975(89)90070-4]
GIACOBAZZI, R., DEBRAY, S. K., AND LEVI, G. 1992. A generalized semantics for constraint logic programs. In Proceedings of the 1992 Conference on Fifth Generation Computer Systems. ICOT, Tokyo, 582-591.
M. V. Hermenegildo , R. Warren , S. K. Debray, Global flow analysis as a practical compilation tool, Journal of Logic Programming, v.13 n.4, p.349-366, Aug. 1992[doi>10.1016/0743-1066(92)90053-6]
Paul Hudak , Jonathan Young, Higher-order strictness analysis in untyped lambda calculus, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.97-109, January 01, 1986, St. Petersburg Beach, Florida[doi>10.1145/512644.512653]
JACOBS, D. AND LANGEN, A. 1989. Accurate and efficient approximation of variable aliasingin logic programs. In Proceedings of the North Amemcan Conference on Logic Programming. MIT Press, Cambridge, Mass., 154-165.
JANSSENS, G. 1990. Deriving run-time properties of logic programs by means of abstract interpretation. Ph.D. thesis, Katholieke Universiteit Leuven, Belgium.
JONES, N. D. AND MUCHNICK, S. S. 1981. Complexity of flow analysis, inductive assertion synthesis, and a language due to Dijkstra. In Program Flow Analys,s: Theory and Appticat,ons, S. S. Muchnick AND N. D. JONES, Eds. Prentice Hall, Englewood Cliffs, N.J., 381-393.
Andy King , Paul Soper, Depth-ksharing and freeness, Proceedings of the eleventh international conference on Logic programming, p.553-568, August 1994
Baudouin Le Charlier , Pascal Van Hentenryck, Experimental evaluation of a generic abstract interpretation algorithm for PROLOG, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.1, p.35-101, Jan. 1994[doi>10.1145/174625.174627]
LEwis, H. R. 1980. Complexity results for classes of quantificational formulas. J. Compu~. SysL Sc~. 21, 317-353.
MANNILA, H. AND UKKONEN, E. 1987. Flow analysis of Prolog programs. In Proceedings of the gth IEEE Symposium on Logic Programming. IEEE, New York, 205-214.
Kim Marriott , Harald Søndergaard, Precise and efficient groundness analysis for logic programs, ACM Letters on Programming Languages and Systems (LOPLAS), v.2 n.1-4, p.181-196, March–Dec. 1993[doi>10.1145/176454.176519]
Kim Marriott , Harald Søndergaard, Bottom-up dataflow analysis of normal logic programs, Journal of Logic Programming, v.13 n.2-3, p.181-204, July 1992[doi>10.1016/0743-1066(92)90031-W]
MARRIOTT, K. AND S~DNDERGAARD, n. 1988. Bottom-up abstract interpretation of logic programs. In Proceedings o/ the 5th Internat,onal Conference on Logic Programming. MIT Press, Cambridge, Mass., 733-748.
Kim Marriott , Harald Søndergaard , Philip Dart, A characterization of non-floundering logic programs, Proceedings of the 1990 North American conference on Logic programming, p.661-680, January 1990, Austin, Texas, United States
Kim Marriott , Harald Søndergaard , Neil D. Jones, Denotational abstract interpretation of logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.3, p.607-648, May 1994[doi>10.1145/177492.177650]
MELLISH, C. S. 1985. Some global optimizations for a Prolog compiler. J. Logic Program. 2, 1 (Apr.), 43-66.
Anne Mulkers , William Winsborough , Maurice Bruynooghe, Live-structure dataflow analysis for Prolog, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.2, p.205-258, March 1994[doi>10.1145/174662.174664]
MUTHUKUMAR, K. AND HERMENEGILDO, M. 1991. Combined determination of sharing and freeness of program variables through abstract interpretation. In Proceedings of the 8th International Conference on Logic Programming. MIT Press, Cambridge, Mass., 49-63.
MUTHUKUMAR, K. AND HERMENEGILDO, M. 1989. Determination of variable dependence information at compile time through abstract interpretation. In Proceedings of the North American Conference on Logic Programming. MIT Press, Cambridge, Mass., 166-185.
Eugene M. Myers, A precise inter-procedural data flow algorithm, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.219-230, January 26-28, 1981, Williamsburg, Virginia[doi>10.1145/567532.567556]
Yehoshua Sagiv , Jeffrey D. Ullman, Complexity of a top-down capture rule, Stanford University, Stanford, CA, 1984
SANTOS COSTA, V., WARREN, D. H. D., AND YANG, R. 1991. The Andorra-I preprocessor: Supportingfull Prolog on the basic Andorra model. In Proceedings of the 1 lth International Conference on Logic Programming. MIT Press, New York, 443-456.
SATO, W. AND TAMAKI, n. 1984. Enumeration of success patterns in logic programs. Theoret. Comput. Sci. 34, 227-240.
L. J. Stockmeyer , A. R. Meyer, Word problems requiring exponential time(Preliminary Report), Proceedings of the fifth annual ACM symposium on Theory of computing, p.1-9, April 30-May 02, 1973, Austin, Texas, United States[doi>10.1145/800125.804029]
TARNLUND, S. 1977. Horn clause computability. BIT 17, 215-226.
TAYLOR, A. 1989. Removal of dereferencing and trailing in Prolog compilation. In Proceedings of the 6th International Conference on Logic Programming. MIT Press, Cambridge, Mass., 48-60.
Jeffrey D. Ullman , Moshe Y. Vardi, The complexity of ordering subgoals, Proceedings of the seventh ACM SIGACT-SIGMOD-SIGART symposium on Principles of database systems, p.74-81, March 1988, Austin, Texas, United States[doi>10.1145/308386.308417]
P. Van Hentenryck , A. Cortesi , B. Le Charlier, Type analysis of Prolog using type graphs, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.337-348, June 20-24, 1994, Orlando, Florida, United States[doi>10.1145/178243.178479]
William Hale Winsborough , Charles N. Fischer, Automatic, transparent parallelization of logic programs at compile time, 1988
