During the software crisis of the 1960s, Dijkstra's famous thesis"goto considered harmful"paved the way for structured programming. This short communication suggests that many current difficulties of parallel programming based on message passing are caused by poorly structured communication, which is a consequence of using low-levelsend-receiveprimitives. We argue that, likegotoin sequential programs,send-receiveshould be avoided as far as possible and replaced bycollective operationsin the setting of message passing. We dispute some widely held opinions about the apparent superiority of pairwise communication over collective communication and present substantial theoretical and empirical evidence to the contrary in the context of MPI (Message Passing Interface).