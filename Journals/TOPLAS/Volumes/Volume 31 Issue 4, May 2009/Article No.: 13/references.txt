M. Abadi , L. Cardelli , P.-L. Curien , J.-J. Levy, Explicit substitutions, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.31-46, December 1989, San Francisco, California, USA[doi>10.1145/96709.96712]
Mads Sig Ager , Olivier Danvy , Jan Midtgaard, A functional correspondence between call-by-need evaluators and lazy abstract machines, Information Processing Letters, v.90 n.5, p.223-232, 15 June 2004[doi>10.1016/j.ipl.2004.02.012]
Andrew W. Appel, Foundational Proof-Carrying Code, Proceedings of the 16th Annual IEEE Symposium on Logic in Computer Science, p.247, June 16-19, 2001
Barthe, G., Dufay, G., Jakubiec, L., Serpette, B. P., and de Sousa, S. M. 2001. A formal executable semantics of the JavaCard platform. In Proceedings of the European Symposium on Programming Languages and Systems. Springer-Verlag, Berlin, 302--319.
Pierre-Louis Curien , Thérèse Hardin , Jean-Jacques Lévy, Confluence properties of weak and strong calculi of explicit substitutions, Journal of the ACM (JACM), v.43 n.2, p.362-397, March 1996[doi>10.1145/226643.226675]
Pierre-Louis Curien , Hugo Herbelin, The duality of computation, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming, p.233-243, September 2000[doi>10.1145/351240.351262]
Danos, V., Joinet, J.-B., and Schellinx, H. 1993. A new deconstructive logic: Linear logic. In Proceedings of the Workshop on Linear Logic, J.-Y. Girard, et al., Eds.
Rémi Douence , Pascal Fradet, A systematic study of functional language implementations, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.2, p.344-387, March 1998[doi>10.1145/276393.276397]
Mattias Felleisen , D. P. Friedman , E. Kohlbecker , B. Duba, A syntactic theory of sequential control, Theoretical Computer Science, v.52 n.3, p.205-237, June 1987[doi>10.1016/0304-3975(87)90109-5]
Felleisen, M., Friedman, D., Kohlbecker, E., and Duba, B. 1986. Reasoning with continuations. In 1st Symposium on Logic and Computer Science. IEEE Computer Society Press, Los Alamitos, CA, 131--141.
Felleisen, M. and Friedman, D. P. 1986. Control operators, the SECD-machine and the λ-calculus. In Formal Description of Programming Language Concepts III. Elsevier, Amsterdam, The Netherlands, 193--217.
Cédric Fournet , Andrew D. Gordon, Stack inspection: theory and variants, Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.307-318, January 16-18, 2002, Portland, Oregon[doi>10.1145/503272.503301]
Gentzen, G. 1969. Investigations into logical deduction. In Collected Papers of Gerhard Gentzen, M. Szabo, Ed. Elsevier, Amsterdam, The Netherlands, 68--131.
Timothy G. Griffin, A formulae-as-type notion of control, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.47-58, December 1989, San Francisco, California, USA[doi>10.1145/96709.96714]
Thérèse Hardin , Luc Maranget , Bruno Pagano, Functional back-ends within the lambda-sigma calculus, Proceedings of the first ACM SIGPLAN international conference on Functional programming, p.25-33, May 24-26, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/232627.232632]
Hugo Herbelin, A Lambda-Calculus Structure Isomorphic to Gentzen-Style Sequent Calculus Structure, Selected Papers from the 8th International Workshop on Computer Science Logic, p.61-75, September 25-30, 1994
Tomoyuki Higuchi , Atsushi Ohori, Java bytecode as a typed term calculus, Proceedings of the 4th ACM SIGPLAN international conference on Principles and practice of declarative programming, p.201-211, October 06-08, 2002, Pittsburgh, PA, USA[doi>10.1145/571157.571178]
Howard, W. 1980. The formulae-as-types notion of construction. In To H. B. Curry: Essays in Combinatory Logic, Lambda Calculus and Formalism, J. R. Hindley and J. P. Seldin, Eds. Elsevier, Amsterdam, The Netherlands, 479--490.
Huet, G. and Lévy, J.-J. 1991. Computations in orthogonal rewriting systems, i. In Computational Logic: Essays in Honor of Alan Robinson, J.-L. Lassez and G. Plotkin, Eds. MIT Press, Cambridge, MA, 395--414.
Jones, M. P. 1998. The functions of Java bytecode. In Proceedings of the OOPSLA Wokshop on the Formal Underpinnings of Java.
Klein, G. and Strecker, M. 2004. Verified bytecode verification and type-certifying compilation. J. Logic Program. 58, 1-2, 27--60. citeseer.ist.psu.edu/article/klein03verified.html.
Jean-Louis Krivine, A call-by-name lambda-calculus machine, Higher-Order and Symbolic Computation, v.20 n.3, p.199-207, September 2007[doi>10.1007/s10990-007-9018-9]
Pierre Lescanne, From λσ to λν: a journey through calculi of explicit substitutions, Proceedings of the 21st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.60-69, January 16-19, 1994, Portland, Oregon, USA[doi>10.1145/174675.174707]
Liu, H. and Moore, J. S. 2004. Java program verification via a JVM deep embedding in ACL2. In 17th International Conference on Theorem Proving in Higher Order Logics (TPHOLs2004). Lecture Notes in Computer Science, vol. 3223. Springer-Verlag, Berlin, 184--200.
Greg Morrisett , Karl Crary , Neal Glew , David Walker, Stack-based typed assembly language, Journal of Functional Programming, v.12 n.1, p.43-88, January 2002[doi>10.1017/S0956796801004178]
Atsushi Ohori, A proof theory for machine code, ACM Transactions on Programming Languages and Systems (TOPLAS), v.29 n.6, p.36-es, October 2007[doi>10.1145/1286821.1286827]
Michel Parigot, Classical Proofs as Programs, Proceedings of the Third Kurt Gödel Colloquium on Computational Logic and Proof Theory, p.263-276, August 24-27, 1993
Plotkin, G. D. 1975. Call-by-Name, call-by-value, and the lambda-calculus. Theor. Comput. Sci. 1, 2, 125--159.
Polonovski, E. 2004. Strong normalization of λ&horbar;μμ˜-calculus. In Foundations of Software Science and Computation Structures (FOSSACS 2004). Lecture Notes in Computer Science, vol. 2987. Springer-Verlag, Berlin, 423--437.
Pottier, F., Skalka, C., and Smith, S. F. 2001. A systematic approach to static access control. In Proceedings of the European Symposium on Programming Languages and Systems. Springer-Verlag, Berlin, 30--45. http://www.cs.uvm.edu/~skalka/skalka-pubs/fpottier-skalka-smith-toplas03.pdf.
Prawitz, D. 1965. Natural Deduction, a Proof-Theoretical Study. Almquist and Wiksell, Stockholm.
Th. Streicher , B. Reus, Classical logic, continuation semantics and abstract machines, Journal of Functional Programming, v.8 n.6, p.543-572, November 1998[doi>10.1017/S0956796898003141]
Philip Wadler, Call-by-value is dual to call-by-name, Proceedings of the eighth ACM SIGPLAN international conference on Functional programming, p.189-201, August 25-29, 2003, Uppsala, Sweden[doi>10.1145/944705.944723]
Mitchell Wand, On the correctness of the Krivine machine, Higher-Order and Symbolic Computation, v.20 n.3, p.231-235, September 2007[doi>10.1007/s10990-007-9019-8]
Phillip M. Yelland, A compositional account of the Java virtual machine, Proceedings of the 26th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.57-69, January 20-22, 1999, San Antonio, Texas, USA[doi>10.1145/292540.292548]
