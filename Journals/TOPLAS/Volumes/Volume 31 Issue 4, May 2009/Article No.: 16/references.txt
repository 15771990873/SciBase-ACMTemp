Ralph-Johan J. Back , Abo Akademi , J. Von Wright , F. B. Schneider , D. Gries, Refinement Calculus: A Systematic Introduction, Springer-Verlag New York, Inc., Secaucus, NJ, 1998
Back, R.-J. R. 1980. Correctness preserving program refinements: Proof theory and applications. Tract 131, Mathematisch Centrum, Amsterdam.
R. J. R. Back , J. von Wright, Duality in specification languages: a lattice-theoretical approach, Acta Informatica, v.27 n.7, p.583-625, 1990
Roland Backhouse, Program Construction: Calculating Implementations from Specifications, John Wiley & Sons, Inc., New York, NY, 2003
Bijlsma, L. and Nederpelt, R. 1998. Dijkstra-Scholten predicate calculus: Concepts and misconceptions. Acta Inf. 35, 1007--1036.
Böhme, S., Leino, K. R. M., and Wolff, B. 2008. HOL-Boogie—An interactive prover for the Boogie program-verifier. In Proceedings of the 21st International Conference on Theorem Proving in Higher Order Logics, O. A. Mohamed, et al., Eds. Lecture Notes in Computer Science, vol. 5170. Springer-Verlag, New York, 150--166.
H. J. Boom, A Weaker Precondition for Loops, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.4, p.668-677, Oct. 1982[doi>10.1145/69622.357189]
Raymond Boute, Functional declarative language design and predicate calculus: a practical approach, ACM Transactions on Programming Languages and Systems (TOPLAS), v.27 n.5, p.988-1047, September 2005[doi>10.1145/1086642.1086647]
Bunkenburg, A. 1997. Expression refinement. Ph.D. thesis, Computing Science Department, University of Glasgow.
Edward Cohen, Programming in the 1990s: an introduction to the calculation of programs, Springer-Verlag New York, Inc., New York, NY, 1990
David Detlefs , Greg Nelson , James B. Saxe, Simplify: a theorem prover for program checking, Journal of the ACM (JACM), v.52 n.3, p.365-473, May 2005[doi>10.1145/1066100.1066102]
Edsger Wybe Dijkstra, A  Discipline of Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1997
Edsger W. Dijkstra, Selected writings on computing: a personal perspective, Springer-Verlag New York, Inc., New York, NY, 1982
Edsger W. Dijkstra , Carel S. Scholten, Predicate calculus and program semantics, Springer-Verlag New York, Inc., New York, NY, 1990
E W Dijkstra , A J M van Gasteren, A simple fixpoint argument without the restriction to continuity, Acta Informatica, v.23 n.1, p.1-7, April 1986[doi>10.1007/BF00268074]
Robert W. Floyd, Nondeterministic Algorithms, Journal of the ACM (JACM), v.14 n.4, p.636-644, Oct. 1967[doi>10.1145/321420.321422]
Paul Gardiner , Carroll Morgan, Data refinement of predicate transformers, Theoretical Computer Science, v.87 n.1, p.143-162, Sept. 16, 1991[doi>10.1016/0304-3975(91)90029-2]
David Gries, The  Science of Programming, Springer-Verlag New York, Inc., Secaucus, NJ, 1987
David Gries , Fred B. Schneider, A logical approach to discrete math, Springer-Verlag New York, Inc., New York, NY, 1993
Eric C.R. Hehner, The logic of programming, Prentice-Hall, Inc., Upper Saddle River, NJ, 1984
Eric C. R. Hehner, A practical theory of programming, Springer-Verlag New York, Inc., New York, NY, 1993
Hitchcock, P. and Park, D. 1972. Induction rules and termination proofs. In IRIA Conference on Automata, Languages, and Programming Theory. North-Holland, Amsterdam, 225--251.
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Anne Kaldewaij, Programming: the derivation of algorithms, Prentice-Hall, Inc., Upper Saddle River, NJ, 1990
Kleymann, T. 1999. Hoare logic and auxiliary variables. Formal Aspects Comput. 11, 5, 541--566.
John Launchbury , Simon L. Peyton Jones, Lazy functional state threads, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.24-35, June 20-24, 1994, Orlando, Florida, USA[doi>10.1145/178243.178246]
E. Moggi, Computational lambda-calculus and monads, Proceedings of the Fourth Annual Symposium on Logic in computer science, p.14-23, June 1989, Pacific Grove, California, USA
C. Morgan, Auxiliary variables in data refinement, Information Processing Letters, v.29 n.6, p.293-296, Dec. 8, 1988[doi>10.1016/0020-0190(88)90227-X]
Carroll Morgan, Programming from specifications (2nd ed.), Prentice Hall International (UK) Ltd., Hertfordshire, UK, 1994
Joseph M. Morris, A theoretical basis for stepwise refinement and the programming calculus, Science of Computer Programming, v.9 n.3, p.287-306, December 1, 1987[doi>10.1016/0167-6423(87)90011-6]
Joseph M. Morris , Malcolm Tyrrell, Dual unbounded nondeterminacy, recursion, and fixpoints, Acta Informatica, v.44 n.5, p.323-344, August 2007[doi>10.1007/s00236-007-0049-9]
Joseph M. Morris , Malcolm Tyrrell, Dually nondeterministic functions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.30 n.6, p.1-34, October 2008[doi>10.1145/1391956.1391961]
David A. Naumann, Calculating sharp adaptation rules, Information Processing Letters, v.77 n.2-4, p.201-208, Feb. 1, 2001[doi>10.1016/S0020-0190(00)00215-5]
David A. Naumann, Ideal models for pointwise relational and state-free imperative programming, Proceedings of the 3rd ACM SIGPLAN international conference on Principles and practice of declarative programming, p.4-15, September 05-07, 2001, Florence, Italy[doi>10.1145/773184.773186]
David A. Naumann, Predicate transformer semantics of a higher-order imperative language with record subtyping, Science of Computer Programming, v.41 n.1, p.1-51, September 2001[doi>10.1016/S0167-6423(00)00005-8]
Greg Nelson, A generalization of Dijkstra's calculus, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.4, p.517-561, Oct. 1989[doi>10.1145/69558.69559]
Nelson, G. 1992. Some generalizations and applications of Dijkstra's guarded commands. In Programming and Mathematical Methods, M. Broy, Ed. NATO ASI Series F: Computer and Systems Sciences, vol. 88. Springer-Verlag, New York.
Helmut A. Partsch, Specification and transformation of programs: a formal approach to software development, Springer-Verlag New York, Inc., New York, NY, 1990
Pierik, C. and de Boer, F. S. 2004. Modularity and the rule of adaptation. In Algebraic Methodology and Software Technology, 10th International Conference, C. Rattray, et al., Eds. Lecture Notes in Computer Science, vol. 3116. Springer-Verlag, New York, 394--408.
J. M. Spivey, Understanding Z: a specification language and its formal semantics, Cambridge University Press, New York, NY, 1988
Tarski, A. 1955. A lattice-theoretical fixpoint theorem and its applications. Pacific J. Math. 5, 285--309.
Tunnicliffe, W. R. 1985. The free completely distributive lattice over a poset. Algebra Universalis 21, 133--135.
J. von Wright, The lattice of data refinement, Acta Informatica, v.31 n.2, p.105-135, Feb. 1994[doi>10.1007/BF01192157]
Philip Wadler, The essence of functional programming, Proceedings of the 19th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.1-14, January 19-22, 1992, Albuquerque, New Mexico, USA[doi>10.1145/143165.143169]
Jim Woodcock , Martin Loomes, Software engineering mathematics, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1990
