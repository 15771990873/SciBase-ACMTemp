Alfred V. Aho , Ravi Sethi , Jeffrey D. Ullman, Compilers: principles, techniques, and tools, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1986
Allen, F. E., Cocke, J., and Kennedy, K. 1981. Reduction of operator strength. In Program Flow Analysis, S. S. Muchnick and N. D. Jones, Eds. Prentice-Hall, Englewood Cli s, N.J., 79{101.
John Randal Allen, Dependence analysis for subscripted variables and its application to program transformations, Rice University, Houston, TX, 1983
Randy Allen , Ken Kennedy, Automatic translation of FORTRAN programs to vector form, ACM Transactions on Programming Languages and Systems (TOPLAS), v.9 n.4, p.491-542, Oct. 1987[doi>10.1145/29873.29875]
Zahira Ammarguellat , W. L. Harrison, III, Automatic recognition of induction variables and recurrence relations by abstract interpretation, Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation, p.283-295, June 1990, White Plains, New York, USA[doi>10.1145/93542.93583]
R. Apt Krzysztof , Ernst-Rüdiger Olderog, Verification of sequential and concurrent programs, Springer-Verlag New York, Inc., New York, NY, 1991
Utpal K. Banerjee, Dependence Analysis for Supercomputing, Kluwer Academic Publishers, Norwell, MA, 1988
Utpal K. Banerjee, Loop Parallelization, Kluwer Academic Publishers, Norwell, MA, 1994
Z Furedi , I Barany, Computing the volume is difficult, Proceedings of the eighteenth annual ACM symposium on Theory of computing, p.442-447, May 28-30, 1986, Berkeley, California, USA[doi>10.1145/12130.12176]
Berry, M., Chen, D., Koss, P., Kuck, D. J., Pointer, L., Lo, S., Pang, Y., Roloff, R., Sameh, A., Clementi, E., Chin, S., Schneider, D., Fox, G., Messina, P., Walker, D., Hsiung, C., Schwarzmeier, J., Lue, K., Orszag, S., Seidl, F., Johnson, O., Swanson, G., Goodrum, R., and Martin, J. 1989. The Perfect Club Benchmarks: E ective performance evaluation of supercomputers. Int. J. Supercomput. Appl. 3, 3 (Fall), 5{40.
W. Blume , R. Eigenmann, Performance Analysis of Parallelizing Compilers on the Perfect Benchmarks Programs, IEEE Transactions on Parallel and Distributed Systems, v.3 n.6, p.643-656, November 1992[doi>10.1109/71.180621]
D. Callahan , J. Dongarra , D. Levine, Vectorizing compilers: a test suite and results, Proceedings of the 1988 ACM/IEEE conference on Supercomputing, p.98-105, November 12-17, 1988, Orlando, Florida, USA
B. F. Caviness, On Canonical Forms and Simplification, Journal of the ACM (JACM), v.17 n.2, p.385-396, April 1970[doi>10.1145/321574.321591]
Chin-Liang Chang , Richard Char-Tung Lee, Symbolic Logic and Mechanical Theorem Proving, Academic Press, Inc., Orlando, FL, 1997
Cheatham, T. E., Jr., Holloway, G. H., and Townley, J. A. 1979. Symbolic evaluation and the analysis of programs. IEEE Trans. Softw. Eng. 5, 4 (July), 402{417.
Clarke, L. A. and Richardson, D. J. 1981. Symbolic evaluation methods for program analysis. In Program Flow Analysis, S. S. Muchnick and N. D. Jones, Eds. Prentice-Hall, Englewood Cli s, N.J., 264{300.
John Cocke , Ken Kennedy, An algorithm for reduction of operator strength, Communications of the ACM, v.20 n.11, p.850-856, Nov. 1977[doi>10.1145/359863.359888]
Jacques Cohen , Joel Katcoff, Symbolic Solution of Finite-Difference Equations, ACM Transactions on Mathematical Software (TOMS), v.3 n.3, p.261-271, Sept. 1977[doi>10.1145/355744.355751]
Cooper, K. D., Hall, M. W., and Kennedy, K. 1992. Procedure cloning. In Proceedings of the 4th IEEE International Conference on Computer Languages. IEEE Computer Society, Washington, D.C., 96{105.
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Cousot, P. and Cousot, R. 1992. Abstract interpretation frameworks. J. Logic Comput. 2, 4, 511{547.
Patrick Cousot , Nicolas Halbwachs, Automatic discovery of linear restraints among variables of a program, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.84-96, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512770]
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
Ron Cytron , J. Ferrante , V. Sarkar, Experiences using control dependence in PTRAN, Selected papers of the second workshop on Languages and compilers for parallel computing, p.186-212, May 1990, Urbana, Illinois, USA
J. H. Davenport , Y. Siret , E. Tournier, Computer algebra: systems and algorithms for algebraic computation, Academic Press Ltd., London, UK, 1988
Saumya K. Debray , Nai-Wei Lin, Cost analysis of logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.15 n.5, p.826-875, Nov. 1993[doi>10.1145/161468.161472]
Martin Dyer , Alan Frieze , Ravi Kannan, A random polynomial-time algorithm for approximating the volume of convex bodies, Journal of the ACM (JACM), v.38 n.1, p.1-17, Jan. 1991[doi>10.1145/102782.102783]
Eigenmann, R., Hoeflinger, J., Jaxon, G., Li, Z., and Padua, D. 1991. Restructuring Fortran programs for cedar. In Proceedings of the 1991 ICPP. Vol. I. The Pennsylvania State University Press, University Park, Pa., 57{66.
Eisenberg, M. 1971. Axiomatic Theory of Sets and Classes. Holt, Rinehart and Winston, Inc., New York.
John R. Ellis, Bulldog: a compiler for VLSI architectures, MIT Press, Cambridge, MA, 1986
Feautrier, P. 1988. Parametric integer programming. RAIRO Recherche Op erationelle 22, 243{268.
Jeanne Ferrante , Karl J. Ottenstein , Joe D. Warren, The program dependence graph and its use in optimization, ACM Transactions on Programming Languages and Systems (TOPLAS), v.9 n.3, p.319-349, July 1987[doi>10.1145/24039.24041]
Jeanne Ferrante , Vivek Sarkar , W. Thrash, On Estimating and Enhancing Cache Effectiveness, Proceedings of the Fourth International Workshop on Languages and Compilers for Parallel Computing, p.328-343, August 07-09, 1991
Susan Flynn Hummel , Edith Schonberg , Lawrence E. Flynn, Factoring: a method for scheduling parallel loops, Communications of the ACM, v.35 n.8, p.90-101, Aug. 1992[doi>10.1145/135226.135232]
Amelia C. Fong , Jeffrey D. Ullman, Induction variables in very high level languages, Proceedings of the 3rd ACM SIGACT-SIGPLAN symposium on Principles on programming languages, p.104-112, January 19-21, 1976, Atlanta, Georgia[doi>10.1145/800168.811544]
Michael R. Garey , David S. Johnson, Computers and Intractability: A Guide to the Theory of NP-Completeness, W. H. Freeman & Co., New York, NY, 1979
Keith O. Geddes , Stephen R. Czapor , George Labahn, Algorithms for computer algebra, Kluwer Academic Publishers, Norwell, MA, 1992
Milind Baburao Girkar, Functional parallelism: theoretical foundations and implementation, University of Illinois at Urbana-Champaign, Champaign, IL, 1992
M. Gikar , C. Polychronopoulos, Compiling issues for supercomputers, Proceedings of the 1988 ACM/IEEE conference on Supercomputing, p.164-173, November 12-17, 1988, Orlando, Florida, USA
M. Girkar , C. D. Polychronopoulos, Automatic Extraction of Functional Parallelism from Ordinary Programs, IEEE Transactions on Parallel and Distributed Systems, v.3 n.2, p.166-178, March 1992[doi>10.1109/71.127258]
Gina Goff , Ken Kennedy , Chau-Wen Tseng, Practical dependence testing, Proceedings of the ACM SIGPLAN 1991 conference on Programming language design and implementation, p.15-29, June 24-28, 1991, Toronto, Ontario, Canada[doi>10.1145/113445.113448]
Gosper, R. W., Jr. 1978. Decision procedure for inde nite hypergeometric summation. Proc. Nat. Acad. Sci. 75, 1 (Jan.), 40{42.
Mohammad Reza Haghighat, Symbolic analysis for parallelizing compilers, University of Illinois at Urbana-Champaign, Champaign, IL, 1995
Haghighat, M. R. and Polychronopoulos, C. D. 1991. Symbolic dependence analysis for high-performance parallelizing compilers. In Advances in Languages and Compilers for Parallel Processing, A. Nicolau, D. Gelernter, T. Gross, and D. Padua, Eds. The MIT Press, Cambridge, Mass., 310{330.
Mohammad R. Haghighat , Constantine D. Polychronopoulos, Symbolic Program Analysis and Optimization for Parallelizing Compilers, Proceedings of the 5th International Workshop on Languages and Compilers for Parallel Computing, p.538-562, August 03-05, 1992
Mary W. Hall , John M. Mellor-Crummey , Alan Carle , René G. Rodríguez, FIAT: A Framework for Interprocedural Analysis and Transfomation, Proceedings of the 6th International Workshop on Languages and Compilers for Parallel Computing, p.522-545, August 12-14, 1993
Hansen, E. R. 1992. Global Optimization Using Interval Analysis. Marcel Dekker, New York.
Paul Howard Havlak , Ken Kennedy, Interprocedural symbolic analysis, Rice University, Houston, TX, 1995
P. Havlak , K. Kennedy, An Implementation of Interprocedural Bounded Regular Section Analysis, IEEE Transactions on Parallel and Distributed Systems, v.2 n.3, p.350-360, July 1991[doi>10.1109/71.86110]
Timothy Hickey , Jacques Cohen, Automating program analysis, Journal of the ACM (JACM), v.35 n.1, p.185-220, Jan. 1988[doi>10.1145/42267.42275]
F. Irigoin, Interprocedural analyses for programming environments, Environments and tools for parallel scientific computing, Elsevier Science Publishers B. V., Amsterdam, The Netherlands, 1993
John Ivie, Some MACSYMA Programs for Solving Recurrence Relations, ACM Transactions on Mathematical Software (TOMS), v.4 n.1, p.24-33, March 1978[doi>10.1145/355769.355772]
James P. Jones , Yuri V. Matijasevič, Proof or recursive unsolvability of Hilbert's tenth problem, American Mathematical Monthly, v.98 n.10, p.689-709, Oct. 1991[doi>10.2307/2324421]
Neil D. Jones , Carsten K. Gomard , Peter Sestoft, Partial evaluation and automatic program generation, Prentice-Hall, Inc., Upper Saddle River, NJ, 1993
Jordan, C. 1965. Calculus of Finite Di erences, 3rd ed. Chelsea, New York.
P. Jouvelot, Semantic parallelization: a practical exercise in abstract interpretation, Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.39-48, January 21-23, 1987, Munich, West Germany[doi>10.1145/41625.41629]
Michael Karr, Summation in Finite Terms, Journal of the ACM (JACM), v.28 n.2, p.305-350, April 1981[doi>10.1145/322248.322255]
Donald E. Knuth, The art of computer programming, volume 1 (3rd ed.): fundamental algorithms, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 1997
Donald E. Knuth, Two notes on notation, American Mathematical Monthly, v.99 n.5, p.403-422, May 1992[doi>10.2307/2325085]
Kozen, D. 1981. Semantics of probabilistic programs. J. Comput. Syst. Sci. 22, 3 (June), 328{350.
Clyde P. Kruskal , Alan Weiss, Allocating Independent Subtasks on Parallel Processors, IEEE Transactions on Software Engineering, v.11 n.10, p.1001-1016, October 1985[doi>10.1109/TSE.1985.231547]
Kuck and Associates 1988. KAP User's Guide. Kuck and Associates, Champaign, Ill.
Kuck, D. J., Kuhn, R. H., Leasure, B., and Wolfe, M. J. 1980. The structure of an advanced vectorizer for pipelined processors. In Proceedings of the 4th International Computer Software and Applications Conference. IEEE Computer Society, Washington, D.C., 709{715.
A. Lichnewsky , F. Thomasset, Introducing symbolic problem solving techniques in the dependence testing phases of a vectorizer, Proceedings of the 2nd international conference on Supercomputing, p.396-406, June 1988, St. Malo, France[doi>10.1145/55364.55403]
Dror E. Maydan , John L. Hennessy , Monica S. Lam, Efficient and exact data dependence analysis, Proceedings of the ACM SIGPLAN 1991 conference on Programming language design and implementation, p.1-14, June 24-28, 1991, Toronto, Ontario, Canada[doi>10.1145/113445.113447]
Moore, R. E. 1966. Interval Analysis. Prentice-Hall, Englewood Cli s, N.J.
Jose Eduardo Moreira, On the implementation and effectiveness of autoscheduling for shared-memory multiprocessors, University of Illinois at Urbana-Champaign, Champaign, IL, 1996
Joel Moses, Algebraic simplification: a guide for the perplexed, Communications of the ACM, v.14 n.8, p.527-537, Aug. 1971[doi>10.1145/362637.362648]
David A. Padua , Michael J. Wolfe, Advanced compiler optimizations for supercomputers, Communications of the ACM, v.29 n.12, p.1184-1201, Dec. 1986[doi>10.1145/7902.7904]
Marko Petkovsek, Finding closed-form solutions of difference equations by symbolic methods, Carnegie Mellon University, Pittsburgh, PA, 1991
Constantine D. Polychronopoulos, Parallel Programming and Compilers, Kluwer Academic Publishers, Norwell, MA, 1988
C. D. Polychronopoulos , D. J. Kuck, Guided self-scheduling: A practical scheduling scheme for parallel supercomputers, IEEE Transactions on Computers, v.36 n.12, p.1425-1439, Dec. 1987[doi>10.1109/TC.1987.5009495]
Polychronopoulos, C. D., Girkar, M. B., Haghighat, M. R., Lee, C. L., Leung, B. P., and Schouten, D. A. 1989. Parafrase-2: An environment for parallelizing, partitioning, synchronizing and scheduling programs on multiprocessors. In Proceedings of the 1989 ICPP. Vol. II. The Pennsylvania State University Press, University Park, Pa., 39{48.
William H. Press , Saul A. Teukolsky , William T. Vetterling , Brian P. Flannery, Numerical recipes in FORTRAN (2nd ed.): the art of scientific computing, Cambridge University Press, New York, NY, 1992
William Pugh, A practical algorithm for exact array dependence analysis, Communications of the ACM, v.35 n.8, p.102-114, Aug. 1992[doi>10.1145/135226.135233]
William Pugh, Counting solutions to Presburger formulas: how and why, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.121-134, June 20-24, 1994, Orlando, Florida, USA[doi>10.1145/178243.178254]
Reif, J. H. and Tarjan, R. E. 81. Symbolic program analysis in almost linear time. SIAM J. Comput. 11, 1 (Feb.), 81{93.
Richardson, D. 1968. Some unsolvable problems involving elementary functions of a real variable. J. Symb. Logic 33, 511{520.
Vivek Sarkar, Partitioning and Scheduling Parallel Programs for Multiprocessors, MIT Press, Cambridge, MA, 1989
Schouten, D. A. 1990. An overview of interprocedural analysis techniques for high performance parallelizing compilers. M.S. thesis, Dept. of Computer Science, Univ. of Illinois at Urbana-Champaign, Urbana, Ill.
Singh, J. P. and Hennessy, J. L. 1992. An empirical investigation of the e ectiveness and limitations of automatic parallelization. In Shared Memory Multiprocessing, N. Suzuki, Ed. The MIT Press, Cambridge, Mass., 213{240.
Tang, P. and Yew, P.-C. 1986. Processor self-scheduling for multiple-nested parallel loops. In Proceedings of the 1986 ICPP. The Pennsylvania State University Press, University Park, Pa., 528{535.
Nadia Tawbi , Paul Feautrier, Processor allocation and loop scheduling on multiprocessor computers, Proceedings of the 6th international conference on Supercomputing, p.63-71, July 19-24, 1992, Washington, D. C., USA[doi>10.1145/143369.143387]
Rémi Triolet , Francois Irigoin , Paul Feautrier, Direct parallelization of call statements, Proceedings of the 1986 SIGPLAN symposium on Compiler construction, p.176-185, June 25-27, 1986, Palo Alto, California, USA[doi>10.1145/12276.13329]
Tzen, T. H. and Ni, L. M. 1991. Dynamic loop scheduling for shared memory multiprocessors. In Proceedings of the 1991 ICPP. Vol. II. The Pennsylvania State University Press, University Park, Pa., 247{250.
Ben Wegbreit, Mechanical program analysis, Communications of the ACM, v.18 n.9, p.528-539, Sept. 1975[doi>10.1145/361002.361016]
Wegbreit, B. 1975b. Property extraction in well-founded property sets. IEEE Trans. Softw. Eng. 1, 3 (Sept.), 270{285.
Wegbreit, B. 1976a. Goal-directed program transformation. IEEE Trans. Softw. Eng. 2, 2 (June), 69{80.
Ben Wegbreit, Verifying Program Performance, Journal of the ACM (JACM), v.23 n.4, p.691-699, Oct. 1976[doi>10.1145/321978.321987]
Mark N. Wegman , F. Kenneth Zadeck, Constant propagation with conditional branches, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.2, p.181-210, April 1991[doi>10.1145/103135.103136]
Michael Joseph Wolfe, Optimizing Supercompilers for Supercomputers, MIT Press, Cambridge, MA, 1990
Wolfe, M. J. 1990. Flow graph anomalies: What's in a loop? Tech. Rep., Oregon Graduate Inst., Beaverton, Oreg.
Michael Wolfe, Beyond induction variables, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.162-174, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143131]
Wolfe, M. J. 1993. Engineering a data dependence test. Concurrency Pract. Exper. 5, 7 (Oct.), 603{622.
