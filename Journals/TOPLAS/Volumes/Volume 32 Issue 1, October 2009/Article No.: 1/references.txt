Françoise Balmas, Using Dependence Graphs as a Support to Document Programs, Proceedings of the Second IEEE International Workshop on Source Code Analysis and Manipulation, p.145, October 01-01, 2002
André Baresel , Harmen Sthamer , Michael Schmidt, Fitness Function Design To Improve Evolutionary Structural Testing, Proceedings of the Genetic and Evolutionary Computation Conference, p.1329-1336, July 09-13, 2002
Samuel Bates , Susan Horwitz, Incremental program testing using program dependence graphs, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.384-396, March 1993, Charleston, South Carolina, USA[doi>10.1145/158511.158694]
Jon Beck , David Eichmann, Program and interface slicing for reverse engineering, Proceedings of the 15th international conference on Software Engineering, p.509-518, May 17-21, 1993, Baltimore, Maryland, USA
Árpád Beszedes , Tamás Gergely , Zsolt Mihály Szabó , Janos Csirik , Tibor Gyimothy, Dynamic Slicing Method for Maintenance of Large C Programs, Proceedings of the Fifth European Conference on Software Maintenance and Reengineering, p.105, March 14-16, 2001
Beszédes, A. and Gyimóthy, T. 2002. Union slices for the approximation of the precise slice. In Proceedings of the IEEE International Conference on Software Maintenance. IEEE Computer Society Press, Los Alamitos, CA, 12--20.
J. M. Bieman , L. M. Ott, Measuring Functional Cohesion, IEEE Transactions on Software Engineering, v.20 n.8, p.644-657, August 1994[doi>10.1109/32.310673]
Robert V. Binder, Design for testability in object-oriented systems, Communications of the ACM, v.37 n.9, p.87-101, Sept. 1994[doi>10.1145/182987.184077]
David Binkley , Mark Harman, Forward slices are smaller than backward slices, Proceedings of the Fifth IEEE International Workshop on Source Code Analysis and Manipulation, p.15-24, September 30-October 01, 2005[doi>10.1109/SCAM.2005.28]
David Binkley , Mark Harman, Locating Dependence Clusters and Dependence Pollution, Proceedings of the 21st IEEE International Conference on Software Maintenance, p.177-186, September 25-30, 2005[doi>10.1109/ICSM.2005.58]
David Binkley , Mark Harman , Jens Krinke, Characterising, Explaining, and Exploiting the Approximate Nature of Static Analysis through Animation, Proceedings of the Sixth IEEE International Workshop on Source Code Analysis and Manipulation, p.43-52, September 27-29, 2006[doi>10.1109/SCAM.2006.7]
David Binkley, Semantics Guided Regression Test Cost Reduction, IEEE Transactions on Software Engineering, v.23 n.8, p.498-516, August 1997[doi>10.1109/32.624306]
Binkley, D. W. 1998. The application of program slicing to regression testing. Inf. Softw. Tech. Special Issue on Program Slicing 40, 11 and 12, 583--594.
Binkley, D. W. and Gallagher, K. B. 1996. Program slicing. In Advances in Computing, Volume 43, Academic Press, Orlando, FL, 1--50.
David Binkley , Mark Harman, Analysis and Visualization of Predicate Dependence on Formal Parameters and Global Variables, IEEE Transactions on Software Engineering, v.30 n.11, p.715-735, November 2004[doi>10.1109/TSE.2004.78]
Binkley, D. W. and Harman, M. 2004b. A survey of empirical results on program slicing. Adv. Comput. 62, 105--178.
David Binkley , Mark Harman , Jens Krinke, Empirical study of optimization techniques for massive slicing, ACM Transactions on Programming Languages and Systems (TOPLAS), v.30 n.1, p.3-es, November 2007[doi>10.1145/1290520.1290523]
David Binkley , L. Ross Raszewski , Christopher Smith , Mark Harman, An Empirical Study of Amorphous Slicing as a Program Comprehension Support Tool, Proceedings of the 8th International Workshop on Program Comprehension, p.161, June 10-11, 2000
David Binkley , Susan Horwitz , Thomas Reps, Program integration for languages with procedure calls, ACM Transactions on Software Engineering and Methodology (TOSEM), v.4 n.1, p.3-35, Jan. 1995[doi>10.1145/201055.201056]
Sue Black, Computing ripple effect for software maintenance, Journal of Software Maintenance: Research and Practice, v.13 n.4, p.263, July-August 2001
Gerardo Canfora , Luigi Cerulo, Impact Analysis by Mining Software and Change Request Repositories, Proceedings of the 11th IEEE International Software Metrics Symposium, p.29, September 19-22, 2005[doi>10.1109/METRICS.2005.28]
Gerardo Canfora , Aniello Cimitile , Andrea De Lucia , Giuseppe A. Di Lucca, Software Salvaging Based on Conditions, Proceedings of the International Conference on Software Maintenance, p.424-433, September 01, 1994
Canfora, G., Cimitile, A., and Munro, M. 1994b. RE<sup>2</sup>: Reverse engineering and reuse re-engineering. J. Softw. Maint. Res. Pract. 6, 2, 53--72.
Gerardo Canfora , Andrea De Lucia , Malcolm Munro, An integrated environment for reuse reengineering C code, Journal of Systems and Software, v.42 n.2, p.153-164, Aug. 1998[doi>10.1016/S0164-1212(98)10006-7]
A. Cimitile , A. De Lucia , M. Munro, Identifying reusable functions using specification driven program slicing: a case study, Proceedings of the International Conference on Software Maintenance, p.124, October 17-20, 1995
Aniello Cimitile , Andrea De Lucia , Malcolm Munro, A specification driven slicing process for identifying reusable functions, Journal of Software Maintenance: Research and Practice, v.8 n.3, p.145-178, May-June 1996[doi>10.1002/(SICI)1096-908X(199605)8:3<145::AID-SMR127>3.3.CO;2-0]
Séverine Colin , Bruno Legeard , Fabien Peureux, Preamble computation in automated test case generation using constraint logic programming: Research Articles, Software Testing, Verification & Reliability, v.14 n.3, p.213-235, September 2004[doi>10.1002/stvr.v14:3]
De Lucia, A. 2001. Program slicing: Methods and applications. In Proceedings of the 1st IEEE International Workshop on Source Code Analysis and Manipulation. IEEE Computer Society Press, Los Alamitos, CA, 142--149.
Andrea de Lucia , Anna Rita Fasolino , Malcolm Munro, Understanding Function Behaviors through Program Slicing, Proceedings of the 4th International Workshop on Program Comprehension (WPC '96), p.9, March 29-31, 1996
Andrea De Lucia , Mark Harman , Robert Hierons , Jens Krinke, Unions of Slices Are Not Slices, Proceedings of the Seventh European Conference on Software Maintenance and Reengineering, p.363, March 26-28, 2003
Program Slice Browser, Proceedings of the 9th International Workshop on Program Comprehension, p.50, May 12-13, 2001
Thomas Eisenbarth , Rainer Koschke , Daniel Simon, Locating Features in Source Code, IEEE Transactions on Software Engineering, v.29 n.3, p.210-224, March 2003[doi>10.1109/TSE.2003.1183929]
Manuel Fähndrich , Jeffrey S. Foster , Zhendong Su , Alexander Aiken, Partial online cycle elimination in inclusion constraint graphs, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.85-96, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277667]
Roger Ferguson , Bogdan Korel, The chaining approach for software test data generation, ACM Transactions on Software Engineering and Methodology (TOSEM), v.5 n.1, p.63-86, Jan. 1996[doi>10.1145/226155.226158]
Keith Gallagher , David Binkley, An Empirical Study of Computation Equivalence as Determined by Decomposition Slice Equivalence, Proceedings of the 10th Working Conference on Reverse Engineering, p.316, November 13-17, 2003
Keith Gallagher , Lucas Layman, Are Decomposition Slices Clones?, Proceedings of the 11th IEEE International Workshop on Program Comprehension, p.251, May 10-11, 2003
Gallagher, K. and O'Brien, L. 2001. Analyzing programs via decomposition slicing. In Proceedings of International Workshop on Empirical Studies of Software Maintenance, WESS. IEEE Computer Society Press, Los Alamitos, CA.
Gallagher, K. B. 1992. Evaluating the surgeon's assistant: Results of a pilot study. In Proceedings of the International Conference on Software Maintenance. IEEE Computer Society Press, Los Alamitos, CA, 236--244.
Keith Gallagher, Visual Impact Analysis, Proceedings of the 1996 International Conference on Software Maintenance, p.52-58, November 04-08, 1996
Keith Gallagher , Mark Harman , Sebastin Danicic, Guaranteed inconsistency avoidance during software evolution, Journal of Software Maintenance: Research and Practice, v.15 n.6, p.393-416, November 2003[doi>10.1002/smr.289]
Keith Brian Gallagher , James R. Lyle, Using Program Slicing in Software Maintenance, IEEE Transactions on Software Engineering, v.17 n.8, p.751-761, August 1991[doi>10.1109/32.83912]
Grammatech Inc. 2002. The codesurfer slicing system.
Gupta, R., Harrold, M. J., and Soffa, M. L. 1992. An approach to regression testing using slicing. In Proceedings of the IEEE Conference on Software Maintenance. IEEE Computer Society Press, Los Alamitos, CA, 299--308.
Tracy Hall , Austen Rainer , Dorota Jagielska, Using Software Development Progress Data to Understand Threats to Project Outcomes, Proceedings of the 11th IEEE International Software Metrics Symposium, p.18, September 19-22, 2005[doi>10.1109/METRICS.2005.52]
Mark Harman , David Binkley , Ranjit Singh , Robert M. Hierons, Amorphous Procedure Extraction, Proceedings of the Source Code Analysis and Manipulation, Fourth IEEE International Workshop, p.85-94, September 15-16, 2004[doi>10.1109/SCAM.2004.3]
Mark Harman , David Binkley , Sebastian Danicic, Amorphous program slicing, Journal of Systems and Software, v.68 n.1, p.45-64, 15 October 2003[doi>10.1016/S0164-1212(02)00135-8]
Harman, M. and Danicic, S. 1995. Using program slicing to simplify testing. Softw. Test. Verif. Reliab. 5, 3 (Sept.), 143--162.
Mark Harman , Youssef Hassoun , Kiran Lakhotia , Phil McMinn , Joachim Wegener, The impact of input domain reduction on search-based test data generation, Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering, September 03-07, 2007, Dubrovnik, Croatia[doi>10.1145/1287624.1287647]
Harman, M. and Hierons, R. M. 2001. An overview of program slicing. Softw. Focus 2, 3, 85--92.
Mark Harman , Lin Hu , Rob Hierons , Joachim Wegener , Harmen Sthamer , André Baresel , Marc Roper, Testability Transformation, IEEE Transactions on Software Engineering, v.30 n.1, p.3-16, January 2004[doi>10.1109/TSE.2004.1265732]
Mark Harman , Stephen Swift , Kiarash Mahdavi, An empirical study of the robustness of two module clustering fitness functions, Proceedings of the 2005 conference on Genetic and evolutionary computation, June 25-29, 2005, Washington DC, USA[doi>10.1145/1068009.1068184]
Susan Horwitz , Jan Prins , Thomas Reps, Integrating noninterfering versions of programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.3, p.345-387, July 1989[doi>10.1145/65979.65980]
Susan Horwitz , Thomas Reps , David Binkley, Interprocedural slicing using dependence graphs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.1, p.26-60, Jan. 1990[doi>10.1145/77606.77608]
David H. Hutchens , Victor R. Basili, System Structure Analysis: Clustering with Data Bindings, IEEE Transactions on Software Engineering, v.11 n.8, p.749-757, August 1985[doi>10.1109/TSE.1985.232524]
Matthew Hutchins , Keith Gallagher, Improving Visual Impact Analysis, Proceedings of the International Conference on Software Maintenance, p.294, March 16-19, 1998
Daniel Jackson , Eugene J. Rollins, A new model of program dependences for reverse engineering, Proceedings of the 2nd ACM SIGSOFT symposium on Foundations of software engineering, p.2-10, December 06-09, 1994, New Orleans, Louisiana, USA[doi>10.1145/193173.195281]
Toshihiro Kamiya , Shinji Kusumoto , Katsuro Inoue, CCFinder: a multilinguistic token-based code clone detection system for large scale source code, IEEE Transactions on Software Engineering, v.28 n.7, p.654-670, July 2002[doi>10.1109/TSE.2002.1019480]
Kiczales, G. 1997. Aspect oriented programming. ACM SIGPLAN Notices 32, 10 (Oct.), 162.
Raghavan Komondoor , Susan Horwitz, Semantics-preserving procedure extraction, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.155-169, January 19-21, 2000, Boston, MA, USA[doi>10.1145/325694.325713]
Raghavan Komondoor , Susan Horwitz, Effective, Automatic Procedure Extraction, Proceedings of the 11th IEEE International Workshop on Program Comprehension, p.33, May 10-11, 2003
B. Korel, Automated Software Test Data Generation, IEEE Transactions on Software Engineering, v.16 n.8, p.870-879, August 1990[doi>10.1109/32.57624]
Bogdan Korel , Jurgen Rilling, Dynamic Program Slicing in Understanding of Program Execution, Proceedings of the 5th International Workshop on Program Comprehension (WPC '97), p.80, May 28-30, 1997
B. Korel , J. Rilling, Program Slicing in Understanding of Large Programs, Proceedings of the 6th International Workshop on Program Comprehension, p.145, June 24-26, 1998
Krinke, J. and Snelting, G. 1998. Validation of measurement software as an application of slicing and constraint solving. Inf. Softw. Tech. (Special Issue on Program Slicing) 40, 11 and 12, 661--675.
Shinji Kusumoto , Akira Nishimatsu , Keisuke Nishie , Katsuro Inoue, Experimental Evaluation of Program Slicing for Fault Localization, Empirical Software Engineering, v.7 n.1, p.49-76, March 2002[doi>10.1023/A:1014823126938]
Arun Lakhotia, Rule-based approach to computing module cohesion, Proceedings of the 15th international conference on Software Engineering, p.35-44, May 17-21, 1993, Baltimore, Maryland, USA
Lakhotia, A. and Deprez, J.-C. 1998. Restructuring programs by tucking statements into functions. Inf. Softw. Tech. (Special Issue on Program Slicing) 40, 11 and 12, 677--689.
Lakhotia, A. and Singh, P. 2003. Challenges in getting formal with viruses. Virus Bulletin. Sept. 2003.
Lehman, M. M. 1980. On understanding laws, evolution and conservation in the large program life cycle. J. Syst. Softw. 1, 3, 213--221.
M. m. Lehman, Software's Future: Managing Evolution, IEEE Software, v.15 n.1, p.40-44, January 1998[doi>10.1109/MS.1998.646878]
Kanglin Li , Mengqi Wu, Effective Software Test Automation: Developing an Automated Software Testing Tool, SYBEX Inc., Alameda, CA, 2004
Lyle, J. R. and Weiser, M. 1987. Automatic program bug location by program slicing. In Proceedings of the 2nd International Conference on Computers and Applications (Peking) . IEEE Computer Society Press, Los Alamitos, CA, 877--882.
Kiarash Mahdavi , Mark Harman , Robert Mark Hierons, A Multiple Hill Climbing Approach to Software Module Clustering, Proceedings of the International Conference on Software Maintenance, p.315, September 22-26, 2003
S. Mancoridis , B. S. Mitchell , Y. Chen , E. R. Gansner, Bunch: A Clustering Tool for the Recovery and Maintenance of Software System Structures, Proceedings of the IEEE International Conference on Software Maintenance, p.50, August 30-September 03, 1999
Timothy M. Meyers , David Binkley, Slice-Based Cohesion Metrics and Software Intervention, Proceedings of the 11th Working Conference on Reverse Engineering, p.256-265, November 08-12, 2004
Brian S. Mitchell , Spiros Mancoridis, Using Heuristic Search Techniques To Extract Design Abstractions From Source Code, Proceedings of the Genetic and Evolutionary Computation Conference, p.1375-1382, July 09-13, 2002
Brian S. Mitchell , Spiros Mancoridis, On the Automatic Modularization of Software Systems Using the Bunch Tool, IEEE Transactions on Software Engineering, v.32 n.3, p.193-208, March 2006[doi>10.1109/TSE.2006.31]
Jim Q. Ning , Andre Engberts , W. Voytek Kozaczynski, Automated support for legacy code understanding, Communications of the ACM, v.37 n.5, p.50-57, May 1994[doi>10.1145/175290.175295]
Linda M. Ott , Jeffrey J. Thuss, The relationship between slices and module cohesion, Proceedings of the 11th international conference on Software engineering, p.198-204, May 1989, Pittsburgh, Pennsylvania, USA[doi>10.1145/74587.74614]
Xiaoxia Ren , Ophelia C. Chesley , Barbara G. Ryder, Identifying Failure Causes in Java Programs: An Application of Change Impact Analysis, IEEE Transactions on Software Engineering, v.32 n.9, p.718-732, September 2006[doi>10.1109/TSE.2006.90]
Xiaoxia Ren , Barbara G. Ryder , Maximilian Stoerzer , Frank Tip, Chianti: a change impact analysis tool for java programs, Proceedings of the 27th international conference on Software engineering, May 15-21, 2005, St. Louis, MO, USA[doi>10.1145/1062455.1062598]
Rilling, J., Seffah, A., and Lukas. J. 2001. MOOSE--A software comprehension framework. In Proceedings of the 5th World Multi-Conference on Systemics, Cybernetics and Informatics (SCI'01). (Software Quality: Standards, Metrics, Models, Tools and Human Aspects Session).
J. Rilling , S. P. Mudur, On the Use of Metaballs to Visually Map Source Code Structures and Analysis Results onto 3D Space, Proceedings of the Ninth Working Conference on Reverse Engineering (WCRE'02), p.299, October 29-November 01, 2002
Conor Ryan , Arthur H.M. van Roermund , Christina Johanna Maria Verhoeven, Automatic Re-engineering of Software Using Genetic Programming, Kluwer Academic Publishers, Norwell, MA, 1999
Mark Sherriff , Laurie Williams, Empirical Software Change Impact Analysis using Singular Value Decomposition, Proceedings of the 2008 International Conference on Software Testing, Verification, and Validation, p.268-277, April 09-11, 2008[doi>10.1109/ICST.2008.25]
Tip, F. 1995. A survey of program slicing techniques. J. Prog. Lang. 3, 3 (Sept.), 121--189.
Paolo Tonella, Using a Concept Lattice of Decomposition Slices for Program Understanding and Impact Analysis, IEEE Transactions on Software Engineering, v.29 n.6, p.495-509, June 2003[doi>10.1109/TSE.2003.1205178]
N. Tracey , J. Clark , K. Mander , J. McDermid, Automated test-data generation for exception conditions, Software—Practice & Experience, v.30 n.1, p.61-79, Jan. 2000[doi>10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9]
Jeffrey M. Voas , Keith W. Miller, Software Testability: The New Verification, IEEE Software, v.12 n.3, p.17-28, May 1995[doi>10.1109/52.382180]
Mark Weiser, Programmers use slices when debugging, Communications of the ACM, v.25 n.7, p.446-452, July 1982[doi>10.1145/358557.358577]
Wheeler, D. A. 2005. SLOC count user's guide. http://www.dwheeler.com/sloccount/sloccount.html.
Stephen S. Yau , James S. Collofello, Design Stability Measures for Software Maintenance, IEEE Transactions on Software Engineering, v.11 n.9, p.849-856, September 1985[doi>10.1109/TSE.1985.232544]
Jianjun Zhao, Slicing Aspect-Oriented Software, Proceedings of the 10th International Workshop on Program Comprehension, p.251, June 27-29, 2002
