John Allen, Anatomy of LISP, McGraw-Hill, Inc., New York, NY, 1978
Andrew W. Appel, Compiling with continuations, Cambridge University Press, New York, NY, 1992
Appel, A. W. and Gonçalves, M. J. R. 1993. Hash-consing garbage collection. Technical report CS-TR-412-93, Princeton University,
Krzysztof R. Apt , Jacob Brunekreef , Vincent Partington , Andrea Schaerf, Alma-O: an imperative language that supports declarative programming, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.5, p.1014-1066, Sept. 1998[doi>10.1145/293677.293679]
Dan Benanav , Deepak Kapur , Paliath Narendran, Complexity of matching problems, Proc. of the first international conference on Rewriting techniques and applications, p.417-429, May 20-22, 1985, Dijon, France
J. A. Bergstra , Jan Heering , Paul Klint, Algebraic specification, ACM, New York, NY, 1989
J. A. Bergstra , P. Klint, The discrete time TOOLBUS—a software coordination architecture, Science of Computer Programming, v.31 n.2-3, p.205-229, July 1, 1998[doi>10.1016/S0167-6423(97)00021-X]
Jan A. Bergstra , Mark Brand, Syntax and semantics of a high-level intermediate representation for ASF+SDF, CWI (Centre for Mathematics and Computer Science), Amsterdam, The Netherlands, 2000
Hans-Juergen Boehm, Space efficient conservative garbage collection, ACM SIGPLAN Notices, v.28 n.6, p.197-206, June 1993[doi>10.1145/173262.155109]
Jacob Brunekreef, A Transformation Tool for Pure Prolog Programs, Proceedings of the 6th International Workshop on Logic Programming Synthesis and Transformation, p.130-145, August 28-30, 1996
Clavel, M., Durán, F., Eker, S., Lincoln, P., Marti-Oliet, N., Meseguer, J., and Quesada, J. 1999. Maude: Specification and programming in rewriting logic---Maude system documentation. Technical report, SRI International, Menlo Park, CA.
Courcelle, B. and Franchi-Zannettacci, P. 1982. Attribute grammars and recursive program schemes I and II. Theoret. Comput. Sci. 17, 163--191 and 235--257.
Nachum Dershowitz , Jean-Pierre Jouannaud, Rewrite systems, Handbook of theoretical computer science (vol. B): formal models and semantics, MIT Press, Cambridge, MA, 1991
M. Jonge, A pretty-printer for every occasion, CWI (Centre for Mathematics and Computer Science), Amsterdam, The Netherlands, 2001
Klaus Didrich , Andreas Fett , Carola Gerke , Wolfgang Grieskamp , Peter Pepper, OPAL: design and implementation of an algebraic programming language, Proceedings of the international conference on Programming languages and system architectures, p.228-244, April 1994, Zurich, Switzerland
Dik, C. H. S. 1989. A fast implementation of the Algebraic Specification Formalism. M.S. thesis, Programming Research Group, University of Amsterdam, Amsterdam, The Netherlands.
T. B. Dinesh , Magne Haveraaen , Jan Heering, An algebraic programming style for numerical software and its optimization, Scientific Programming, v.8 n.4, p.247-259, December 2000
Field, A. J. and Harrison, P. G. 1988. Functional Programming. Addison-Wesley, Reading, MA.
Field, J. 1992. A simple rewriting semantics for realistic imperative programs and its application to program analysis. In Proc. ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (San Francisco, CA). ACM Press, New York, NY, 98--107. Also published as Technical report YALEU/DCS/RR--909, Yale University, New Haven, CT.
Wan Fokkink , Jasper Kamperman , Pum Walters, Within ARM's reach: compilation of left-linear rewrite systems via minimal rewrite systems, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.3, p.679-706, May 1998[doi>10.1145/291889.291903]
Franz, M. 1994. Code-generation on-the-fly: A key to portable software. Ph.D. thesis, ETH Zurich, Zurich, Switzerland. Available online at ftp://ftp.inf.ethz.ch/pub/publications/dissertations/th10497.ps.
Groote, J. F., Koorn, J. W. C., and van Vlijmen, S. F. M. 1995. The safety guaranteeing system at station Hoorn-Kersenboogaard. In Proceedings of the Tenth Annual Conference on Computer Assurance (COMPASS '95). IEEE, Computer Society Press, Los Alamitos, CA, 57--68.
Hartel, P. H. et al. 1996. Benchmarking implementations of functional languages with "Pseudoknot," a float-intensive benchmark. J. Funct. Program. 6, 621--655.
J. Heering , P. R. H. Hendriks , P. Klint , J. Rekers, The syntax definition formalism SDF—reference manual—, ACM SIGPLAN Notices, v.24 n.11, p.43-75, Nov. 1989[doi>10.1145/71605.71607]
Hendriks, P. R. H. 1991. Implementation of modular algebraic specifications. Ph.D. thesis, University of Amsterdam, Amsterdam, The Netherlands.
Hillebrand, J. A. 1996. Experiments in specification re-engineering. Ph.D. thesis, University of Amsterdam, Amsterdam, The Netherlands.
Christoph M. Hoffmann , Michael J. O'Donnell, Pattern Matching in Trees, Journal of the ACM (JACM), v.29 n.1, p.68-95, Jan. 1982[doi>10.1145/322290.322295]
Richard Jones , Rafael Lins, Garbage collection: algorithms for automatic dynamic memory management, John Wiley & Sons, Inc., New York, NY, 1996
Kamperman, J. F. Th. 1996. Compilation of term rewriting systems. Ph.D. thesis, University of Amsterdam, Amsterdam, The Netherlands.
S. Kaplan, A compiler for conditional term rewriting systems,  on Rewriting techniques and applications, p.25-41, May 1987, Bordeaux, France
Hélène Kirchner , Pierre-Etienne Moreau, Promoting rewriting to a programming language: a compiler for non-deterministic rewrite programs in associative-commutative theories, Journal of Functional Programming, v.11 n.2, p.207-251, March 2001
P. Klint, A meta-environment for generating programming environments, ACM Transactions on Software Engineering and Methodology (TOSEM), v.2 n.2, p.176-201, April 1993[doi>10.1145/151257.151260]
J. W. Klop, Term rewriting systems, Handbook of logic in computer science (vol. 2): background: computational structures, Oxford University Press, Inc., New York, NY, 1993
Leon Moonen, A generic architecture for data flow analysis to support reverse engineering, Proceedings of the 2nd international conference on Theory and Practice of Algebraic Specifications, p.10-10, September 25-26, 1997, Amsterdam, The Netherlands
Steven S. Muchnick, Advanced compiler design and implementation, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1998
Nadia Nedjah , Colin D. Walter , Stephen E. Eldridge, Optimal Left-to-Right Pattern-Matching Automata, Proceedings of the 6th International Joint Conference on Algebraic and Logic Programming, p.273-286, September 03-05, 1997
Olivier, P. A. 2002. Benchmarking of functional/algebraic language implementations. Available online at http://www.cwi.nl/∼olivierp/benchmark/.
Simon L. Peyton Jones, Compiling Haskell by Program Transformation: A Report from the Trenches, Proceedings of the 6th European Symposium on Programming Languages and Systems, p.18-44, April 22-24, 1996
Peyton Jones, S. L., Hall, C. V., Hammond, K., Partain, W. D., and Wadler, P. L. 1993. The Glasgow Haskell compiler: A technical overview. In Proceedings of Joint Framework for Information Technology Technical Conference (JFIT), Keele, England). DTI/SERC, London, U.K., 249--257.
Simon L. Peyton Jones , Thomas Nordin , Dino Oliva, C-: A Portable Assembly Language, Selected Papers from the 9th International Workshop on Implementation of Functional Languages, p.1-19, September 10-12, 1997
Plasmeijer, M. J. and van Eekelen, M. C. J. D. 1994. Concurrent CLEAN---version 1.0---Language refence manual. Technical report draft, Department of Computer Science, University of Nijmegen, Nijmegen, The Netherlands.
Eric P.B.M. Rutten , Sylvie Thiebaux, Semantics of Manifold: Specification in ASF+SDF and Extension., CWI (Centre for Mathematics and Computer Science), Amsterdam, The Netherlands, 1992
Alex Sellink , Chris Verhoef, Development, Assessment, and Reengineering of Language Descriptions, Proceedings of the Conference on Software Maintenance and Reengineering, p.151, February 29-March 03, 2000
Sjaak Smetsers , Eric Nöcker , John van Groningen , Rinu Plasmeijer, Generating efficient code for lazy functional languages, Proceedings of the 5th ACM conference on Functional programming languages and computer architecture, p.592-617, June 1991, Cambridge, Massachusetts, USA
Motoaki Terashima , Yasumasa Kanada, HLisp—its concept, implementation and applications, Journal of Information Processing, v.13 n.3, p.265-275, 1990
F. Tip , T. B. Dinesh, A slicing-based approach for locating type errors, ACM Transactions on Software Engineering and Methodology (TOSEM), v.10 n.1, p.5-55, Jan. 2001[doi>10.1145/366378.366379]
M. G. T. Van den Brand , H. A. de Jong , P. Klint , P. A. Olivier, Efficient annotated terms, Software—Practice & Experience, v.30 n.3, p.259-291, Mar.1.2000[doi>10.1002/(SICI)1097-024X(200003)30:3<259::AID-SPE298>3.0.CO;2-Y]
van den Brand, M. G. J., Eijkelkamp, S. M., Geluk, D. K. A., Meijer, Osborne, H. R., and Polling, M. J. F. 1995. Program transformations using ASF+SDF. In Proceedings of ASF+SDF '95. Technical Report P9504. Programming Research Group, University of Amsterdam, Amsterdam, The Netherlands, 29--52.
Mark G. J. van den Brand , Paul Klint , Pieter A. Olivier, Compilation and Memory Management for ASF+SDF, Proceedings of the 8th International Conference on Compiler Construction, Held as Part of the European Joint Conferences on the Theory and Practice of Software, ETAPS'99, p.198-213, March 22-28, 1999
Mark G. J. van den Brand , Alex Sellink , Chris Verhoef, Generation of components for software renovation factories from context-free grammars, Science of Computer Programming, v.36 n.2-3, p.209-266, March 2000[doi>10.1016/S0167-6423(99)00037-4]
van den Brand, M. G. J., van Deursen, A., Heering, J., de Jong, H. A., de Jonge, M., Kuipers, T., Klint, P., Moonen, L., Olivier, P. A., Scheerder, J., Vinju, J. J., Visser, E., and Visser, J. 2001. The ASF+SDF Meta-Environment: A component-based language development environment. In Compiler Construction (CC 2001), R. Wilhelm, Ed. Lecture Notes in Computer Science, vol. 2027. Springer-Verlag, Berlin, Germany, 365--370.
van der Meulen, E. A. 1996. Incremental typechecking. In Language Prototyping: An Algebraic Specification Approach, A. van Deursen, J. Heering, and P. Klint, Eds. AMAST Series in Computing, vol. 5. World Scientific, Singapore, 199--248.
van Deursen, A. 1994. Executable language definitions: Case studies and origin tracking techniques. Ph.D. thesis, University of Amsterdam, Amsterdam, The Netherlands.
van Deursen, A., Heering, J., and Klint, P., Eds. 1996. Language Prototyping. AMAST Series in Computing, vol. 5. World Scientific, Singapore.
Arie van Deursen , Paul Klint, Little languages: little maintenance, Journal of Software Maintenance: Research and Practice, v.10 n.2, p.75-92, March-Arpil 1998[doi>10.1002/(SICI)1096-908X(199803/04)10:2<75::AID-SMR168>3.0.CO;2-5]
Arie van Deursen , Paul Klint , Chris Verhoef, Research Issues in the Renovation of Legacy Systems, Proceedings of the Second Internationsl Conference on Fundamental Approaches to Software Engineering, p.1-21, March 22-28, 1999
Arie Van Deursen , Leon Moonen, Exploring Legacy Systems Using Types, Proceedings of the Seventh Working Conference on Reverse Engineering (WCRE'00), p.32, November 23-25, 2000
van Roy, P. 1993. The wonder years of sequential Prolog implementation. J. Logic Program. 19/20, 385--441.
Vinju, J. J. 1999. Optimizations of list matching in the ASF+SDF compiler. M.S. thesis, Programming Research Group, University of Amsterdam, Amsterdam, The Netherlands. Available online at http://www.cwi.nl/∼jurgenv/.
Visser, E. 1997. Syntax definition for language prototyping. Ph.D. thesis, University of Amsterdam, Amesterdam, The Netherlands. Available online at http://www.cs.uu. nl/∼visser/publications/ftp/Vis97.thesis.ps.gz.
