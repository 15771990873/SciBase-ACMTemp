Alfred V. Aho , Ravi Sethi , Jeffrey D. Ullman, Compilers: principles, techniques, and tools, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1986
Frances E. Allen, Control flow analysis, ACM SIGPLAN Notices, v.5 n.7, p.1-19, July 1970[doi>10.1145/390013.808479]
Vasanth Bala , Evelyn Duesterwald , Sanjeev Banerjia, Dynamo: a transparent dynamic optimization system, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.1-12, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349303]
Manuel E. Benitez, Register Transfer Standard, University of Virginia, Charlottesville, VA, 1991
M. E. Benitez , J. W. Davidson, A portable global optimizer and linker, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.329-338, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54023]
Gianfranco Bilardi , Keshav Pingali, A framework for generalized control dependence, Proceedings of the ACM SIGPLAN 1996 conference on Programming language design and implementation, p.291-300, May 21-24, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/231379.231435]
Cocke, J. and Miller, J. 1969. Some analysis techniques for optimizing computer programs. In 2nd Hawaii Conference on System Sciences. IEEE, New York, NY, 143--146.
Robert P. Colwell , Robert P. Nix , John J. O'Donnell , David B. Papworth , Paul K. Rodman, A VLIW architecture for a trace Scheduling Compiler, IEEE Transactions on Computers, v.37 n.8, p.967-979, August 1988[doi>10.1109/12.2247]
Thomas T. Cormen , Charles E. Leiserson , Ronald L. Rivest, Introduction to algorithms, MIT Press, Cambridge, MA, 1990
Jack W. Davidson , David B. Whalley, Ease: an environment for architecture study and experimentation, Proceedings of the 1990 ACM SIGMETRICS conference on Measurement and modeling of computer systems, p.259-260, April 1990, Univ. of Colorado, Boulder, Colorado, USA[doi>10.1145/98457.98775]
Charles N. Fischer , Richard J. LeBlanc, Jr., Crafting a compiler with C, Benjamin-Cummings Publishing Co., Inc., Redwood City, CA, 1991
Paul Havlak, Nesting of reducible and irreducible loops, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.4, p.557-567, July 1997[doi>10.1145/262004.262005]
Matthew S. Hecht, Flow Analysis of Computer Programs, Elsevier Science Inc., New York, NY, 1977
John L. Hennessy , David A. Patterson, Computer architecture (2nd ed.): a quantitative approach, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1996
Hoogerbrugge, J. and Augusteijn, L. 1999. Instruction scheduling for trimedia. J. Instruction-Level Parallel. 1, 1--2. Available online at www.jilp.org.
Johan Janssen , Henk Corporaal, Making graphs reducible with controlled node splitting, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.6, p.1031-1052, Nov. 1997[doi>10.1145/267959.269971]
Jens Knoop , Oliver Rüthing , Bernhard Steffen, Lazy code motion, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.224-234, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143136]
Steven S. Muchnick, Advanced compiler design and implementation, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1998
Mueller, F. 1991. Avoiding unconditional jumps by code replication. M.S. thesis, Dept. of Computer Science, Florida State University, Tallahassee.
Frank Mueller , David B. Whalley, Avoiding unconditional jumps by code replication, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.322-330, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143144]
Frank Mueller , David B. Whalley, Avoiding conditional branches by code replication, Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation, p.56-66, June 18-21, 1995, La Jolla, California, USA[doi>10.1145/207110.207116]
Karl Pettis , Robert C. Hansen, Profile guided code positioning, Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation, p.16-27, June 1990, White Plains, New York, USA[doi>10.1145/93542.93550]
G. Ramalingam, Identifying loops in almost linear time, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.2, p.175-188, March 1999[doi>10.1145/316686.316687]
G. Ramalingam, On loops, dominators, and dominance frontier, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.233-241, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349330]
Vugranam C. Sreedhar , Guang R. Gao , Yong-Fong Lee, Identifying loops using DJ graphs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.18 n.6, p.649-658, Nov. 1996[doi>10.1145/236114.236115]
Vugranam C. Sreedhar , Guang R. Gao , Yong-Fong Lee, A new framework for exhaustive and incremental data flow analysis using DJ graphs, Proceedings of the ACM SIGPLAN 1996 conference on Programming language design and implementation, p.278-290, May 21-24, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/231379.231434]
Unger, S. 1998. Transforming irreducible regions of control flow into reducible regions by optimized node splitting. M.S. thesis, Humboldt University Berlin, Germany. Studienarbeit, available online at http://www.informatik.hu-berlin.de/∼mueller/ftp/pub/mueller/theses/unger-st.ps.gz.
Sebastian Unger , Frank Mueller, Handling Irreducible Loops: Optimized Node Splitting vs. DJ-Graphs, Proceedings of the 7th International Euro-Par Conference Manchester on Parallel Processing, p.207-220, August 28-31, 2001
Nancy J. Warter , Grant E. Haab , Krishna Subramanian , John W. Bockhaus, Enhanced modulo scheduling for loops with conditional branches, Proceedings of the 25th annual international symposium on Microarchitecture, p.170-179, December 01-04, 1992, Portland, Oregon, USA
CORPORATE SPARC International, Inc., The SPARC architecture manual (version 9), Prentice-Hall, Inc., Upper Saddle River, NJ, 1994
