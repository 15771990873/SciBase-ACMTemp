John C. Reynolds, Using functor categories to generate intermediate code, Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.25-36, January 23-25, 1995, San Francisco, California, United States
Gregory F Johnson , Dominic Duggan, First-class stores and partial continuations in a programming language and environment, Computer Languages, v.20 n.1, p.53-68, March, 1994
Tim Nicholson , Norman Foo, A denotational semantics for Prolog, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.4, p.650-665, Oct. 1989
Veronique Royer, Transformations of denotational semantics in semantics directed compiler generation, ACM SIGPLAN Notices, v.21 n.7, p.68-73, July 1986
M. Y. Zhu, Transformational programming: the derivation of a Prolog interpretation algorithm, ACM SIGPLAN Notices, v.24 n.9, p.92-111, Sept. 1989
E. E. Kohlbecker , M. Wand, Macro-by-example: Deriving syntactic transformations from their specifications, Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.77-84, January 21-23, 1987, Munich, West Germany
Mitchell Wand, Loops in combinator-based compilers, Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.190-196, January 24-26, 1983, Austin, Texas
E. Cartwright , M. Felleisen, The semantics of program dependence, ACM SIGPLAN Notices, v.24 n.7, p.13-27, July 1989
Andrew W. Appel, Semantics-directed code generation, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.315-324, January 14-16, 1985, New Orleans, Louisiana, United States
Jean-Claude Raoult , Ravi Sethi, Properties of a Notation for Combining Functions, Journal of the ACM (JACM), v.30 n.3, p.595-611, July 1983
M. Montenyohl , M. Wand, Correct flow analysis in continuation semantics, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.204-218, January 10-13, 1988, San Diego, California, USA
John Hannan, Staging transformations for abstract machines, ACM SIGPLAN Notices, v.26 n.9, p.130-141, Sept. 1991
David A. Gudeman, Denotational semantics of a goal-directed language, ACM Transactions on Programming Languages and Systems (TOPLAS), v.14 n.1, p.107-125, Jan. 1992
Mitchell Wand, Embedding type structure in semantics, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.1-6, January 14-16, 1985, New Orleans, Louisiana, United States
Mitchell Wand, Semantics-directed machine architecture, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.234-241, January 25-27, 1982, Albuquerque, Mexico
J. F. Giorgi , D. Le Métayer, Continuation-based parallel implementation of functional programming languages, Proceedings of the 1990 ACM conference on LISP and functional programming, p.209-217, June 27-29, 1990, Nice, France
Mitchell Wand, A semantic prototyping system, ACM SIGPLAN Notices, v.19 n.6, p.213-221, June 1984
John Hannan, Operational semantics-directed compilers and machine architectures, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.4, p.1215-1247, July 1994
Uwe F. Pleban, Compiler prototyping using formal semantics, ACM SIGPLAN Notices, v.19 n.6, p.94-105, June 1984
David A. Schmidt, Detecting global variables in denotational specifications, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.2, p.299-310, April 1985
Peter Sestoft, Deriving a lazy abstract machine, Journal of Functional Programming, v.7 n.3, p.231-264, May 1997
Bill Harrison , Tim Sheard, Dynamically adaptable software with metacomputations in a staged language, Proceedings of the 2nd international conference on Semantics, applications, and implementation of program generation, September 06-06, 2001, Florence, Italy
William Clinger, The scheme 311 compiler an exercise in denotational semantics, Proceedings of the 1984 ACM Symposium on LISP and functional programming, p.356-364, August 06-08, 1984, Austin, Texas, United States
Ulrik Jørring , William L. Scherlis, Compilers and staging transformations, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.86-96, January 01, 1986, St. Petersburg Beach, Florida
Hanne R. Nielson , Flemming Neilson, Semantics directed compiling for functional languages, Proceedings of the 1986 ACM conference on LISP and functional programming, p.249-257, August 1986, Cambridge, Massachusetts, USA
P. Lee , U. Pleban, A realistic compiler generator based on high-level semantics: another progress report, Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.284-295, January 21-23, 1987, Munich, West Germany
Pascal Fradet , Daniel Le Métayer, Compilation of functional languages by program transformation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.1, p.21-51, Jan. 1991
Kenichi Asai , Oleg Kiselyov , Chung-Chieh Shan, Functional un|unparsing, Higher-Order and Symbolic Computation, v.24 n.4, p.311-340, November  2011
Mitchell Wand, Compiler correctness for parallel languages, Proceedings of the seventh international conference on Functional programming languages and computer architecture, p.120-134, June 26-28, 1995, La Jolla, California, USA
Charles Consel , Olivier Danvy, Static and dynamic semantics processing, Proceedings of the 18th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.14-24, January 21-23, 1991, Orlando, Florida, USA
Laurence E. Day , Graham Hutton, Compilation à la Carte, Proceedings of the 25th symposium on Implementation and Application of Functional Languages, p.13-24, August 28-30, 2013, Nijmegen, Netherlands
Ravi Sethi, Control Flow Aspects of Semantics-Directed Compiling, ACM Transactions on Programming Languages and Systems (TOPLAS), v.5 n.4, p.554-595, Oct. 1983
Rémi Douence , Pascal Fradet, A systematic study of functional language implementations, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.2, p.344-387, March 1998
Mads Sig Ager , Olivier Danvy , Mayer Goldberg, A symmetric approach to compilation and decompilation, The essence of computation: complexity, analysis, transformation, Springer-Verlag New York, Inc., New York, NY, 2002
Olivier Danvy, Defunctionalized interpreters for programming languages, ACM SIGPLAN Notices, v.43 n.9, p.131-142, September 2008
Peter Thiemann, Combinators for program generation, Journal of Functional Programming, v.9 n.5, p.483-525, September 1999
Peter Gammie, Synchronous digital circuits as functional programs, ACM Computing Surveys (CSUR), v.46 n.2, p.1-27, November 2013
