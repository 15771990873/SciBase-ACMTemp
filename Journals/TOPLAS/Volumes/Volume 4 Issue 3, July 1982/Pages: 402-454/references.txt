Alfred V. Aho , Jeffrey D. Ullman, Principles of Compiler Design (Addison-Wesley series in computer science and information processing), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1977
ALLEN, F.E. Program optimization. Annu. Rev. Aurora. Program. 5 (1969), 239-307.
ALLEN, F.E., COCKE, J., AND KENNEDY, K. Reduction of operator strength. In Program Flow Analysis, S. Muchnick and N. Jones (Eds.). Prentice-Hall, Englewood Cliffs, N.j., 1981, pp. 79-101.
BAUER, F.L., ANI) THE C.I.P. LANGUAGE GROUP. Report on a wide spectrum language for program specification and development. Tech. Rep. TUM-I8104, Institut f/Jr informatik, Technische Universitiit Miinchen, M, mich, W. Germany, May 1981.
BROY, M., PARTSCH, H., PEPPER, P., AND WIRSING, M. Semantic relations in programming languages. In Information Processing 80 (1980), 101-106.
BVRGE, W. An optimizing technique for high level programming languages. Computer Science Tech. Rep. RC 5834, #25271, IBM Research Center, Yorktown Heights, N.Y., 1976.
R. M. Burstall , John Darlington, A Transformation System for Developing Recursive Programs, Journal of the ACM (JACM), v.24 n.1, p.44-67, Jan. 1977[doi>10.1145/321992.321996]
John Cocke , Ken Kennedy, An algorithm for reduction of operator strength, Communications of the ACM, v.20 n.11, p.850-856, Nov. 1977[doi>10.1145/359863.359888]
COCKE, J., A~D MARKSTEIN, P. Strength reduction for division and modulo with application to accessing a multilevel store. Computer Science Tech. Rep. RC 7013, #30059, IBM Research Center, Yorktown Heights, N.Y., 1978.
John Cocke, Programming languages and their compilers: Preliminary notes, Courant Institute of Mathematical Sciences, New York University, 1969
DEWAR, R.B.K. The SETL programming language. Unpublished manuscript.
Robert B. K. Dewar , Arthur Grand , Ssu-Cheng Liu , Jacob T. Schwartz , Edmond Schonberg, Programming by Refinement, as Exemplified by the SETL Representation Sublanguage, ACM Transactions on Programming Languages and Systems (TOPLAS), v.1 n.1, p.27-49, July 1979[doi>10.1145/357062.357064]
EARLEY, J. High level iterators and a method for automatically designing data structure representation. Comput. Lang. 1, 4 (1975), 321-342.
FEATHER, M.S. A System for Developing Programs by Transformation. Ph.D. dissertation, Dep. of Artificial Intelligence, Univ. of Edinburgh, Edinburgh, Scotland, 1979.
Amelia C. Fong, Inductively computable constructs in very high level languages, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.21-28, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567755]
Amelia C. Fong, Generalized common subexpressions in very high level languages, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.48-57, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512956]
Amelia C. Fong , Jeffrey D. Ullman, Induction variables in very high level languages, Proceedings of the 3rd ACM SIGACT-SIGPLAN symposium on Principles on programming languages, p.104-112, January 19-21, 1976, Atlanta, Georgia[doi>10.1145/800168.811544]
FREUDENBERGER, S.M. SETL data structures. SETL Newsl. 189B, Dep. of Computer Science, New York Univ., New York, N.Y., May 1980.
GAREY, M.R., AND JOHNSON, D.S. Computers and Intractability. W.H. Freeman, San Francisco, 1979.
Susan L. Gerhart, Correctness-preserving program transformations, Proceedings of the 2nd ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.54-66, January 20-22, 1975, Palo Alto, California[doi>10.1145/512976.512983]
GOLDSTINE, H.H. A History of Numerical Analysis. Springer-Verlag, New York, 1977.
Herman H. Goldstine, The computer from Pascal to von Neumann, Princeton University Press, Princeton, NJ, 1980
Matthew S. Hecht, Flow Analysis of Computer Programs, Elsevier Science Inc., New York, NY, 1977
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
KENNEDY, K. A survey of compiler optimization techniques. In Program Flow Analysis, S. Muchnick and N. Jones (Eds.). Prentice-Hall, Englewood Cliffs, N.J., 1981, pp. 5-54.
KENNEDY, K. Variable subsumption with constant folding. SETL Newsl. 123, Dep. of Computer Science, New York Univ., New York, N.Y., Feb. 1974.
KENNEDY, K. Global dead computation elimination. SETL Newsl. 111, Dep. of Computer Science, New York Univ., New York, N.Y., Aug. 1973.
KENNEDY, K. An algorithm to compute compacted use definition chains. SETL Newsl. 112, Dep. of Computer Science, New York Univ., New York, N.Y., Aug. 1973.
KENNEDY, K. Linear function test replacement. SETL Newsl. 107, Dep. of Computer Science, New York Univ., New York, N.Y., May 1973.
KENNEDY, K. Reduction in strength using hashed temporaries. SETL Newsl. 102, Dep. of Computer Science, New York Univ., New York, N.Y., Mar. 1973.
KOENIG, S., AND PAIGE, R. A transformational framework for the automatic control of derived data. In Proceedings, 7th International Conference on Very Large Data Bases, Cannes, France, Sept. 9-11, 1981, pp. 306-318.
MORCENSTERN, M. Automated Design and Optimization of Management Information System Software. Ph.D. dissertation, Laboratory for Computer Science, Massachusetts Institute of Technology, Cambridge, Mass., Sept. 1976.
PAICE, R. Formal Differentiation. UMI Research Press, Ann Arbor, Mich., 1981. Revision of Ph.D. dissertation, Dep. of Computer Science, New York Univ., New York, N.Y., June 1979.
PAIGE, R., A~D KOENiG, S. Finite differencing of computable expressions. Tech. Rep. LCSR- TR-8, Dep. of Computer Science, Rutgers Univ., New Brunswick, N.J., Aug. 1980.
Bob Paige , J. T. Schwartz, Expression continuity and the formal differentiation of algorithms, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.58-71, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512957]
ROSEN, B.K. Degrees of availability. In Program Flow Analysis, S. Muchnick and N. Jones (Eds.). Prentice-Hall, Englewood Cliffs, N.J., 1981, pp. 55-76.
Edmond Schonberg , Jacob T. Schwartz , Micha Sharir, An Automatic Technique for Selection of Data Representations in SETL Programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.3 n.2, p.126-143, April 1981[doi>10.1145/357133.357135]
SCHWARTZ, J.T. Correct program technology. Courant Computer Science Rep. 12, Dep. of Computer Science, New York Univ., New York, N.Y., Sept. 1977.
SCHWARTZ, J.T. On the "base form" of algorithms. SETL Newsl. 159, Dep. of Computer Science, New York Univ., New York, N.Y., Nov. 1975.
SCHWARTZ, J.T. Optimization of very high level languages, parts I and II. Comput. Lang. 1, 2-3 (1975), 161-218.
SCHWARTZ, J.T. On Programming' An Interim Report on the SETL Project, Installments I and H. Courant Institute of Mathematical Sciences, New York Univ., New York, N.Y., 1974.
SCHWARTZ, J.T. Structureless programming, or the notion of "rubble," and the reduction of programs to rubble. SETL Newsl. 135A, Dep. of Computer Science, New York Univ., New York, N.Y., July 1974.
Micha Sharir, Some Observations Concerning Formal Differentiation of Set Theoretic Expressions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.2, p.196-225, April 1982[doi>10.1145/357162.357166]
SRIDHARAN, N. Private communication, 1980.
STANDISH, T., HARRIMAN, D., KIBLER, D., AND NEIGHBORS, J. The Irvine program transformation catalogue. Tech. Rep., Dep. of Information and Computer Science, Univ. of California, Irvine, Irvine, Calif., Jan. 1976.
Robert Endre Tarjan, A Unified Approach to Path Problems, Journal of the ACM (JACM), v.28 n.3, p.577-593, July 1981[doi>10.1145/322261.322272]
Aaron Melvin Tenenbaum, Type determination for very high level languages., New York University, New York, NY, 1974
