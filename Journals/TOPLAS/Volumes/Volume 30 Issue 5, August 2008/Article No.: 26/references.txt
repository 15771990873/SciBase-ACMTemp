Abadi, M., Cardelli, L., Curien, P.-L., and Lévy, J.-J. 1991. Explicit substitutions. J. Funct. Prog. 4, 375--416.
Brian E. Aydemir , Aaron Bohannon , Matthew Fairbairn , J. Nathan Foster , Benjamin C. Pierce , Peter Sewell , Dimitrios Vytiniotis , Geoffrey Washburn , Stephanie Weirich , Steve Zdancewic, Mechanized metatheory for the masses: the PoplMark challenge, Proceedings of the 18th international conference on Theorem Proving in Higher Order Logics, August 22-25, 2005, Oxford, UK[doi>10.1007/11541868_4]
Barendregt, H. P. 1984. The Lambda Calculus. North-Holland.
Iliano Cervesato, Proof-theoretic foundation of compilation in logic programming languages, Proceedings of the 1998 joint international conference and symposium on Logic programming, p.115-129, August 1998, Manchester, United Kingdom
Iliano Cervesato , Frank Pfenning, A linear logical framework, Information and Computation, v.179 n.1, p.19-75, November 25, 2002[doi>10.1006/inco.2001.2951]
Cheney, J. 2004a. The complexity of equivariant unification. In Proceedings of the 31st International Colloquium on Automata, Languages and Programming (ICALP'04). Lecture Notes in Computer Science, vol. 3142. Springer-Verlag, 332--344.
James Robert Cheney , Greg Morrisett, Nominal logic programming, Cornell University, Ithaca, NY, 2004
James Cheney, Equivariant unification, Proceedings of the 16th international conference on Term Rewriting and Applications, p.74-89, April 19-21, 2005, Nara, Japan[doi>10.1007/978-3-540-32033-3_7]
Cheney, J. 2005b. Relating nominal and higher-order pattern unification. In Proceedings of the 19th International Workshop on Unification (UNIF'05). 104--119.
James Cheney, Scrap your nameplate: (functional pearl), Proceedings of the tenth ACM SIGPLAN international conference on Functional programming, September 26-28, 2005, Tallinn, Estonia[doi>10.1145/1086365.1086389]
James Cheney, A simpler proof theory for nominal logic, Proceedings of the 8th international conference on Foundations of Software Science and Computation Structures, April 04-08, 2005, Edinburgh, UK[doi>10.1007/978-3-540-31982-5_24]
Cheney, J. 2006a. Completeness and Herbrand theorems for nominal logic. J. Symb. Logic 71, 1, 299--320.
James Cheney, The semantics of nominal logic programs, Proceedings of the 22nd international conference on Logic Programming, August 17-20, 2006, Seattle, WA[doi>10.1007/11799573_27]
Cheney, J. and Urban, C. 2004. Alpha-Prolog: A logic programming language with names, binding and alpha-equivalence. In Proceedings of the 20th International Conference on Logic Programming (ICLP'04). Lecture Notes in Computer Science, vol. 3132, Springer-Verlag, 269--283.
Cheng, A. S. K., Robinson, P. J., and Staples, J. 1991. Higher level meta programming in Qu-Prolog 3.0. In Proceedings of the International Conference on Logic Programming. 285--298.
Church, A. 1940. A formulation of the simple theory of types. J. Symb. Logic 5, 56--68.
Keith Clark , Peter J. Robinson , Richard Hagen, Multi-threading and message communication in Qu-Prolog, Theory and Practice of Logic Programming, v.1 n.3, p.283-301, May 2001[doi>10.1017/S147106840100120X]
W. F. Clocksin , Christopher S. Mellish, Programming in Prolog (3rd ed.), Springer-Verlag New York, Inc., New York, NY, 1987
John Darlington , Yike Guo, Constraint Logic Programming in the Sequent Calculus, Proceedings of the 5th International Conference on Logic Programming and Automated Reasoning, p.200-214, July 16-22, 1994
Davey, B. A. and Priestley, H. A. 2002. Introduction to Lattices and Order. Cambridge University Press.
Felty, A. 1993. Implementing tactics and tacticals in a higher-order logic programming language. J. Automa. Reason. 11, 1, 41--81.
Marcelo Fiore , Gordon Plotkin , Daniele Turi, Abstract Syntax and Variable Binding, Proceedings of the 14th Annual IEEE Symposium on Logic in Computer Science, p.193, July 02-05, 1999
Murdoch Gabbay , James Cheney, A Sequent Calculus for Nominal Logic, Proceedings of the 19th Annual IEEE Symposium on Logic in Computer Science, p.139-148, July 13-17, 2004[doi>10.1109/LICS.2004.6]
Gabbay, M. J. and Pitts, A. M. 2002. A new approach to abstract syntax with variable binding. Formal Aspects Comput. 13, 341--363.
Jean-Yves Girard, Linear logic, Theoretical Computer Science, v.50 n.1, p.1-102, Jan. 30, 1987[doi>10.1016/0304-3975(87)90045-4]
Makoto Hamana, A Logic Programming Language Based on Binding Algebras, Proceedings of the 4th International Symposium on Theoretical Aspects of Computer Software, p.243-262, October 29-31, 2001
Hannan, J. and Miller, D. 1988. Uses of higher-order unification for implementing program transformers. In Proceedings of the 5th International Conference and Symposium on Logic Programming, Volume 2, R. A. Kowalski and K. A. Bowen, Eds. MIT Press, Cambridge, MA, 942--959.
Michael Hanus, Horn clause programs with polymorphic types: semantics and resolution, Theoretical Computer Science, v.89 n.1, p.63-106, Oct. 21, 1991[doi>10.1016/0304-3975(90)90107-S]
Hanus, M. 1994. The integration of functions into logic programming: From theory to practice. J. Logic Program. 19--20, 583--628.
David Harel , Jerzy Tiuryn , Dexter Kozen, Dynamic Logic, MIT Press, Cambridge, MA, 2000
Robert Harper , Furio Honsell , Gordon Plotkin, A framework for defining logics, Journal of the ACM (JACM), v.40 n.1, p.143-184, Jan. 1993[doi>10.1145/138027.138060]
Martin Hofmann, Semantical Analysis of Higher-Order Abstract Syntax, Proceedings of the 14th Annual IEEE Symposium on Logic in Computer Science, p.204, July 02-05, 1999
Jaffar, J., Maher, M. J., Marriott, K., and Stuckey, P. J. 1998. The semantics of constraint logic programs. J. Logic Program. 37, 1--3, 1--46.
Javier Leach , Susana Nieva , Mario Rodríguez-Artalejo, Constraint Logic Programming with Hereditary Harrop formulas, Theory and Practice of Logic Programming, v.1 n.4, p.409-445, July 2001[doi>10.1017/S1471068401001041]
J. W. Lloyd, Foundations of logic programming; (2nd extended ed.), Springer-Verlag New York, Inc., New York, NY, 1987
Mason, I. A. 1987. Hoare's logic in the LF. Tech. rep. ECS-LFCS-87-32, University of Edinburgh.
Dale Miller, A logical analysis of modules in logic programming, Journal of Logic Programming, v.6 n.1-2, p.79-108, Jan./Mar. 1989[doi>10.1016/0743-1066(89)90031-9]
Miller, D. 1990. An extension to ML to handle bound variables in data structures. In Proceedings of the 1st ESPRIT BRA Workshop on Logical Frameworks. 323--335.
Miller, D. 1991. A logic programming language with lambda-abstraction, function variables, and simple unification. J. Logic Computat. 1, 4, 497--536.
Dale Miller, A Proposal for Modules in Lambda-Prolog, Proceedings of the 4th International Workshop on Extensions of Logic Programming, p.206-221, March 29-April 01, 1993
Miller, D. and Nadathur, G. 1987. A logic programming approach to manipulating formulas and programs. In Proceedings of the Symposium on Logic Programming. 379--388.
Miller, D., Nadathur, G., Pfenning, F., and Scedrov, A. 1991. Uniform proofs as a foundation for logic programming. Annals Pure Appl. Logic 51, 125--157.
Dale Miller , Alwen Tiu, A proof theory for generic judgments, ACM Transactions on Computational Logic (TOCL), v.6 n.4, p.749-783, October 2005[doi>10.1145/1094622.1094628]
Milner, R. 1978. A theory of type polymorphism in programming. J. Comput. Syst. Sci. 17, 3, 348--375.
Robin Milner , Joachim Parrow , David Walker, A calculus of mobile processes, I, Information and Computation, v.100 n.1, p.1-40, Sept. 1992[doi>10.1016/0890-5401(92)90008-4]
John C. Mitchell , Krzysztof Apt, Concepts in Programming Languages, Cambridge University Press, New York, NY, 2001
Alan Mycroft , Richard A. O'Keefe, A polymorphic type system for PROLOG., Artificial Intelligence, v.23 n.3, p.295-307, August 1984[doi>10.1016/0004-3702(84)90017-1]
Nadathur, G. and Miller, D. 1998. Higher-order logic programming. In Handbook of Logic in Artificial Intelligence and Logic Programming, D. M. Gabbay, C. J. Hogger, and J. A. Robinson, Eds. Vol. 5. Oxford University Press, Chapter 8, 499--590.
Nadathur, G. and Mitchell, D. J. 1999. System description: Teyjus—a compiler and abstract machine based implementation of Lambda-Prolog. In Proceedings of the International Conference on Automated Deduction, H. Ganzinger, Ed. Lecture Notes in Computer Science, vol. 1632. Springer, 287--291.
Gopalan Nadathur , Xiaochu Qi, Optimizing the runtime processing of types in polymorphic logic programming languages, Proceedings of the 12th international conference on Logic for Programming, Artificial Intelligence, and Reasoning, p.110-124, December 02-06, 2005, Montego Bay, Jamaica[doi>10.1007/11591191_9]
Peter Nickolas , Peter J. Robinson, The Qu-Prolog unification algorithm: formalisation and correctness, Theoretical Computer Science, v.169 n.1, p.81-112, Nov. 30, 1996[doi>10.1016/S0304-3975(96)00115-6]
O'Hearn, P. and Pym, D. J. 1999. The logic of bunched implications. Bull. Sym. Logic 5, 2, 215--244.
Emir Pasalic , Tim Sheard , Walid Taha, DalI: An Untyped CBV Operational Semantics and Equational Theoryofr Datatypes with Binders(Technical Development), Oregon Graduate Institute School of Science & Engineering, 2000
Frank Pfenning, Logic programming in the LF logical framework, Logical frameworks, Cambridge University Press, New York, NY, 1991
Frank Pfenning, Logical frameworks, Handbook of automated reasoning, Elsevier Science Publishers B. V., Amsterdam, The Netherlands, 2001
F. Pfenning , C. Elliot, Higher-order abstract syntax, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.199-208, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54010]
Pfenning, F. and Schürmann, C. 1999. System description: Twelf—A meta-logical framework for deductive systems. In Proceedings of the 16th International Conference on Automated Deduction (CADE16), H. Ganzinger, Ed. Lecture Notes in Artificial Intelligence, vol. 1632, Springer-Verlag, 202--206.
Benjamin C. Pierce, Types and programming languages, MIT Press, Cambridge, MA, 2002
Andrew M. Pitts, Nominal logic, a first order theory of names and binding, Information and Computation, v.186 n.2, p.165-193, 01 November 2003[doi>10.1016/S0890-5401(03)00138-X]
Andrew M. Pitts, Alpha-structural recursion and induction, Journal of the ACM (JACM), v.53 n.3, p.459-506, May 2006[doi>10.1145/1147954.1147961]
Andrew M. Pitts , Murdoch Gabbay, A Metalanguage for Programming with Bound Names Modulo Renaming, Proceedings of the 5th International Conference on Mathematics of Program Construction, p.230-255, July 03-05, 2000
Andrew M. Pitts , Mark R. Shinwell, Generative unbinding of names, Proceedings of the 34th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 17-19, 2007, Nice, France[doi>10.1145/1190216.1190232]
Pottier, F. 2005. An overview of Cαml. In Proceedings of the ACM SIGPLAN Workshop on ML (ML'05). ACM, 27--52.
Francois Pottier, Static Name Control for FreshML, Proceedings of the 22nd Annual IEEE Symposium on Logic in Computer Science, p.356-365, July 10-14, 2007[doi>10.1109/LICS.2007.44]
John C. Reynolds, Separation Logic: A Logic for Shared Mutable Data Structures, Proceedings of the 17th Annual IEEE Symposium on Logic in Computer Science, p.55-74, July 22-25, 2002
Davide Sangiorgi , David Walker, PI-Calculus: A Theory of Mobile Processes, Cambridge University Press, New York, NY, 2001
Ulrich Schöpp, Modelling Generic Judgements, Electronic Notes in Theoretical Computer Science (ENTCS), v.174 n.5, p.19-35, June, 2007[doi>10.1016/j.entcs.2007.01.027]
Mark R. Shinwell , Andrew M. Pitts, On a monadic semantics for freshness, Theoretical Computer Science, v.342 n.1, p.28-55, 6 September 2005[doi>10.1016/j.tcs.2005.06.003]
Mark R. Shinwell , Andrew M. Pitts , Murdoch J. Gabbay, FreshML: programming with binders made simple, Proceedings of the eighth ACM SIGPLAN international conference on Functional programming, p.263-274, August 25-29, 2003, Uppsala, Sweden[doi>10.1145/944705.944729]
J. Staples , P. J. Robinson , R. A. Paterson , R. A. Hagen , A. J. Craddock , P. C. Wallis, Qu-Prolog: an extended Prolog for meta level programming, Meta-programming in logic programming, MIT Press, Cambridge, MA, 1989
Leon Sterling , Ehud Shapiro, The art of Prolog (2nd ed.): advanced programming techniques, MIT Press, Cambridge, MA, 1994
Alwen Tiu, A Logic for Reasoning about Generic Judgments, Electronic Notes in Theoretical Computer Science (ENTCS), v.174 n.5, p.3-18, June, 2007[doi>10.1016/j.entcs.2007.01.016]
Christian Urban , James Cheney, Avoiding equivariance in alpha-prolog, Proceedings of the 7th international conference on Typed Lambda Calculi and Applications, April 21-23, 2005, Nara, Japan[doi>10.1007/11417170_29]
Christian Urban , Andrew M. Pitts , Murdoch J. Gabbay, Nominal unification, Theoretical Computer Science, v.323 n.1-3, p.473-497, 14 September 2004[doi>10.1016/j.tcs.2004.06.016]
Christian Urban , Christine Tasson, Nominal techniques in Isabelle/HOL, Proceedings of the 20th international conference on Automated Deduction, p.38-53, July 22-27, 2005, Tallinn, Estonia[doi>10.1007/11532231_4]
M. H. Van Emden , R. A. Kowalski, The Semantics of Predicate Logic as a Programming Language, Journal of the ACM (JACM), v.23 n.4, p.733-742, Oct. 1976[doi>10.1145/321978.321991]
Watkins, K., Cervesato, I., Pfenning, F., and Walker, D. 2003. A concurrent logical framework: The propositional fragment. In Proceedings of TYPES. 355--377.
