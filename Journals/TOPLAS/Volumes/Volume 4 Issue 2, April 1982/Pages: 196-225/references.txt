John Cocke , Ken Kennedy, An algorithm for reduction of operator strength, Communications of the ACM, v.20 n.11, p.850-856, Nov. 1977[doi>10.1145/359863.359888]
John Cocke, Programming languages and their compilers: Preliminary notes, Courant Institute of Mathematical Sciences, New York University, 1969
DEWAR, R.B.K., AND MCCANN, A.P. MACRO SPITBOL--A SNOBOL4 compiler. Sofiw. Pract. Exper. 7 (1977), 95-113.
DEWAR, R.B.K., SCHONBERa, E., AND SCHWARTZ, J.T. Higher Level Programming: Introduction to the Use of the Set-Theoretic Programming Language SETL. Courant Institute of Mathematical Sciences, New York Univ., New York, 1981.
DEWAR, R.B.K., SHARIR, M., AND WEIXELRAUM, E. On transformational construction of garbage collection algorithms. Tech. Rep., Computer Science Dep., Courant Institute of Mathematical Sciences, New York Univ., New York, to appear.
EARLEY, J. High level iterators and a method for automatically designing data structure representation. Comput. Lang. I (1976), 321-342.
Amelia C. Fong, Inductively computable constructs in very high level languages, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.21-28, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567755]
Amelia C. Fong , Jeffrey D. Ullman, Induction variables in very high level languages, Proceedings of the 3rd ACM SIGACT-SIGPLAN symposium on Principles on programming languages, p.104-112, January 19-21, 1976, Atlanta, Georgia[doi>10.1145/800168.811544]
KENNEDY, K., AND SCHWARTZ, J.T. An introduction to the set-theoretical language SETL. Comput. Math. Appl. 1, I (1975), 97-119.
Donald E. Knuth, The art of computer programming, volume 1 (3rd ed.): fundamental algorithms, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 1997
Nils J. Nilsson, Problem-Solving Methods in Artificial Intelligence, McGraw-Hill Pub. Co., 1971
PAIGE, R. Expression continuity and the formal differentiation of algorithms. Tech. Rep. 15, Computer Science Dep., Courant Institute of Mathematical Sciences, New York Univ., New York, 1979.
PAIGE, R., AND KOENiG, S. Finite differencing of computable expressions. Tech. Rep. LCSR- TR-8, Laboratory for Computer Science Research, Rutgers Univ., New Brunswick, N.J., 1980.
Bob Paige , J. T. Schwartz, Expression continuity and the formal differentiation of algorithms, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.58-71, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512957]
SCHWARTZ, J.T. On the "base form" of algorithms. SETL Newsl. 159, Courant Institute of Mathematical Sciences, New York Univ., New York, 1975.
SO,WAR?Z, J.T. On Programming: An Interim Report on the SETL Project, 2d ed. Courant Institute of Mathematical Sciences, New York Univ., New York, 1975.
SCHWARTZ, J.T. intermediate result recording and other techniques for optimizing recursions and backtrack programs. SETL Newsl. 155, Courant Institute of Mathematical Sciences, New York Univ., New York, 1975.
SHARm, M. A strange sorting technique inspired by program transformation. Comput. Math. Appl. 7, 4 (1981), 293-298.
SHARIR, M. Formal integration--A program transformation technique. Comput. Lang. 6, 1 (1981), 35-46.
SHARm, M. Set theoretic constructs as a tool in program construction. In Proceedings of the Internationa~ Workshop on Program Construction, Bonas, France, Sept. 1980.
SHARm, M. Algorithm derivation by transformation. Tech. Rep. 21, Computer Science Dep., Courant Institute of Mathematical Sciences, New York Univ., New York, 1980.
