Martin Alt , Florian Martin, Generation of Efficient Interprocedural Analyzers with PAG, Proceedings of the Second International Symposium on Static Analysis, p.33-50, September 25-27, 1995
Rajeev Alur , P. Madhusudan, Adding nesting structure to words, Proceedings of the 10th international conference on Developments in Language Theory, June 26-29, 2006, Santa Barbara, CA[doi>10.1007/11779148_1]
APRON. 2007. APRON numerical abstract domain library. apron.cri.ensmp.fr.
ARMv7-A 2013. ARMv7-A in HOL. github.com/mn200/HOL/tree/master/examples/ARM/v7.
Uwe Assmann, Graph rewrite systems for program optimization, ACM Transactions on Programming Languages and Systems (TOPLAS), v.22 n.4, p.583-637, July 2000[doi>10.1145/363911.363914]
Gogul Balakrishnan , Thomas Reps, Wysinwyx: what you see is not what you execute, University of Wisconsin at Madison, Madison, WI, 2007
Balakrishnan, G. and Reps, T. 2004. Analyzing memory accesses in x86 executables. InProceedings of the International Conference on Compiler Construction (CC’04).5--23.
Gogul Balakrishnan , Thomas Reps, DIVINE: discovering variables in executables, Proceedings of the 8th international conference on Verification, model checking, and abstract interpretation, January 14-16, 2007, Nice, France
Gogul Balakrishnan , Thomas Reps, WYSINWYX: What you see is not what you eXecute, ACM Transactions on Programming Languages and Systems (TOPLAS), v.32 n.6, p.1-84, August 2010[doi>10.1145/1749608.1749612]
Gogul Balakrishnan , Radu Gruian , Thomas Reps , Tim Teitelbaum, CodeSurfer/x86—A platform for analyzing x86 executables, Proceedings of the 14th international conference on Compiler Construction, April 04-08, 2005, Edinburgh, UK[doi>10.1007/978-3-540-31985-6_19]
Nels E. Beckman , Aditya V. Nori , Sriram K. Rajamani , Robert J. Simmons, Proofs from tests, Proceedings of the 2008 international symposium on Software testing and analysis, July 20-24, 2008, Seattle, WA, USA[doi>10.1145/1390630.1390634]
Ahmed Bouajjani , Javier Esparza , Tayssir Touili, A generic approach to the static analysis of concurrent programs with procedures, Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.62-73, January 15-17, 2003, New Orleans, Louisiana, USA[doi>10.1145/604131.604137]
Brauer, J. and King, A. 2012. Transfer function synthesis without quantiffer elimination.Logic. Methods Comput. Sci. 8, 3.
Brauer, J., King, A., and Kowalewski, S. 2012. Abstract interpretation of microcontroller code: Intervals meet congruences.Sci. Comput. Program. 77. To appear.
David Brumley , Ivan Jager , Thanassis Avgerinos , Edward J. Schwartz, BAP: a binary analysis platform, Proceedings of the 23rd international conference on Computer aided verification, p.463-469, July 14-20, 2011, Snowbird, UT
Burstall, R. 1969. Proving properties of programs by structural induction.Comp. J. 12, 1, 41--48.
Cok, D. 2010. Safety in numbers. www.dtic.mil/dtic/tr/fulltext/u2/a532995.pdf.
Cook, T. A., Franzon, P. D., Harcourt, E. A., and Miller, T. K. 1993. System-level specification of instruction sets. InProceedings of the Design Automation Conference (DAC’93).
K. D. Cooper , K. Kennedy, Interprocedural side-effect analysis in linear time, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.57-66, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.53996]
Cousot, P. 2003. Verification by abstract interpretation. InProceedings of the International Symposium on Verification, Theory and Practice, Honoring Zohar Manna’s 64th Birthday. Lecture Notes in Computer Science, vol. 2772, Springer, 243--268.
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Patrick Cousot , Radhia Cousot, Systematic design of program analysis frameworks, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.269-282, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567778]
Patrick Cousot , Radhia Cousot, Temporal abstract interpretation, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.12-25, January 19-21, 2000, Boston, MA, USA[doi>10.1145/325694.325699]
Patrick Cousot , Nicolas Halbwachs, Automatic discovery of linear restraints among variables of a program, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.84-96, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512770]
Jack W. Davidson , Christopher W. Fraser, Code selection through object code optimization, ACM Transactions on Programming Languages and Systems (TOPLAS), v.6 n.4, p.505-526, Oct. 1984[doi>10.1145/1780.1783]
Leonardo De Moura , Nikolaj Bjørner, Z3: an efficient SMT solver, Proceedings of the Theory and practice of software, 14th international conference on Tools and algorithms for the construction and analysis of systems, March 29-April 06, 2008, Budapest, Hungary
Evan Driscoll , Aditya Thakur , Thomas Reps, OpenNWA: a nested-word automaton library, Proceedings of the 24th international conference on Computer Aided Verification, July 07-13, 2012, Berkeley, CA[doi>10.1007/978-3-642-31424-7_47]
Dullien, T. and Porst, S. 2009. REIL: A platform-independent intermediate representation of disassembled code for static code analysis. InProceedings of the CanSecWest Applied Security Conference.
Dutertre, B. and de Moura, L. 2006. Yices: An SMT solver. yices.csl.sri.com.
Matt Elder , Junghee Lim , Tushar Sharma , Tycho Andersen , Thomas Reps, Abstract domains of affine relations, Proceedings of the 18th international conference on Static analysis, p.198-215, September 14-16, 2011, Venice, Italy
Elder, M., Lim, J., Sharma, T., Andersen, T., and Reps, T. 2013. Abstract domains of affine relations. Tech. rep. TR-1777, Computer Science Department, University of Wisconsin, Madison, WI.
Jeanne Ferrante , Karl J. Ottenstein , Joe D. Warren, The program dependence graph and its use in optimization, ACM Transactions on Programming Languages and Systems (TOPLAS), v.9 n.3, p.319-349, July 1987[doi>10.1145/24039.24041]
Fox, A. 2003. Formal specification and verification of ARM6. InProceedings of the 16th International Conference on Theorem Proving in Higher Order Logics. Lecture Notes in Computer Science, vol. 2758, Springer, 25--40.
Fox, A. 2012. Directions in ISA specification. InProceedings of the International Conference on Interactive Theorem Proving.Lecture Notes in Computer Science, vol. 7406, Springer, 338--344.
Anthony Fox , Magnus O. Myreen, A trustworthy monadic formalization of the ARMv7 instruction set architecture, Proceedings of the First international conference on Interactive Theorem Proving, July 11-14, 2010, Edinburgh, UK[doi>10.1007/978-3-642-14052-5_18]
Patrice Godefroid , Nils Klarlund , Koushik Sen, DART: directed automated random testing, Proceedings of the 2005 ACM SIGPLAN conference on Programming language design and implementation, June 12-15, 2005, Chicago, IL, USA[doi>10.1145/1065010.1065036]
Susanne Graf , Hassen Saïdi, Construction of Abstract State Graphs with PVS, Proceedings of the 9th International Conference on Computer Aided Verification, p.72-83, June 22-25, 1997
Bhargav S. Gulavani , Thomas A. Henzinger , Yamini Kannan , Aditya V. Nori , Sriram K. Rajamani, SYNERGY: a new algorithm for property checking, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering, November 05-11, 2006, Portland, Oregon, USA[doi>10.1145/1181775.1181790]
Harcourt, E., Mauney, J., and Cook, T. 1994. Functional specification and simulation of instruction set architectures. InProceedings of the International Conference on Simulation and Hardware Description Languages.
IA32. 1999. Intel architecture software developer’s manual. developer.intel.com/design/pentiumii/manuals/243191.htm.
Intel. 2013a. Intel 64 and IA-32 architectures software developer’s manual, Vol. 2A: Instruction set reference, A-M. Intel. download.intel.com/design/processor/manuals/253666.pdf.
Intel. 2013b. Intel 64 and IA-32 architectures software developer’s manual, Vol. 2B: Instruction set reference, N-Z. Intel. download.intel.com/design/processor/manuals/253667.pdf.
Johnson, S. 1975. YACC: Yet another compiler-compiler. Tech. rep. 32, Bell Laboratories.
Neil D. Jones , Carsten K. Gomard , Peter Sestoft, Partial evaluation and automatic program generation, Prentice-Hall, Inc., Upper Saddle River, NJ, 1993
Neil D. Jones , Alan Mycroft, Data flow analysis of applicative programs using minimal function graphs, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.296-306, January 01, 1986, St. Petersburg Beach, Florida[doi>10.1145/512644.512672]
Neil D. Jones , Flemming Nielson, Abstract interpretation: a semantics-based tool for program analysis, Handbook of logic in computer science (vol. 4): semantic modelling, Oxford University Press, Oxford, 1995
Daniel Kästner, TDL: a hardware description language for retargetable postpass optimizations and analyses, Proceedings of the 2nd international conference on Generative programming and component engineering, p.18-36, September 22-25, 2003, Erfurt, Germany
Andy King , Harald Søndergaard, Automatic abstraction for congruences, Proceedings of the 11th international conference on Verification, Model Checking, and Abstract Interpretation, January 17-19, 2010, Madrid, Spain[doi>10.1007/978-3-642-11319-2_16]
John Kodumal , Alex Aiken, Banshee: a scalable constraint-based analysis toolkit, Proceedings of the 12th international conference on Static Analysis, September 07-09, 2005, London, UK[doi>10.1007/11547662_16]
David Lacey , Neil D. Jones , Eric Van Wyk , Carl Christian Frederiksen, Compiler Optimization Correctness by Temporal Logic, Higher-Order and Symbolic Computation, v.17 n.3, p.173-206, September 2004[doi>10.1023/B:LISP.0000029444.99264.c0]
Akash Lal , Thomas Reps, Improving pushdown system model checking, Proceedings of the 18th international conference on Computer Aided Verification, August 17-20, 2006, Seattle, WA[doi>10.1007/11817963_32]
Akash Lal , Thomas Reps , Gogul Balakrishnan, Extended weighted pushdown systems, Proceedings of the 17th international conference on Computer Aided Verification, July 06-10, 2005, Edinburgh, Scotland, UK[doi>10.1007/11513988_44]
Lam, P., Bodden, E., Lhotak, O., and Hendren, L. 2011. The SOOT framework for Java program analysis: A retrospective. InCetus Users and Compiler Infrastructure Workshop.
Chris Lattner , Vikram Adve, LLVM: A Compilation Framework for Lifelong Program Analysis & Transformation, Proceedings of the international symposium on Code generation and optimization: feedback-directed and runtime optimization, p.75, March 20-24, 2004, Palo Alto, California
Tal Lev-Ami , Shmuel Sagiv, TVLA: A System for Implementing Static Analyses, Proceedings of the 7th International Symposium on Static Analysis, p.280-301, June 29-July 01, 2000
Lim, J. 2011. Transformer specification language: A system for generating analyzers and its applications. Tech. rep. 1689, Computer Science Department, University of Wisconsin, Madison, WI.
Junghee Lim , Thomas Reps, A system for generating static analyzers for machine instructions, Proceedings of the Joint European Conferences on Theory and Practice of Software 17th international conference on Compiler construction, March 29-April 06, 2008, Budapest, Hungary
Lim, J. and Reps, T. 2010. BCE: Extracting botnet commands from bot executables. Tech. rep. TR-1668, Computer Science Department, University of Wisconsin, Madison, WI.
Junghee Lim , Akash Lal , Thomas Reps, Symbolic Analysis via Semantic Reinterpretation, Proceedings of the 16th International SPIN Workshop on Model Checking Software, June 26-28, 2009, Grenoble, France[doi>10.1007/978-3-642-02652-2_14]
Junghee Lim , Akash Lal , Thomas Reps, Symbolic analysis via semantic reinterpretation, International Journal on Software Tools for Technology Transfer (STTT), v.13 n.1, p.61-87, January 2011[doi>10.1007/s10009-010-0158-6]
Cullen Linn , Saumya Debray, Obfuscation of executable code to improve resistance to static disassembly, Proceedings of the 10th ACM conference on Computer and communications security, October 27-30, 2003, Washington D.C., USA[doi>10.1145/948109.948149]
Magnusson, P. 2011. Understanding stacks and registers in the Sparc architecture(s). web.archive.org/web/20110610161119/http://www.sics.se/ psm/sparcstack.html.
Malmkjær, K. 1993. Abstract interpretation of partial-evaluation algorithms. Ph.D. thesis, Department of Computer and Information Science, Kansas State University.
Lorenzo Martignoni , Stephen McCamant , Pongsin Poosankam , Dawn Song , Petros Maniatis, Path-exploration lifting: hi-fi tests for lo-fi emulators, Proceedings of the seventeenth international conference on Architectural Support for Programming Languages and Operating Systems, March 03-07, 2012, London, England, UK[doi>10.1145/2150976.2151012]
Laurent Mauborgne , Xavier Rival, Trace partitioning in abstract interpretation based static analyzers, Proceedings of the 14th European conference on Programming Languages and Systems, p.5-20, April 04-08, 2005, Edinburgh, UK[doi>10.1007/978-3-540-31987-0_2]
Antoine Miné, A Few Graph-Based Relational Numerical Abstract Domains, Proceedings of the 9th International Symposium on Static Analysis, p.117-132, September 17-20, 2002
Prabhat Mishra , Aviral Shrivastava , Nikil Dutt, Architecture description language (ADL)-driven software toolkit generation for architectural exploration of programmable SOCs, ACM Transactions on Design Automation of Electronic Systems (TODAES), v.11 n.3, p.626-658, July 2006[doi>10.1145/1142980.1142985]
Markus Müller-Olm , Helmut Seidl, Precise interprocedural analysis through linear algebra, Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.330-341, January 14-16, 2004, Venice, Italy[doi>10.1145/964001.964029]
Markus Müller-Olm , Helmut Seidl, Analysis of modular arithmetic, Proceedings of the 14th European conference on Programming Languages and Systems, p.46-60, April 04-08, 2005, Edinburgh, UK[doi>10.1007/978-3-540-31987-0_5]
Alan. Mycroft , Neil. D. Jones, A relational framework for abstract interpretation,  on Programs as data objects, p.156-171, April 1986, Copenhagen, Denmark
Magnus O. Myreen , Anthony C. J. Fox , Michael J. C. Gordon, Hoare logic for ARM machine code, Proceedings of the 2007 international conference on Fundamentals of software engineering, p.272-286, April 17-19, 2007, Tehran, Iran
F. Nielson, Two-level semantics and abstract interpretation, Theoretical Computer Science, v.69 n.2, p.117-242, Dec. 11, 1989[doi>10.1016/0304-3975(89)90091-1]
Flemming Nielson , Hanne Riis Nielson, Two-level functional languages, Cambridge University Press, New York, NY, 1992
Stefan Pees , Andreas Hoffmann , Vojin Zivojnovic , Heinrich Meyr, LISA—machine description language for cycle-accurate models of programmable DSP architectures, Proceedings of the 36th annual ACM/IEEE Design Automation Conference, p.933-938, June 21-25, 1999, New Orleans, Louisiana, USA[doi>10.1145/309847.310101]
Mikael Pettersson, A Term Pattern-Match Compiler Inspired by Finite Automata Theory, Proceedings of the 4th International Conference on Compiler Construction, p.258-270, October 05-07, 1992
Uwe F. Pleban , Peter Lee, High-Level Semantics: An Integrated Approach to Programming Language Semantics and the Specification of Implementations, Proceedings of the 3rd  Workshop on Mathematical Foundations of Programming Language Semantics, p.550-571, April 08-10, 1987
PowerPC32. 2005. The PowerPC user instruction set architecture. doi.ieeecs.org/10.1109/MM.1994.363069.
G. Ramalingam , John Field , Frank Tip, Aggregate structure identification and its application to program analysis, Proceedings of the 26th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.119-132, January 20-22, 1999, San Antonio, Texas, USA[doi>10.1145/292540.292553]
Ramsey, N. and Davidson, J. 1999. Specifying instructions’ semantics usingλ-RTL. http://www.cs.tufts.edu/~nr/pubs/lrtl-tr.pdf
Norman Ramsey , Mary F. Fernández, Specifying representations of machine instructions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.3, p.492-524, May 1997[doi>10.1145/256167.256225]
John Regehr , Alastair Reid, HOIST: a system for automatically deriving static analyzers for embedded systems, Proceedings of the 11th international conference on Architectural support for programming languages and operating systems, October 07-13, 2004, Boston, MA, USA[doi>10.1145/1024393.1024410]
Thomas Reps , Gogul Balakrishnan , Junghee Lim, Intermediate-representation recovery from low-level code, Proceedings of the 2006 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, January 09-10, 2006, Charleston, South Carolina[doi>10.1145/1111542.1111560]
Thomas Reps , Junghee Lim , Aditya Thakur , Gogul Balakrishnan , Akash Lal, There's plenty of room at the bottom: analyzing and verifying machine code, Proceedings of the 22nd international conference on Computer Aided Verification, July 15-19, 2010, Edinburgh, UK[doi>10.1007/978-3-642-14295-6_6]
Thomas Reps , Mooly Sagiv , Alexey Loginov, Finite differencing of logical formulas for static analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.32 n.6, p.1-55, August 2010[doi>10.1145/1749608.1749613]
Reps, T., Sagiv, M., and Yorsh, G. 2004. Symbolic implementation of the best transformer. InProceedings of the International Conference on Verification, Model Checking, and Abstract Interpretation (VMCAI’04).Lecture Notes in Computer Science, vol. 4349, Springer, 252--266.
Thomas Reps , Stefan Schwoon , Somesh Jha , David Melski, Weighted pushdown systems and their application to interprocedural dataflow analysis, Science of Computer Programming, v.58 n.1-2, p.206-263, October 2005[doi>10.1016/j.scico.2005.02.009]
Erika Rice Scherpelz , Sorin Lerner , Craig Chambers, Automatic inference of optimizer flow functions from semantic meanings, Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation, June 10-13, 2007, San Diego, California, USA[doi>10.1145/1250734.1250750]
Schmidt, D. 1986.Denotational Semantics. Allyn and Bacon, Boston, MA.
David A. Schmidt, Data flow analysis is model checking of abstract interpretations, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.38-48, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268950]
Sharir, M. and Pnueli, A. 1981. Two approaches to interprocedural dataflow analysis. InProgram Flow Analysis: Theory and Applications. Prentice-Hall.
Daniel P. Siewiorek , G. Bell , A. C. Newell, Computer Structures: Principles and Examples, McGraw-Hill, Inc., New York, NY, 1982
Dawn Song , David Brumley , Heng Yin , Juan Caballero , Ivan Jager , Min Gyung Kang , Zhenkai Liang , James Newsome , Pongsin Poosankam , Prateek Saxena, BitBlaze: A New Approach to Computer Security via Binary Analysis, Proceedings of the 4th International Conference on Information Systems Security, December 16-20, 2008, Hyderabad, India[doi>10.1007/978-3-540-89862-7_1]
SOOT. 2012. SOOT: A Java optimization framework. www.sable.mcgill.ca/soot/.
Bernhard Steffen, Data Flow Analysis as Model Checking, Proceedings of the International Conference on Theoretical Aspects of Computer Software, p.346-365, September 24-27, 1991
Bernhard Steffen, Generating data flow analysis algorithms from modal specifications, Science of Computer Programming, v.21 n.2, p.115-139, Oct. 1993[doi>10.1016/0167-6423(93)90003-8]
Aditya Thakur , Thomas Reps, A method for symbolic computation of abstract operations, Proceedings of the 24th international conference on Computer Aided Verification, July 07-13, 2012, Berkeley, CA[doi>10.1007/978-3-642-31424-7_17]
Aditya Thakur , Matt Elder , Thomas Reps, Bilateral algorithms for symbolic abstraction, Proceedings of the 19th international conference on Static Analysis, September 11-13, 2012, Deauville, France[doi>10.1007/978-3-642-33125-1_10]
Aditya Thakur , Junghee Lim , Akash Lal , Amanda Burton , Evan Driscoll , Matt Elder , Tycho Andersen , Thomas Reps, Directed proof generation for machine code, Proceedings of the 22nd international conference on Computer Aided Verification, July 15-19, 2010, Edinburgh, UK[doi>10.1007/978-3-642-14295-6_27]
Steven W. K. Tjiang , John L. Hennessy, Sharlit—a tool for building optimizers, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.82-93, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143120]
G. A. Venkatesh, A framework for construction and evaluation of high-level specifications for program analysis techniques, Proceedings of the ACM SIGPLAN 1989 Conference on Programming language design and implementation, p.1-12, June 19-23, 1989, Portland, Oregon, USA[doi>10.1145/73141.74819]
G. A. Venkatesh , Charles N. Fischer, SPARE: A Development Environment for Program Analysis Algorithms, IEEE Transactions on Software Engineering, v.18 n.4, p.304-318, April 1992[doi>10.1109/32.129219]
Wadler, P. 1987. InThe Implementation of Functional Programming Languages. Prentice-Hall, Englewood Cliffs, NJ, 78--103.
WALA. 2006 WALA. wala.sourceforge.net/wiki/index.php/.
WALi 2007. WALi: The weighted automaton library. www.cs.wisc.edu/wpis/wpds/download.php.
John Whaley , Dzintars Avots , Michael Carbin , Monica S. Lam, Using datalog with binary decision diagrams for program analysis, Proceedings of the Third Asian conference on Programming Languages and Systems, November 02-05, 2005, Tsukuba, Japan[doi>10.1007/11575467_8]
Wilhelm, R. 1981. Global flow analysis and optimization in the MUG2 compiler generating system. InProgram Flow Analysis: Theory and Applications. Prentice-Hall.
Robert P. Wilson , Robert S. French , Christopher S. Wilson , Saman P. Amarasinghe , Jennifer M. Anderson , Steve W. K. Tjiang , Shih-Wei Liao , Chau-Wen Tseng , Mary W. Hall , Monica S. Lam , John L. Hennessy, SUIF: an infrastructure for research on parallelizing and optimizing compilers, ACM SIGPLAN Notices, v.29 n.12, p.31-37, Dec. 1994[doi>10.1145/193209.193217]
WPDS++ 2004. WPDS++: A C++ library for weighted pushdown systems. www.cs.wisc.edu/wpis/wpds/download.php.
Kwangkeun Yi , Williams Ludwell Harrison, III, Automatic generation and management of interprocedural program analyses, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.246-259, March 1993, Charleston, South Carolina, USA[doi>10.1145/158511.158642]
