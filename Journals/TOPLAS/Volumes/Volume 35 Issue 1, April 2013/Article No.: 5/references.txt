Andersen, L. O. 1994. Program analysis and specialization for the C programming language. Ph.D. dissertation. DIKU, University of Copenhagen.
Walter Chang , Brandon Streiff , Calvin Lin, Efficient and extensible security enforcement using dynamic data flow analysis, Proceedings of the 15th ACM conference on Computer and communications security, October 27-31, 2008, Alexandria, Virginia, USA[doi>10.1145/1455770.1455778]
David R. Chase , Mark Wegman , F. Kenneth Zadeck, Analysis of pointers and structures, Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation, p.296-310, June 1990, White Plains, New York, USA[doi>10.1145/93542.93585]
Ramkrishna Chatterjee , Barbara G. Ryder , William A. Landi, Relevant context inference, Proceedings of the 26th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.133-146, January 20-22, 1999, San Antonio, Texas, USA[doi>10.1145/292540.292554]
Jong-Deok Choi , Michael Burke , Paul Carini, Efficient flow-sensitive interprocedural computation of pointer-induced aliases and side effects, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.232-245, March 1993, Charleston, South Carolina, USA[doi>10.1145/158511.158639]
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
Manuel Fähndrich , Jeffrey S. Foster , Zhendong Su , Alexander Aiken, Partial online cycle elimination in inclusion constraint graphs, ACM SIGPLAN Notices, v.33 n.5, p.85-96, May 1998[doi>10.1145/277652.277667]
Stephen J. Fink , Eran Yahav , Nurit Dor , G. Ramalingam , Emmanuel Geay, Effective typestate verification in the presence of aliasing, ACM Transactions on Software Engineering and Methodology (TOSEM), v.17 n.2, p.1-34, April 2008[doi>10.1145/1348250.1348255]
Deepak Goyal, Transformational Derivation of an Improved Alias Analysis Algorithm, Higher-Order and Symbolic Computation, v.18 n.1-2, p.15-49, June      2005[doi>10.1007/s10990-005-7005-6]
Tobias Gutzmann , Jonas Lundberg , Welf Lowe, Towards Path-Sensitive Points-to Analysis, Proceedings of the Seventh IEEE International Working Conference on Source Code Analysis and Manipulation, p.59-68, September 30-October 01, 2007[doi>10.1109/SCAM.2007.33]
Samuel Z. Guyer , Calvin Lin, Error checking with client-driven pointer analysis, Science of Computer Programming, v.58 n.1-2, p.83-114, October 2005[doi>10.1016/j.scico.2005.02.005]
Ben Hardekopf , Calvin Lin, The ant and the grasshopper: fast and accurate pointer analysis for millions of lines of code, Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation, June 10-13, 2007, San Diego, California, USA[doi>10.1145/1250734.1250767]
Ben Hardekopf , Calvin Lin, Semi-sparse flow-sensitive pointer analysis, Proceedings of the 36th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 21-23, 2009, Savannah, GA, USA[doi>10.1145/1480881.1480911]
Ben Hardekopf , Calvin Lin, Flow-sensitive pointer analysis for millions of lines of code, Proceedings of the 9th Annual IEEE/ACM International Symposium on Code Generation and Optimization, p.289-298, April 02-06, 2011
Rebecca Hasti , Susan Horwitz, Using static single assignment form to improve flow-insensitive pointer analysis, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.97-105, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277668]
Nevin Heintze , Olivier Tardieu, Ultra-fast aliasing analysis using CLA: a million lines of C code in a second, Proceedings of the ACM SIGPLAN 2001 conference on Programming language design and implementation, p.254-263, June 2001, Snowbird, Utah, USA[doi>10.1145/378795.378855]
Michael Hind, Pointer analysis: haven't we solved this problem yet?, Proceedings of the 2001 ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering, p.54-61, June 2001, Snowbird, Utah, USA[doi>10.1145/379605.379665]
Michael Hind , Michael Burke , Paul Carini , Jong-Deok Choi, Interprocedural pointer alias analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.4, p.848-894, July 1999[doi>10.1145/325478.325519]
Michael Hind , Anthony Pioli, Assessing the Effects of Flow-Sensitivity on Pointer Alias Analyses, Proceedings of the 5th International Symposium on Static Analysis, p.57-81, September 14-16, 1998
Michael Hind , Anthony Pioli, Which pointer analysis should I use?, Proceedings of the 2000 ACM SIGSOFT international symposium on Software testing and analysis, p.113-123, August 21-24, 2000, Portland, Oregon, USA[doi>10.1145/347324.348916]
Vineet Kahlon, Bootstrapping: a technique for scalable flow and context-sensitive pointer alias analysis, Proceedings of the 2008 ACM SIGPLAN conference on Programming language design and implementation, June 07-13, 2008, Tucson, AZ, USA[doi>10.1145/1375581.1375613]
William Landi , Barbara G. Ryder, A safe approximate algorithm for interprocedural aliasing, ACM SIGPLAN Notices, v.27 n.7, p.235-248, July 1992[doi>10.1145/143103.143137]
Ondrej Lhotak, Program analysis using binary decision diagrams, McGill University, Montreal, Que., Canada, 2006
Ondrej Lhoták , Kwok-Chiang Andrew Chung, Points-to analysis with efficient strong updates, Proceedings of the 38th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 26-28, 2011, Austin, Texas, USA[doi>10.1145/1926385.1926389]
Ondřej Lhoták , Laurie Hendren, Context-Sensitive points-to analysis: is it worth it?, Proceedings of the 15th international conference on Compiler Construction, March 30-31, 2006, Vienna, Austria[doi>10.1007/11688839_5]
Ondřej Lhoták , Laurie Hendren, Evaluating the benefits of context-sensitive points-to analysis using a BDD-based implementation, ACM Transactions on Software Engineering and Methodology (TOSEM), v.18 n.1, p.1-53, September 2008[doi>10.1145/1391984.1391987]
Lindenmaier, G., Beck, M., Boesler, B., and Geiß, R. 2005. Firm, an intermediate language for compiler research. Tech. rep. 2005-8, University of Karlsruhe.
Lundberg, J. and Lowe, W. 2007. A scalable flow-sensitive points-to analysis. InCompiler Construction Advances and Applications, Festschrift on the Occasion of the Retirement of Prof. Dr. H. C. Gerhard Goos.Springer. http://w3.msi.vxu.se/_jonasl/goos07.pdf.
Pearce, D. J. 2005. Some directed graph algorithms and their application to pointer analysis. Ph.D. dissertation, University of London.
David J. Pearce , Paul H.J. Kelly , Chris Hankin, Efficient field-sensitive pointer analysis of C, ACM Transactions on Programming Languages and Systems (TOPLAS), v.30 n.1, p.4-es, November 2007[doi>10.1145/1290520.1290524]
Aoun Raza , Gunther Vogel , Erhard Plödereder, Bauhaus: a tool suite for program analysis and reverse engineering, Proceedings of the 11th Ada-Europe international conference on Reliable Software Technologies, June 05-09, 2006, Porto, Portugal[doi>10.1007/11767077_6]
Thomas Reps , Susan Horwitz , Mooly Sagiv, Precise interprocedural dataflow analysis via graph reachability, Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.49-61, January 23-25, 1995, San Francisco, California, USA[doi>10.1145/199448.199462]
Atanas Rountev , Ana Milanova , Barbara G. Ryder, Points-to analysis for Java using annotated constraints, ACM SIGPLAN Notices, v.36 n.11, p.43-55, 11/01/2001[doi>10.1145/504311.504286]
Erik Ruf, Context-insensitive alias analysis reconsidered, Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation, p.13-22, June 18-21, 1995, La Jolla, California, USA[doi>10.1145/207110.207112]
Barbara G. Ryder, Dimensions of precision in reference analysis of object-oriented programming languages, Proceedings of the 12th international conference on Compiler construction, April 07-11, 2003, Warsaw, Poland
Alexandru Salcianu , Martin Rinard, Pointer and escape analysis for multithreaded programs, Proceedings of the eighth ACM SIGPLAN symposium on Principles and practices of parallel programming, p.12-23, June 2001, Snowbird, Utah, USA[doi>10.1145/379539.379553]
Marc Shapiro , Susan Horwitz, Fast and accurate flow-insensitive points-to analysis, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.1-14, January 15-17, 1997, Paris, France[doi>10.1145/263699.263703]
Staiger-Stöhr, S. 2009. Kombinierte Statische Ermittlung von Zeigerzielen, Kontroll- und Datenfluss. Ph.D. dissertation, University of Stuttgart.
Bjarne Steensgaard, Points-to analysis in almost linear time, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.32-41, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237727]
Yulei Sui , Sen Ye , Jingling Xue , Pen-Chung Yew, SPAS: scalable path-sensitive pointer analysis on full-sparse SSA, Proceedings of the 9th Asian conference on Programming Languages and Systems, December 05-07, 2011, Kenting, Taiwan[doi>10.1007/978-3-642-25318-8_14]
Tarjan, R. E. 1972. Depth-first search and linear graph algorithms.SIAM J. Comput. 1, 2, 146--160.
Teck Bok Tok , Calvin Lin, Removing unimportant computations in interprocedural program analysis, University of Texas at Austin, Austin, TX, 2007
Teck Bok Tok , Samuel Z. Guyer , Calvin Lin, Efficient flow-sensitive interprocedural data-flow analysis in the presence of pointers, Proceedings of the 15th international conference on Compiler Construction, March 30-31, 2006, Vienna, Austria[doi>10.1007/11688839_3]
John Whaley , Monica Lam, Context-sensitive pointer analysis using binary decision diagrams, Stanford University, Stanford, CA, 2007
John Whaley , Monica S. Lam, An Efficient Inclusion-Based Points-To Analysis for Strictly-Typed Languages, Proceedings of the 9th International Symposium on Static Analysis, p.180-195, September 17-20, 2002
Robert Paul Wilson , Monica S. Lam, Efficient, context-sensitive pointer analysis for c programs, Stanford University, Stanford, CA, 1998
Hongtao Yu , Jingling Xue , Wei Huo , Xiaobing Feng , Zhaoqing Zhang, Level by level: making flow- and context-sensitive pointer analysis scalable for millions of lines of code, Proceedings of the 8th annual IEEE/ACM international symposium on Code generation and optimization, April 24-28, 2010, Toronto, Ontario, Canada[doi>10.1145/1772954.1772985]
Jianwen Zhu, Towards scalable flow and context sensitive pointer analysis, Proceedings of the 42nd annual Design Automation Conference, June 13-17, 2005, Anaheim, California, USA[doi>10.1145/1065579.1065798]
