Torben Amtoft, Unfold/fold Transformations Preserving Termination Properties, Proceedings of the 4th International Symposium on Programming Language Implementation and Logic Programming, p.187-201, August 26-28, 1992
K R Apt , D C Kozen, Limits for automatic verification of finite-state concurrent systems, Information Processing Letters, v.22 n.6, p.307-309, May 30,1986[doi>10.1016/0020-0190(86)90071-2]
Aravindan, C. and Dung, P. 1995. On the correctness of unfold/fold transformations of normal and extended logic programs. J. Logic Prog. 24, 3, 295--322.
N. Bensaou , I. Guessarian, Transforming constraint logic programs, Theoretical Computer Science, v.206 n.1-2, p.81-125, Oct. 6, 1998[doi>10.1016/S0304-3975(97)00077-7]
Annalisa Bossi , Nicoletta Cocco, Preserving Universal Termination through Unfold/Fold, Proceedings of the 4th International Conference on Algebraic and Logic Programming, p.269-286, September 14-16, 1994
A. Bossi , N. Cocco , S. Dulli, A method for specializing logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.2, p.253-302, April 1990[doi>10.1145/78942.78947]
Annalisa Bossi , Nicoletta Cocco , Sandro Etalle, On Safe Folding, Proceedings of the 4th International Symposium on Programming Language Implementation and Logic Programming, p.172-186, August 26-28, 1992
Bossi, A., Cocco, N., and Etalle, S. 1996. Simultaneous replacement in normal programs. J. Logic Computation 6, 1 (February), 79--120.
Dmitri Boulanger , Maurice Bruynooghe, Deriving fold/unfold transformations of logic programs using extended OLDT-based abstract interpretation, Journal of Symbolic Computation, v.15 n.5-6, p.495-521, May/June 1993[doi>10.1016/S0747-7171(06)80003-9]
Robert S. Boyer , J. Strother Moore, Proving Theorems about LISP Functions, Journal of the ACM (JACM), v.22 n.1, p.129-144, Jan. 1975[doi>10.1145/321864.321875]
Robert S. Boyer , J. Strother Moore, A Theorem Prover for a Computational Logic, Proceedings of the 10th International Conference on Automated Deduction, p.1-15, July 24-27, 1990
Alan Bundy , Frank van Harmelen , Christian Horn , Alan Smaill, The Oyster-Clam System, Proceedings of the 10th International Conference on Automated Deduction, p.647-648, July 24-27, 1990
R. M. Burstall , John Darlington, A Transformation System for Developing Recursive Programs, Journal of the ACM (JACM), v.24 n.1, p.44-67, Jan. 1977[doi>10.1145/321992.321996]
Weidong Chen , David S. Warren, Tabled evaluation with delaying for general logic programs, Journal of the ACM (JACM), v.43 n.1, p.20-74, Jan. 1996[doi>10.1145/227595.227597]
Edmund M. Clarke, Jr. , Orna Grumberg , Doron A. Peled, Model checking, MIT Press, Cambridge, MA, 2000
Hubert Comon , Robert Nieuwenhuis, Induction = I-axiomatization + first-order consistency, Information and Computation, v.159 n.1-2, p.151-186, May 25/June 25 2000[doi>10.1006/inco.2000.2875]
Das, S. K. 1992. Deductive Databases and Logic Programming. Addison-Wesley, Boston, USA.
De Schreye, D., Gluck, R., Jorgensen, J., Leuschel, M., Martens, B., and Sorensen, M. 1999. Conjunctive partial deduction: Foundations, control, algorithms, and experiments. J. Logic Prog. 41, 233--277.
Sandro Etalle , Maurizio Gabbrielli, Transformations of CLP modules, Theoretical Computer Science, v.166 n.1-2, p.101-146, Oct. 20, 1996[doi>10.1016/0304-3975(95)00148-4]
Sandro Etalle , Maurizio Gabbrielli , Maria Chiara Meo, Transformations of CCP programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.23 n.3, p.304-395, May 2001[doi>10.1145/503502.503504]
Francesco, N. D. and Santone, A. 1998. A transformation system for concurrent processes. Acta Informatica 35, 12, 1037--1073.
Manolis Gergatsoulis , Maria Katzouraki, Unfold/Fold Transformations For Definite Clause Programs, Proceedings of the 6th International Symposium on Programming Language Implementation and Logic Programming, p.340-354, September 14-16, 1994
J. Hsiang , Mandayam Srivas, Automatic inductive theorem proving using PROLOG, Theoretical Computer Science, v.54 n.1, p.3-28, 1987[doi>10.1016/0304-3975(87)90016-8]
Neil D. Jones , Carsten K. Gomard , Peter Sestoft, Partial evaluation and automatic program generation, Prentice-Hall, Inc., Upper Saddle River, NJ, 1993
Tadashi Kanamori , Hiroshi Fujita, Formulation of Induction Formulas in Verification of Prolog Programs, Proceedings of the 8th International Conference on Automated Deduction, p.281-299, July 27-August 01, 1986
Kanamori, T. and Fujita, H. 1987. Unfold/fold transformation of logic programs with counters. In USA-Japan Seminar on Logics of Programs, Also available as ICOT Technical Report.
T. Kawamura , T. Kanamori, Preservation of stronger equivalence in unfold/fold logic program transformation, Theoretical Computer Science, v.75 n.1-2, p.139-156, Sep. 1990[doi>10.1016/0304-3975(90)90065-P]
H. Jan Komorowski, Partial evaluation as a means for inferencing data structures in an applicative language: a theory and implementation in the case of prolog, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.255-267, January 25-27, 1982, Albuquerque, New Mexico[doi>10.1145/582153.582181]
L Kott, Unfold/fold program transformations, Algebraic methods in semantics, Cambridge University Press, New York, NY, 1986
John Wylie Lloyd, Foundations of Logic Programming, Springer-Verlag New York, Inc., Secaucus, NJ, 1993
Maher, M. 1987. Correctness of a logic program transformation system. Tech. rep., IBM T.J. Watson Research Center.
Michael J. Maher, A transformation system for deductive database modules with perfect model semantics, Theoretical Computer Science, v.110 n.2, p.377-403, March 29, 1993[doi>10.1016/0304-3975(93)90013-J]
Pettorossi, A. and Proietti, M. 1998. Transformation of logic programs. Handbook of Logic in Artificial Intelligence, vol. 5. Oxford University Press, UK, 697--787.
Pettorossi, A. and Proietti, M. 1999. Synthesis and transformation of logic programs using unfold/fold proofs. J. Logic Prog. 41, 2--3, 197--230.
Pettorossi, A. and Proietti, M. 2000. Perfect model checking via unfold/fold transformations. In Computational Logic. LNCS, vol. 1861. Springer Verlag, Germany.
Alberto Pettorossi , Maurizio Proietti , Sophie Renault, Reducing nondeterminism while specializing logic programs, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.414-427, January 15-17, 1997, Paris, France[doi>10.1145/263699.263759]
Abhik Roychoudhury , I. V. Ramakrishnan, Program transformations for verifying parameterized systems, State University of New York at Stony Brook, Stony Brook, NY, 2000
Roychoudhury, A., Narayan Kumar, K., Ramakrishnan, C. R., and Ramakrishnan, I. V. 2002. Beyond Tamaki-Sato style unfold/fold transformations for normal logic programs. Int. J. Found. Comput. Sci. 13, 3, 387--403.
Roychoudhury, A., Narayan Kumar, K., Ramakrishnan, C. R., Ramakrishnan, I. V., and Smolka, S. A. 2000. Verification of parameterized systems using logic program transformations. In International Conference on Tools and Algorithms for Construction and Analysis of Systems (TACAS). LNCS, vol. 1785. Springer-Verlag, Germany, 172--187.
Roychoudhury, A. and Ramakrishnan, I. V. 2001. Automated inductive verification of parameterized protocols. In International Conference on Computer Aided Verification (CAV). LNCS, vol. 2102. Springer-Verlag, Germany, 25--37.
David Sands, Total correctness by local improvement in the transformation of functional programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.18 n.2, p.175-234, March 1996[doi>10.1145/227699.227716]
Taisuke Sato, Equivalence-preserving first-order unfold/fold transformation systems, Theoretical Computer Science, v.105 n.1, p.57-84, Oct. 26, 1992[doi>10.1016/0304-3975(92)90287-P]
Hiroshisa Seki, Unfold/fold transformation of stratified programs, Theoretical Computer Science, v.86 n.1, p.107-139, Aug. 18, 1991[doi>10.1016/0304-3975(91)90007-O]
Seki, H. 1993. Unfold/fold transformation of general logic programs for well-founded semantics. J. Logic Prog. 16, 1, 5--23.
Tamaki, H. and Sato, T. 1984. Unfold/fold transformations of logic programs. In Proceedings of International Conference on Logic Programming. 127--138.
Tamaki, H. and Sato, T. 1986a. A generalized correctness proof of the unfold/ fold logic program transformation. Tech. rep., Ibaraki University, Japan.
Hisao Tamaki , Taisuke Sato, OLD resolution with tabulation, Proceedings on Third international conference on logic programming, p.84-98, September 1986, London, United Kingdom
