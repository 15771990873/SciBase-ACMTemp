Albert, E., Alpuente, M., Falaschi, M., Julián, P., and Vidal, G. 1998. Improving control in functional logic program specialization. In Static Analysis. Proceedings of SAS'98, G. Levi, Ed. LNCS 1503. Springer-Verlag, Pisa, Italy, 262--277.
María Alpuente , Moreno Falaschi , Germán Vidal, Partial evaluation of functional logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.4, p.768-844, July 1998[doi>10.1145/291891.291896]
Krzysztof R. Apt, Logic programming, Handbook of theoretical computer science (vol. B): formal models and semantics, MIT Press, Cambridge, MA, 1991
Benkerimi, K. and Hill, P. M. 1993. Supporting transformations for the partial evaluation of logic programs. J. Logic Comput. 3, 5 (October), 469--486.
Bol, R. 1993. Loop checking in partial deduction. J. Logic Prog. 16, 1&2, 25--46.
Dmitri Boulanger , Maurice Bruynooghe, Deriving fold/unfold transformations of logic programs using extended OLDT-based abstract interpretation, Journal of Symbolic Computation, v.15 n.5-6, p.495-521, May/June 1993[doi>10.1016/S0747-7171(06)80003-9]
Maurice Bruynooghe, A practical framework for the abstract interpretation of logic programs, Journal of Logic Programming, v.10 n.2, p.91-124, Feb. 1991[doi>10.1016/0743-1066(91)80001-T]
Bruynooghe, M., De Schreye, D., and Martens, B. 1992. A general criterion for avoiding infinite unfolding during partial deduction. New Generation Computing 11, 1, 47--79.
R. M. Burstall , John Darlington, A Transformation System for Developing Recursive Programs, Journal of the ACM (JACM), v.24 n.1, p.44-67, Jan. 1977[doi>10.1145/321992.321996]
Wei-Ngan Chin , Siau-Cheng Khoo, Tupling Functions with Multiple Recursion Parameters, Proceedings of the Third International Workshop on Static Analysis, p.124-140, September 22-24, 1993
Edmund M. Clarke, Jr. , Orna Grumberg , Doron A. Peled, Model checking, MIT Press, Cambridge, MA, 2000
Marco Comini , Maria Chiara Meo, Compositionality properties of SLD-derivations, Theoretical Computer Science, v.211 n.1-2, p.275-309, Jan. 28, 1999[doi>10.1016/S0304-3975(97)00174-6]
Charles Consel , Olivier Danvy, Tutorial notes on partial evaluation, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.493-501, March 1993, Charleston, South Carolina, USA[doi>10.1145/158511.158707]
Charles Consel , Siau Cheng Khoo, Parameterized partial evaluation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.15 n.3, p.463-493, July 1993[doi>10.1145/169683.174155]
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Patrick Cousot , Rahida Cousot, Abstract interpretation and application to logic programs, Journal of Logic Programming, v.13 n.2-3, p.103-179, July 1992[doi>10.1016/0743-1066(92)90030-7]
De Schreye, D. and Decorte, S. 1994. Termination of logic programs: The never ending story. J. Logic Prog. 19 & 20, 199--260.
De Schreye, D., Glück, R., Jørgensen, J., Leuschel, M., Martens, B., and Sørensen, M. H. 1999. Conjunctive partial deduction: Foundations, control, algorithms and experiments. J. Logic Prog. 41, 2 & 3 (November), 231--277.
de Waal, D. A. and Gallagher, J. 1991. Specialisation of a unification algorithm. In Logic Program Synthesis and Transformation. Proceedings of LOPSTR'91, T. Clement and K.-K. Lau, Eds. Manchester, UK, 205--220.
D. Andre de Waal , John P. Gallagher, The Applicability of Logic Program Analysis and Transformation to Theorem Proving, Proceedings of the 12th International Conference on Automated Deduction, p.207-221, June 26-July 01, 1994
Doets, K. 1993. Levationis laus. J. Logic Comput. 3, 5, 487--516.
Yoshihiko Futamura , Kenroku Nogi , Akihiko Takano, Essence of generalized partial computation, Theoretical Computer Science, v.90 n.1, p.61-79, Nov. 1991[doi>10.1016/0304-3975(91)90299-H]
Gallagher, J. 1991. A system for specialising logic programs. Technical Report TR-91-32, University of Bristol. November.
J. P. Gallagher, Tutorial on specialisation of logic programs, Proceedings of the 1993 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.88-98, June 14-16, 1993, Copenhagen, Denmark[doi>10.1145/154630.154640]
Gallagher, J. and Bruynooghe, M. 1990. Some low-level transformations for logic programs. In Proceedings of Meta90 Workshop on Meta Programming in Logic, M. Bruynooghe, Ed. Leuven, Belgium, 229--244.
Gallagher, J. and Bruynooghe, M. 1991. The derivation of an algorithm for program specialisation. New Generation Computing 9, 3 & 4, 305--333.
Gallagher, J. and de Waal, D. A. 1992. Deletion of redundant unary type predicates from logic programs. In Logic Program Synthesis and Transformation. Proceedings of LOPSTR'92, K.-K. Lau and T. Clement, Eds. Manchester, UK, 151--167.
J. P. Gallagher , D. A. de Waal, Fast and precise regular approximations of logic programs, Proceedings of the eleventh international conference on Logic programming, p.599-613, August 1994
John P. Gallagher , Laura Lafave, Regular Approximation of Computation Paths in Logic and Functional Languages, Selected Papers from the Internaltional Seminar on Partial Evaluation, p.115-136, February 12-16, 1996
John P. Gallagher , Julio C. Peralta, Using regular approximations for generalisation during partial evalution, Proceedings of the 2000 ACM SIGPLAN workshop on Partial evaluation and semantics-based program manipulation, p.44-51, January 22-23, 2000, Boston, Massachusetts, USA[doi>10.1145/328690.328698]
John P. Gallagher , Julio C. Peralta, Regular Tree Languages as an Abstract Domain in Program Specialisation, Higher-Order and Symbolic Computation, v.14 n.2-3, p.143-172, September 2001[doi>10.1023/A:1012936614361]
John P. Gallagher , German Puebla, Abstract Interpretation over Non-deterministic Finite Tree Automata for Set-Based Analysis of Logic Programs, Proceedings of the 4th International Symposium on Practical Aspects of Declarative Languages, p.243-261, January 19-20, 2002
Robert Glück , Jesper Jørgensen , Bern Martens , Morten Heine Sørensen, Controlling Conjunctive Partial Deduction, Proceedings of the 8th International Symposium on Programming Languages: Implementations, Logics, and Programs, p.152-166, September 24-27, 1996
Robert Glück , Morten Heine Sørensen, Partial Deduction and Driving are Equivalent, Proceedings of the 6th International Symposium on Programming Language Implementation and Logic Programming, p.165-181, September 14-16, 1994
M. V. Hermenegildo , R. Warren , S. K. Debray, Global flow analysis as a practical compilation tool, Journal of Logic Programming, v.13 n.4, p.349-366, Aug. 1992[doi>10.1016/0743-1066(92)90053-6]
Gérard Huet, Confluent Reductions: Abstract Properties and Applications to Term Rewriting Systems: Abstract Properties and Applications to Term Rewriting Systems, Journal of the ACM (JACM), v.27 n.4, p.797-821, Oct. 1980[doi>10.1145/322217.322230]
Hughes, J. 1999. A type specialisation tutorial. In Partial Evaluation: Practice and Theory, J. Hatcliff, T. Æ. Mogensen, and P. Thiemann, Eds. LNCS 1706. Springer-Verlag, Copenhagen, Denmark, 293--325.
G. Janssens , M. Bruynooghe, Deriving descriptions of possible values of program variables by means of abstract interpretation, Journal of Logic Programming, v.13 n.2-3, p.205-258, July 1992[doi>10.1016/0743-1066(92)90032-X]
Neil D. Jones, An introduction to partial evaluation, ACM Computing Surveys (CSUR), v.28 n.3, p.480-503, Sept. 1996[doi>10.1145/243439.243447]
Neil D. Jones, Combining Abstract Interpretation and Partial Evaluation (Brief Overview), Proceedings of the 4th International Symposium on Static Analysis, p.396-405, September 08-10, 1997
Jones, N. D. 1999. The essence of program transformation by partial evaluation and driving. In Proceedings of the Third International Ershov Conference on Perspectives of System Informatics. LNCS 1755. Springer-Verlag, Novosibirsk, Russia, 62--79.
Neil D. Jones , Carsten K. Gomard , Peter Sestoft, Partial evaluation and automatic program generation, Prentice-Hall, Inc., Upper Saddle River, NJ, 1993
Jones, N. D. and Søndergaard, H. 1987. A semantics-based framework for the abstract interpretation of Prolog. In Abstract Interpretation of Declarative Languages, S. Abramski and C. Hankin, Eds. Ellis-Horwood, Chapter 6, 124--142.
Ko, H.-P. and Nadel, M. E. 1991. Substitution and refutation revisited. In Logic Programming: Proceedings of the Eighth International Conference, K. Furukawa, Ed. MIT Press, 679--692.
H. Jan Komorowski, Partial evaluation as a means for inferencing data structures in an applicative language: a theory and implementation in the case of prolog, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.255-267, January 25-27, 1982, Albuquerque, New Mexico[doi>10.1145/582153.582181]
Henryk Jan Komorowski, An Introduction to Partial Deduction, Proceedings of the 3rd International Workshop on Meta-Programming in Logic, p.49-69, June 10-12, 1992
Lafave, L. and Gallagher, J. 1997. Constraint-based partial evaluation of rewriting-based functional logic programs. In Logic Program Synthesis and Transformation. Proceedings of LOPSTR'97, N. Fuchs, Ed. LNCS 1463. Leuven, Belgium, 168--188.
J.-L. Lassez , M. J. Maher , K. Marriott, Unification revisited, Foundations of deductive databases and logic programming, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1988
Baudouin Le Charlier , Pascal Van Hentenryck, Experimental evaluation of a generic abstract interpretation algorithm for PROLOG, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.1, p.35-101, Jan. 1994[doi>10.1145/174625.174627]
Michael Leuschel, Ecological Partial Deduction: Preserving Characteristic Trees Without Constraints, Proceedings of the 5th International Workshop on Logic Programming Synthesis and Transformation, p.1-16, September 20-22, 1995
Leuschel, M. 2002. The ecce partial deduction system and the dppd library of benchmarks. Obtainable via http://www.ecs.soton.ac.uk/∼mal.
Leuschel, M. 1997. Advanced techniques for logic program specialisation. Ph.D. thesis, K.U. Leuven. Accessible via http://www.ecs.soton.ac.uk/∼mal.
Leuschel, M. 1998a. On the power of homeomorphic embedding for online termination. In Static Analysis. Proceedings of SAS'98, G. Levi, Ed. LNCS 1503. Springer-Verlag, Pisa, Italy, 230--245.
Michael Leuschel, Program specialisation and abstract interpretation reconciled, Proceedings of the 1998 joint international conference and symposium on Logic programming, p.220-234, August 1998, Manchester, United Kingdom
Leuschel, M. 1999. Logic program specialisation. In Partial Evaluation: Practice and Theory, J. Hatcliff, T. Æ. Mogensen, and P. Thiemann, Eds. LNCS 1706. Springer-Verlag, Copenhagen, Denmark, 155--188 and 271--292.
Michael Leuschel , Maurice Bruynooghe, Logic program specialisation through partial deduction: Control issues, Theory and Practice of Logic Programming, v.2 n.4-5, p.461-515, July 2002[doi>10.1017/S147106840200145X]
Michael Leuschel , Danny De Schreye, Logic Program Specialisation: How To Be More Specific, Proceedings of the 8th International Symposium on Programming Languages: Implementations, Logics, and Programs, p.137-151, September 24-27, 1996
Michael Leuschel , Danny De Schreye, Constrained partial deduction and the preservation of characteristic trees, New Generation Computing, v.16 n.3, p.283-342, 1998[doi>10.1007/BF03037483]
Leuschel, M., De Schreye, D., and de Waal, A. 1996. A conceptual embedding of folding into partial deduction: Towards a maximal integration. In Proceedings of the Joint International Conference and Symposium on Logic Programming JICSLP'96, M. Maher, Ed. MIT Press, Bonn, Germany, 319--332.
Michael Leuschel , Stefan Gruner, Abstract Conjunctive Partial Deduction Using Regular Types and Its Application to Model Checking, Selected papers from the 11th International Workshop on Logic Based Program Synthesis and Transformation, p.91-110, November 28-30, 2001
Leuschel, M. and Lehmann, H. 2000. Coverability of reset Petri nets and other well-structured transition systems by partial deduction. In Proceedings of the International Conference on Computational Logic (CL'2000), J. Lloyd, Ed. LNAI 1861. Springer-Verlag, London, UK, 101--115.
Leuschel, M. and Martens, B. 1995. Partial deduction of the ground representation and its application to integrity checking. In Proceedings of ILPS'95, the International Logic Programming Symposium, J. W. Lloyd, Ed. MIT Press, Portland, USA, 495--509.
Michael Leuschel , Bern Martens , Danny De Schreye, Controlling generalization and polyvariance in partial deduction of normal logic programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.1, p.208-258, Jan. 1998[doi>10.1145/271510.271525]
Michael Leuschel , Morten Heine Sørensen, Redundant Argument Filtering of Logic Programs, Proceedings of the 6th International Workshop on Logic Programming Synthesis and Transformation, p.83-103, August 28-30, 1996
J. W. Lloyd, Foundations of logic programming; (2nd extended ed.), Springer-Verlag New York, Inc., New York, NY, 1987
J. W. Lloyd , J. C. Shepherdson, Partial evaluation in logic programming, Journal of Logic Programming, v.11 n.3-4, p.217-242, Oct./Nov. 1991[doi>10.1016/0743-1066(91)90027-M]
Marriott, K., Naish, L., and Lassez, J.-L. 1988. Most specific logic programs. In Proceedings of the Joint International Conference and Symposium on Logic Programming. IEEE, MIT Press, Seattle, 909--923.
Marriott, K., Naish, L., and Lassez, J.-L. 1990. Most specific logic programs. Annals of Mathematics and Artificial Intelligence 1, 303--338.
Martens, B. and De Schreye, D. 1996. Automatic finite unfolding using well-founded measures. J. Logic Prog. 28, 2 (August), 89--146.
Bern Martens , Danny De Schreye , Tamás Horváth, Sound and complete partial deduction with unfolding based on well-founded measures, Theoretical Computer Science, v.122 n.1-2, p.97-117, Jan. 3, 1994[doi>10.1016/0304-3975(94)90203-8]
Mogensen, T. and Sestoft, P. 1997. Partial evaluation. In Encyclopedia of Computer Science and Technology, A. Kent and J. G. Williams, Eds. Marcel Decker, 270 Madison Avenue, New York, New York 10016, 247--279.
Steven S. Muchnick, Advanced compiler design and implementation, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1998
Muthukumar, K. and Hermenegildo, M. 1991. Combined determination of sharing and freeness of program variables through abstract interpretation. In Proceedings of the Eighth International Conference on Logic Programming, K. Furukawa, Ed. MIT Press, Cambridge, Paris, 49--63.
K. Muthukumar , M. Hermenegildo, Compile-time derivation of variable dependency using abstract interpretation, Journal of Logic Programming, v.13 n.2-3, p.315-347, July 1992[doi>10.1016/0743-1066(92)90035-2]
Alberto Pettorossi , Maurizio Proietti, Program derivation via list introduction, Proceedings of the IFIP TC 2 WG 2.1 international workshop on Algorithmic languages and calculi, p.296-323, January 1997, Alsace, France
Alberto Pettorossi , Maurizio Proietti, A Theory of Logic Program Specialization and Generalization for Dealing with Input Data Properties, Selected Papers from the Internaltional Seminar on Partial Evaluation, p.386-408, February 12-16, 1996
Alberto Pettorossi , Maurizio Proietti , Sophie Renault, Reducing nondeterminism while specializing logic programs, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.414-427, January 15-17, 1997, Paris, France[doi>10.1145/263699.263759]
Maurizio Proietti , Alberto Pettorossi, Unfolding-definition-folding, in this order, for avoiding unnecessary variables in logic programs, Selected papers of the symposium on Programming language implementation and logic programming, p.89-124, May 1995, Passau, Germany
Proietti, M. and Pettorossi, A. 1993. The loop absorption and the generalization strategies for the development of logic programs and partial deduction. J. Logic Prog. 16, 1 & 2 (May), 123--162.
German Puebla , Francisco Bueno , Manuel V. Hermenegildo, A Generic Processor for Program Validation and Debugging, Analysis and Visualization Tools for Constraint Programming, Constrain Debugging (DiSCiPl project), p.63-107, January 2000
German Puebla , Francisco Bueno , Manuel V. Hermenegildo, Combined Static and Dynamic Assertion-Based Debugging of Constraint Logic Programs, Selected papers from the 9th International Workshop on Logic Programming Synthesis and Transformation, p.273-292, September 22-24, 1999
Puebla, G., Gallagher, J., and Hermenegildo, M. 1997. Towards integrating partial evaluation in a specialization framework based on generic abstract interpretation. In Proceedings of the ILPS'97 Workshop on Specialisation of Declarative Programs and its Application, M. Leuschel, Ed. K.U. Leuven, Tech. Rep. CW 255. Port Jefferson, USA, 29--38.
Germán Puebla , Manuel Hermenegildo, Implementation of multiple specialization in logic programs, Proceedings of the 1995 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.77-87, June 21-23, 1995, La Jolla, California, USA[doi>10.1145/215465.215561]
German Puebla , Manuel V. Hermenegildo, Abstract Specialization and Its Application to Program Parallelization, Proceedings of the 6th International Workshop on Logic Programming Synthesis and Transformation, p.169-186, August 28-30, 1996
Puebla, G. and Hermenegildo, M. 1999. Abstract Multiple Specialization and its Application to Program Parallelization. J. Logic Prog. Special Issue on Synthesis, Transformation and Analysis of Logic Programs 41, 2&3 (November), 279--316.
Puebla, G., Hermenegildo, M., and Gallagher, J. 1999. An Integration of Partial Evaluation in a Generic Abstract Interpretation Framework. In ACM SIGPLAN Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM'99), O. Danvy, Ed. Number NS-99-1 in BRICS Series. University of Aarhus, Denmark, 75--85.
A. W. Roscoe , C. A. R. Hoare , Richard Bird, The  Theory and Practice of Concurrency, Prentice Hall PTR, Upper Saddle River, NJ, 1997
Dan Sahlin, Mixtus: an automatic partial evaluator for full Prolog, New Generation Computing, v.12 n.1, p.7-51, 1993[doi>10.1007/BF03038271]
David Sands, Total correctness by local improvement in the transformation of functional programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.18 n.2, p.175-234, March 1996[doi>10.1145/227699.227716]
Sørensen, M. H. and Glück, R. 1995. An algorithm of generalization in positive supercompilation. In Proceedings of ILPS'95, the International Logic Programming Symposium, J. W. Lloyd, Ed. MIT Press, Portland, USA, 465--479.
Morten Heine Sørensen , Robert Glück , Neil D. Jones, Towards Unifying Partial Evaluation, Deforestation, Supercompilation, and GPC, Proceedings of the 5th European Symposium on Programming: Programming Languages and Systems, p.485-500, April 11-13, 1994
Sørensen, M. H., Glück, R., and Jones, N. D. 1996. A positive supercompiler. J. Functional Prog. 6, 6, 811--838.
Philip Wadler, Deforestation: transforming programs to eliminate trees, Theoretical Computer Science, v.73 n.2, p.231-248, June 22, 1990[doi>10.1016/0304-3975(90)90147-A]
Eyal Yardeni , Ehud Shapiro, A type system for logic program, Journal of Logic Programming, v.10 n.2, p.125-153, Feb. 1991[doi>10.1016/0743-1066(91)80002-U]
