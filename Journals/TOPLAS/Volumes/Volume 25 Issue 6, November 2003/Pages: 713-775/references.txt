Ole Agesen , David Detlefs , Alex Garthwaite , Ross Knippel , Y. S. Ramakrishna , Derek White, An efficient meta-lock for implementing ubiquitous synchronization, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.207-222, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320402]
Alexander Aiken , Manuel Fähndrich , Raph Levien, Better static memory management: improving region-based analysis of higher-order languages, Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation, p.174-185, June 18-21, 1995, La Jolla, California, USA[doi>10.1145/207110.207137]
Aldrich, J., Chambers, C., Sirer, E. G., and Eggers, S. 1999. Static analyses for eliminating unnecessary synchronization from Java programs. In Static Analysis Symposium (SAS'99, Venice, Italy). Lecture Notes on Computer Science, vol. 1694. Springer Verlag, Berlin, Germany, 19--38.
David Francis Bacon , Susan L. Graham, Fast and effective optimization of statically typed object-oriented languages, University of California, Berkeley, 1997
David F. Bacon , Ravi Konuru , Chet Murthy , Mauricio Serrano, Thin locks: featherweight synchronization for Java, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.258-268, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277734]
Lars Birkedal , Mads Tofte , Magnus Vejlstrup, From region inference to von Neumann machines via region representation inference, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.171-183, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237771]
Bruno Blanchet, Escape analysis: correctness proof, implementation and experimental results, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.25-37, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268949]
Bruno Blanchet, Escape analysis for object-oriented languages: application to Java, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.20-34, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320387]
Blanchet, B. 2000. Escape analysis. Applications to ML and JavaTM. Ph.D. thesis, École Polytechnique.
Jeff Bogda , Urs Hölzle, Removing unnecessary synchronization in Java, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.35-46, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320388]
Steve Carr , Kathryn S. McKinley , Chau-Wen Tseng, Compiler optimizations for improving data locality, Proceedings of the sixth international conference on Architectural support for programming languages and operating systems, p.252-262, October 05-07, 1994, San Jose, California, USA[doi>10.1145/195473.195557]
D. R. Chase, Safety consideration for storage allocation optimizations, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.1-10, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.53991]
Jong-Deok Choi , Manish Gupta , Mauricio Serrano , Vugranam C. Sreedhar , Sam Midkiff, Escape analysis for Java, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.1-19, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320386]
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Patrick Cousot , Radhia Cousot, Systematic design of program analysis frameworks, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.269-282, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567778]
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
Jeffrey Dean , David Grove , Craig Chambers, Optimization of Object-Oriented Programs Using Static Class Hierarchy Analysis, Proceedings of the 9th European Conference on Object-Oriented Programming, p.77-101, August 07-11, 1995
Alan Deutsch, On determining lifetime and aliasing of dynamically allocated data in higher-order functional specifications, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.157-168, December 1989, San Francisco, California, USA[doi>10.1145/96709.96725]
Alain Deutsch, Interprocedural may-alias analysis for pointers: beyondk-limiting, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.230-241, June 20-24, 1994, Orlando, Florida, USA[doi>10.1145/178243.178263]
Alain Deutsch, On the complexity of escape analysis, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.358-371, January 15-17, 1997, Paris, France[doi>10.1145/263699.263750]
Pedro C. Diniz , Martin C. Rinard, Lock coarsening: eliminating lock overhead in automatically parallelized object-based programs, Journal of Parallel and Distributed Computing, v.49 n.2, p.218-244, March 15, 1998[doi>10.1006/jpdc.1998.1441]
Robert Fitzgerald , Todd B. Knoblock , Erik Ruf , Bjarne Steensgaard , David Tarditi, Marmot: an optimizing compiler for Java, Software—Practice & Experience, v.30 n.3, p.199-232, Mar.1.2000[doi>10.1002/(SICI)1097-024X(200003)30:3<199::AID-SPE296>3.0.CO;2-2]
Gay, D. and Steensgaard, B. 2000. Fast escape analysis and stack allocation for object-based programs. In Compiler Construction, 9th International Conference, CC'2000, D. A. Watt, Ed. Lecture Notes on Computer Science, vol. 1781. Springer Verlag, Berlin, Germany, 82--93.
Harrison, W. 1989. The interprocedural analysis and automatic parallelisation of Scheme programs. J. Lisp Symb. Comput. 2, 176--396.
Hederman, L. 1988. Compile time garbage collection using reference count analysis. Tech. rep. Rice COMP TR88-75, Rice University, Houston, TX.
Susan Horwitz , Alan Demers , Tim Teitebaum, An efficient general iterative algorithm for dataflow analysis, Acta Informatica, v.24 n.6, p.679-694, November 1, 1987
Paul Hudak, A semantic model of reference counting and its abstraction (detailed summary), Proceedings of the 1986 ACM conference on LISP and functional programming, p.351-363, August 1986, Cambridge, Massachusetts, USA[doi>10.1145/319838.319876]
Hughes, S. 1992. Compile-time garbage collection for higher-order functional languages. J. Logic Comput. 2, 4, 483--509.
Katsuro Inoue , Hiroyuki Seki , Hikaru Yagi, Analysis of functional programs to detect run-time garbage cells, ACM Transactions on Programming Languages and Systems (TOPLAS), v.10 n.4, p.555-578, Oct. 1988[doi>10.1145/48022.48025]
Neil D. Jones , Steven S. Muchnick, A flexible approach to interprocedural data flow analysis and programs with recursive data structures, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.66-74, January 25-27, 1982, Albuquerque, New Mexico[doi>10.1145/582153.582161]
C. E. McDowell, Reducing garbage in Java, ACM SIGPLAN Notices, v.33 n.9, p.84-86, Sept. 1, 1998[doi>10.1145/290229.290239]
Markus Mohnen, Efficient Closure Utilisation by Higher-Order Inheritance Analysis, Proceedings of the Second International Symposium on Static Analysis, p.261-278, September 25-27, 1995
Markus Mohnen, Efficient Compile-Time Garbage Collection for Arbitrary Data Structures, Proceedings of the 7th International Symposium on Programming Languages: Implementations, Logics and Programs, p.241-258, September 20-22, 1995
Gilles Muller , Bárbara Moura , Fabrice Bellard , Charles Consel, Harissa: a flexible and efficient java environment mixing bytecode and compiled code, Proceedings of the 3rd conference on USENIX Conference on Object-Oriented Technologies (COOTS), p.1-1, June 16-20, 1997, Portland, Oregon
Tamiya Onodera , Kiyokuni Kawachiya, A study of locking objects with bimodal fields, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.223-237, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320405]
Young Gil Park , Benjamin Goldberg, Escape analysis on lists, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.116-127, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143125]
Qian, Z. 1998. A formal specification of JavaTM virtual machine instructions for objects, methods and subroutines. In Formal Syntax and Semantics of Java(tm), J. Alves-Foss, Ed. Lecture Notes on Computer Science, vol. 1523. Springer Verlag, Berlin, Germany.
Erik Ruf, Effective synchronization removal for Java, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.208-218, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349327]
C. Ruggieri , T. P. Murtagh, Lifetime analysis of dynamically allocated objects, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.285-293, January 10-13, 1988, San Diego, California, USA[doi>10.1145/73560.73585]
Manuel Serrano , Marc Feeley, Storage use analysis and its applications, Proceedings of the first ACM SIGPLAN international conference on Functional programming, p.50-61, May 24-26, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/232627.232635]
O. Shivers, Control flow analysis in scheme, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.164-174, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54007]
Tofte, M. and Talpin, J.-P. 1993. A theory of stack allocation in polymorphically typed languages. Tech. rep. 93/15, Departement of Computer Science, Copenhagen University, Copenhagen, Denmark.
Michael Weiss , François de Ferrière , Bertrand Delsart , Christian Fabre , Frederick Hirsch , E. Andrew Johnson , Vania Joloboff , Fred Roy , Fridtjof Siebert , Xavier Spengler, TurboJ, a Java Bytecode-to-Native Compiler, Proceedings of the  ACM SIGPLAN Workshop on Languages, Compilers, and Tools for Embedded Systems, p.119-130, June 01, 1998
John Whaley , Martin Rinard, Compositional pointer and escape analysis for Java programs, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.187-206, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320400]
