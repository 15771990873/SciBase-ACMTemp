ADVANCED MICRO DEVICES. Ara29000 Streaml~ned Instructmn Processor User's Manual. Advanced Micro Devices, Sunnyvale, Calif., 1987.
A. Agarwal , R. L. Sites , M. Horowitz, ATUM: a new technique for capturing address traces using microcode, ACM SIGARCH Computer Architecture News, v.14 n.2, p.119-127, May 1986[doi>10.1145/17356.17370]
Alfred V. Aho , John E. Hopcroft, The  Design and Analysis of Computer Algorithms, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1974
Alfred V. Aho , Ravi Sethi , Jeffrey D. Ullman, Compilers: principles, techniques, and tools, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1986
Russell R. Atkinson , Edward M. McCreight, The dragon processor, ACM SIGARCH Computer Architecture News, v.15 n.5, p.65-69, Oct. 1987[doi>10.1145/36177.36185]
M. E. Benitez , J. W. Davidson, A portable global optimizer and linker, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.329-338, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54023]
R Bernstein, Multiplication by Integer constants, Softwareâ€”Practice & Experience, v.16 n.7, p.641-652, July. 1986[doi>10.1002/spe.4380160704]
Bouc, A., KESSLER, R E., LAZANA, G, AND WALL, D.W. Long address traces from RISC machines: Generation and analysis. In Proceed~ngs of the 17th Annual Internat~on~l Symposium on Computer Architecture (Seattle, May 28-31, 1990), IEEE, 1990, pp. 270-279. (A more detailed version is available as WRL Res. Rep. 89/14, DECWRL, Palo Alto, Calif., Sept. 1989.)
G. J. Chaitin, Register allocation & spilling via graph coloring, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.98-105, June 23-25, 1982, Boston, Massachusetts, USA[doi>10.1145/800230.806984]
CHAITIN, G. J., AUSLANDER, M. A CHANDRA, A. K., COCKE, J., HOPKINS, M. E., AND MARKSTEIN, P.W. Register alloeatmn via coloring. Comput. Lang. G (1981), 47-57.
Frederick Chi-Tak Chow, A portable machine-independent global optimizer--design and measurements, Stanford University, Stanford, CA, 1984
F. C. Chow, Minimizing register usage penalty at procedure calls, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.85-94, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.53999]
Douglas W. Clark, Cache Performance in the VAX-11/780, ACM Transactions on Computer Systems (TOCS), v.1 n.1, p.24-37, Feb. 1983[doi>10.1145/357353.357356]
Jack J. Dongarra, Performance of various computers using standard linear equations software in a Fortran environment, ACM SIGARCH Computer Architecture News, v.11 n.5, p.22-27, December 1983[doi>10.1145/859551.859555]
Richard P. Gabriel, Performance and evaluation of LISP systems, Massachusetts Institute of Technology, Cambridge, MA, 1985
G^R~ER, R. B., A6RAWAL, A., BmGGS, F., BRowr4, E. W., HOUG~, D., JoY, B., KLErdAN S., MUCHNICK, S., NAMJOO, M., PATTE~SON, D., PENDLETO~4 J., AND TUCK, R. The Scalable Processor Architecture (SPARC). In Digest of Papers, Compcon 88 (San Franciso, Feb 29-Mar. 4, 1988), IEEE, 1988, pp. 278-283.
GRAHAM, S. L., KESSLER, P. B , Ar4D McKusIcK, M. K. An execution profiler for modular programs. $oftw. Pract. Exper. 13, 8 (Aug 1983), 120-126.
John Hennessy, Symbolic Debugging of Optimized Code, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.323-344, July 1982[doi>10.1145/357172.357173]
John L. Hennessy , Thomas Gross, Postpass Code Optimization of Pipeline Constraints, ACM Transactions on Programming Languages and Systems (TOPLAS), v.5 n.3, p.422-448, July 1983[doi>10.1145/2166.357217]
HIMELSTEIN, M. I., CHOW, F. C., AND ENDERBY, K. Cross-module optimizations: Its implementation and benefits. In Proceed~ngs of the Summer 1987 USENIX Conference (Phoenix, June 8-12, 1987), USENIX Assoc., Berkeley, Calif., 1987. pp. 347-356.
JOHNSON, S. C. Postloading for fun and profit. In Proceed~ngs of the Winter 90 USENIX Conference (Washington, D.C., Jan. 22-26, 1990), USENIX Assoc., Berkeley, Calif., 1990 pp. 325-330.
JouPPI, N. P., AND TANG, J.Y.-F. A 20 MIPS sustained 32 bit CMOS microprocessor with high ratio of sustained to peak performance. IEEE J. Solid-State Circuits 24, 5 (Oct. 1989), 1348-1359.
KA~E, G. MIPS R2000 Risc Architecture. Prentice-Hall, Englewood Cliffs, N.J., 1987.
Ruby B. Lee, Precision Architecture, Computer, v.22 n.1, p.78-91, January 1989[doi>10.1109/2.19825]
S. McFarling, Program optimization for instruction caches, ACM SIGARCH Computer Architecture News, v.17 n.2, p.183-191, April 1989[doi>10.1145/68182.68200]
MIPS COMPUTER SYSTEMS. RISCompiler and C Programmer's Guide. MIPS Computer Systems, Sunnyvale, Calif., 1989.
NmLSEN, M. J.K. Titan system manual. WRL Res. Rep. 86/1, DECWRL, Palo Alto, Calif, Sept. 1986.
David A. Patterson, Reduced instruction set computers, Communications of the ACM, v.28 n.1, p.8-21, Jan. 1985[doi>10.1145/2465.214917]
Karl Pettis , Robert C. Hansen, Profile guided code positioning, ACM SIGPLAN Notices, v.25 n.6, p.16-27, Jun. 1990[doi>10.1145/93548.93550]
George Radin, The 801 minicomputer, Proceedings of the first international symposium on Architectural support for programming languages and operating systems, p.39-47, March 01-03, 1982, Palo Alto, California, USA[doi>10.1145/800050.801824]
Vatsa Santhanam , Daryl Odnert, Register allocation across procedure and module boundaries, ACM SIGPLAN Notices, v.25 n.6, p.28-39, Jun. 1990[doi>10.1145/93548.93551]
P. A. Steenkiste, Lisp on a reduced-instruction-set processor: characterization and optimization, Stanford University, Stanford, CA, 1987
Peter A. Steenkiste , John L. Hennessy, A simple interprocedural register allocation algorithm and its effectiveness for LISP, ACM Transactions on Programming Languages and Systems (TOPLAS), v.11 n.1, p.1-32, Jan. 1989[doi>10.1145/59287.59289]
J. Strong , J. Wegstein , A. Tritter , J. Olsztyn , O. Mock , T. Steel, The problem of programming communication with changing machines: a proposed solution, Communications of the ACM, v.1 n.8, p.12-18, Aug. 1958[doi>10.1145/368892.368915]
Thomas G. Szymanski, Assembling code for machines with span-dependent instructions, Communications of the ACM, v.21 n.4, p.300-308, April 1978[doi>10.1145/359460.359474]
TERMAN, C.J. User's Guide to NET, PRESIM, and RNL/NL. MIT Laboratory for Computer Science, Cambridge, Mass.
David W. Wall, Global register allocation at link time, ACM SIGPLAN Notices, v.21 n.7, p.264-275, July 1986[doi>10.1145/13310.13338]
D. W. Wall, Register windows vs. register allocation, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.67-78, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.53997]
WALL, D. W. Link-time code modification WRL Res. Rep. 89/17, DECWRL, Palo Alto, Calif., Sept. 1989.
David W. Wall, Predicting program behavior using real or estimated profiles, ACM SIGPLAN Notices, v.26 n.6, p.59-70, June 1991[doi>10.1145/113446.113451]
David W. Wall , Michael L. Powell, The Mahler experience: using an intermediate language as the machine description, ACM SIGARCH Computer Architecture News, v.15 n.5, p.100-104, Oct. 1987[doi>10.1145/36177.36190]
