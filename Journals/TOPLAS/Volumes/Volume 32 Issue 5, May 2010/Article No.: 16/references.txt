Lucia Acciai , Michele Boreale, Responsiveness in process calculi, Theoretical Computer Science, v.409 n.1, p.59-93, December, 2008[doi>10.1016/j.tcs.2008.08.017]
Amir M. Ben-Amram , Chin Soon Lee, Program termination analysis in polynomial time, ACM Transactions on Programming Languages and Systems (TOPLAS), v.29 n.1, p.1-37, January 2007[doi>10.1145/1180475.1180480]
Philippe Bidinger , Adriana Compagnoni, Pict correctness revisited, Theoretical Computer Science, v.410 n.2-3, p.114-127, February, 2009[doi>10.1016/j.tcs.2008.09.014]
Chiara Bodei , Pierpaolo Degano , Flemming Nielson , Hanne Riis Nielson, Control Flow Analysis for the pi-calculus, Proceedings of the 9th International Conference on Concurrency Theory, p.84-98, September 08-11, 1998
Boreale, M., Nicola, R. D., and Pugliese, R. 1999. Basic observables for processes. Inf. Comput. 149, 1, 77--98.
Chandrasekhar Boyapati , Robert Lee , Martin Rinard, Ownership types for safe programming: preventing data races and deadlocks, Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, November 04-08, 2002, Seattle, Washington, USA[doi>10.1145/582419.582440]
Ed Brinksma , Arend Rensink , Walter Vogler, Fair Testing, Proceedings of the 6th International Conference on Concurrency Theory, p.313-327, August 21-24, 1995
Luís Caires, Logical semantics of types for concurrency, Proceedings of the 2nd international conference on Algebra and coalgebra in computer science, August 20-24, 2007, Bergen, Norway
Luís Caires , Luca Cardelli, A spatial logic for concurrency (part I), Information and Computation, v.186 n.2, p.194-235, 01 November 2003[doi>10.1016/S0890-5401(03)00137-8]
Sagar Chaki , Sriram K. Rajamani , Jakob Rehof, Types as models: model checking message-passing programs, Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.45-57, January 16-18, 2002, Portland, Oregon[doi>10.1145/503272.503278]
Byron Cook , Alexey Gotsman , Andreas Podelski , Andrey Rybalchenko , Moshe Y. Vardi, Proving that programs eventually do something good, Proceedings of the 34th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 17-19, 2007, Nice, France[doi>10.1145/1190216.1190257]
Byron Cook , Andreas Podelski , Andrey Rybalchenko, Proving thread termination, Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation, June 10-13, 2007, San Diego, California, USA[doi>10.1145/1250734.1250771]
Mads Dam, Model checking mobile processes, Information and Computation, v.129 n.1, p.35-51, Aug. 25, 1996[doi>10.1006/inco.1996.0072]
Romain Demangeon , Daniel Hirschkoff , Naoki Kobayashi , Davide Sangiorgi, On the complexity of termination inference for processes, Proceedings of the 3rd conference on Trustworthy global computing, November 05-06, 2007, Sophia-Antipolis, France
Yuxin Deng , Davide Sangiorgi, Ensuring termination by typability, Information and Computation, v.204 n.7, p.1045-1082, July 2006[doi>10.1016/j.ic.2006.03.002]
Feret, J. 2005. Abstract interpretation of mobile systems. J. Logic. Algebr. Program. 63, 1, 59--130.
Gerard Holzmann, Spin model checker, the: primer and reference manual, Addison-Wesley Professional, 2003
Honda, K., Vasconcelos, V., and Yoshida, N. 2000. Secure information flow as typed process behaviour. In Proceedings of the European Symposium on Programming (ESOP'00). Lecture Notes in Computer Science, vol. 1782. Springer-Verlag, Berlin, Germany, 180--199.
Kohei Honda , Nobuko Yoshida, A uniform type structure for secure information flow, ACM Transactions on Programming Languages and Systems (TOPLAS), v.29 n.6, p.31-es, October 2007[doi>10.1145/1286821.1286822]
Hugo Vieira, L. C., and Viegas, R. 2005. The spatial logic model checker user's manual v1.0. TR-DI/FCT/UNL-05, http://ctp.di.fct.unl.pt/SLMC/.
Cliff B. Jones, A pi-Calculus Semantics for an Object-Based Design Notation, Proceedings of the 4th International Conference on Concurrency Theory, p.158-172, August 23-26, 1993
Naoki Kobayashi, A type system for lock-free processes, Information and Computation, v.177 n.2, p.122-159, 15 September 2002[doi>10.1016/S0890-5401(02)93171-8]
Naoki Kobayashi, Type-based information flow analysis for the π-calculus, Acta Informatica, v.42 n.4, p.291-347, December 2005[doi>10.1007/s00236-005-0179-x]
Kobayashi, N. 2005b. TyPiCal: A type-based static analyzer for the pi-calculus. Tool available at http://www.kb.ecei.tohoku.ac.jp/~koba/typical/.
Naoki Kobayashi, A new type system for deadlock-free processes, Proceedings of the 17th international conference on Concurrency Theory, August 27-30, 2006, Bonn, Germany[doi>10.1007/11817949_16]
Naoki Kobayashi , Benjamin C. Pierce , David N. Turner, Linearity and the pi-calculus, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.5, p.914-947, Sept. 1999[doi>10.1145/330249.330251]
Kobayashi, N., Suenaga, K., and Wischik, L. 2006. Resource usage analysis for the pi-calculus. Logic. Meth. Comput. Sci. 2, 3:4, 1--42.
Xavier Leroy, A modular module system, Journal of Functional Programming, v.10 n.3, p.269-303, May 2000[doi>10.1017/S0956796800003683]
Milner, R. 1993. The polyadic π-calculus: a tutorial. In Logic and Algebra of Specification, Springer-Verlag, Berlin, Germany.
V. Natarajan , Rance Cleaveland, Divergence and Fair Testing, Proceedings of the 22nd International Colloquium on Automata, Languages and Programming, p.648-659, July 10-14, 1995
Benjamin C. Pierce , David N. Turner, Pict: a programming language based on the Pi-Calculus, Proof, language, and interaction: essays in honour of Robin Milner, MIT Press, Cambridge, MA, 2000
Davide Sangiorgi, &pgr;-calculus, internal mobility, and agent-passing calculi, Theoretical Computer Science, v.167 n.1-2, p.235-274, Oct. 30, 1996[doi>10.1016/0304-3975(96)00075-8]
Davide Sangiorgi, The name discipline of uniform receptiveness, Theoretical Computer Science, v.221 n.1-2, p.457-493, June 28, 1999[doi>10.1016/S0304-3975(99)00040-7]
Davide Sangiorgi, Termination of processes, Mathematical Structures in Computer Science, v.16 n.1, p.1-39, February 2006[doi>10.1017/S0960129505004810]
Davide Sangiorgi , David Walker, PI-Calculus: A Theory of Mobile Processes, Cambridge University Press, New York, NY, 2001
Kohei Suenaga , Naoki Kobayashi, Type-based analysis of deadlock for a concurrent calculus with interrupts, Proceedings of the 16th European conference on Programming, March 24-April 01, 2007, Braga, Portugal
Tachio Terauchi , Alex Aiken, A capability calculus for concurrency and determinism, ACM Transactions on Programming Languages and Systems (TOPLAS), v.30 n.5, p.1-30, August 2008[doi>10.1145/1387673.1387676]
Yoshida, N. 2002. Type-based liveness guarantee in the presence of nontermination and nondeterminism. Tech. rep. 2002-20, MSC Technical Report, University of Leicester. April.
Nobuko Yoshida , Martin Berger , Kohei Honda, Strong normalisation in the π-calculus, Information and Computation, v.191 n.2, p.145-202, 15 June 2004[doi>10.1016/j.ic.2003.08.004]
