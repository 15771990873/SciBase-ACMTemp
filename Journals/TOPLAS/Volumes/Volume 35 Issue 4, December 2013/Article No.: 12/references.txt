Sarita V. Adve , Kourosh Gharachorloo, Shared Memory Consistency Models: A Tutorial, Computer, v.29 n.12, p.66-76, December 1996[doi>10.1109/2.546611]
Sarita V. Adve , Mark D. Hill, Weak ordering—a new definition, Proceedings of the 17th annual international symposium on Computer Architecture, p.2-14, May 28-31, 1990, Seattle, Washington, USA[doi>10.1145/325164.325100]
Formal Syntax and Semantics of Java, January 1999
David Aspinall , Jaroslav Ševčík, Formalising java's data race free guarantee, Proceedings of the 20th international conference on Theorem proving in higher order logics, p.22-37, September 10-13, 2007, Kaiserslautern, Germany
Aspinall, D. and Ševčík, J. 2007b. Java memory model examples: Good, bad and ugly. In Proceedings of Verification and Analysis of Multi-Threaded Java-Like Programs (VAMP'07). 66--80.
Mark Batty , Kayvan Memarian , Scott Owens , Susmit Sarkar , Peter Sewell, Clarifying and compiling C/C++ concurrency: from C++11 to POWER, Proceedings of the 39th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 25-27, 2012, Philadelphia, PA, USA[doi>10.1145/2103656.2103717]
Mark Batty , Scott Owens , Susmit Sarkar , Peter Sewell , Tjark Weber, Mathematizing C++ concurrency, Proceedings of the 38th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 26-28, 2011, Austin, Texas, USA[doi>10.1145/1926385.1926394]
Boehm, H.-J. 2007. Memory model rationales. http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2007/n2176.html. ISO JTC1/SC22/WG21 document no. WG21/N2176.
Hans-J. Boehm, Can seqlocks get along with programming language memory models?, Proceedings of the 2012 ACM SIGPLAN Workshop on Memory Systems Performance and Correctness, June 16-16, 2012, Beijing, China[doi>10.1145/2247684.2247688]
Hans-J. Boehm , Sarita V. Adve, Foundations of the C++ concurrency memory model, Proceedings of the 2008 ACM SIGPLAN conference on Programming language design and implementation, June 07-13, 2008, Tucson, AZ, USA[doi>10.1145/1375581.1375591]
Gérard Boudol , Gustavo Petri, Relaxed memory models: an operational approach, Proceedings of the 36th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 21-23, 2009, Savannah, GA, USA[doi>10.1145/1480881.1480930]
Boyland, J. 2009. An operational semantics including “volatile” for safe concurrency. J. Object Technol. 8, 4, 33--53.
Pietro Cenciarelli , Alexander Knapp , Eleonora Sibilio, The java memory model: operationally, denotationally, axiomatically, Proceedings of the 16th European conference on Programming, March 24-April 01, 2007, Braga, Portugal
Jong-Deok Choi , Manish Gupta , Mauricio Serrano , Vugranam C. Sreedhar , Sam Midkiff, Escape analysis for Java, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.1-19, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320386]
Arnab De , Abhik Roychoudhury , Deepak D'Souza, Java memory model aware software validation, Proceedings of the 8th ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering, November 09-10, 2008, Atlanta, Georgia[doi>10.1145/1512475.1512478]
Delphine Demange , Vincent Laporte , Lei Zhao , Suresh Jagannathan , David Pichardie , Jan Vitek, Plan B: a buffered memory model for Java, Proceedings of the 40th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 23-25, 2013, Rome, Italy[doi>10.1145/2429069.2429110]
Sophia Drossopoulou , Susan Eisenbach, Describing the Semantics of Java and Proving Type Soundness, Formal Syntax and Semantics of Java, p.41-82, January 01, 1999
Farzan, A., Chen, F., Meseguer, J., and Roşu, G. 2004a. Formal analysis of Java programs in JavaFAN. In Proceedings of Computer Aided Verification (CAV'04), R. Alur and D. Peled, Eds., Lecture Notes in Computer Science, vol. 3114, Springer, 501--505.
Farzan, A., Meseguer, J., and Roşu, G. 2004b. Formal JVM code analysis in JavaFAN. In Proceedings of Algebraic Methodology and Software Technology (AMAST'04). C. Rattray, S. Maharaj, and C. Shankland, Eds., Lecture Notes in Computer Science, vol. 3116, Springer, 132--147.
Giffhorn, D. 2012. Slicing of concurrent programs and its application to information flow control. Ph.D. thesis, Fakultät für Informatik, Karlsruher Institut für Technologie.
Li Gong , Gary Ellison, Inside Java(TM) 2 Platform Security: Architecture, API Design, and Implementation, Pearson Education, 2003
James Gosling , Bill Joy , Guy Steele , Gilad Bracha, Java(TM) Language Specification, The (3rd Edition) (Java (Addison-Wesley)), Addison-Wesley Professional, 2005
Matthew Goto , Radha Jagadeesan , Corin Ptcher , James Riely, Types for relaxed memory models, Proceedings of the 8th ACM SIGPLAN workshop on Types in language design and implementation, January 28-28, 2012, Philadelphia, Pennsylvania, USA[doi>10.1145/2103786.2103791]
Mark D. Hill, Multiprocessors Should Support Simple Memory-Consistency Models, Computer, v.31 n.8, p.28-34, August 1998[doi>10.1109/2.707614]
Huisman, M. and Petri, G. 2007. The Java memory model: A formal explanation. In Proceedings of Verification and Analysis of Multi-threaded Java-like Programs (VAMP'07). 81--96.
Chung-Kil Hur , Georg Neis , Derek Dreyer , Viktor Vafeiadis, The power of parameterization in coinductive proof, Proceedings of the 40th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 23-25, 2013, Rome, Italy[doi>10.1145/2429069.2429093]
ISO. 2011. International standard ISO/IEC 14882:2011. information technology -- programming languages -- C&plus;&plus;. International Organization for Standardization.
Jacobs, B. 2005. JLS3 contains glitch concerning volatiles&quest; Java Memory Model mailing list, post 2477.
Radha Jagadeesan , Corin Pitcher , James Riely, Generative operational semantics for relaxed memory models, Proceedings of the 19th European conference on Programming Languages and Systems, p.307-326, March 20-28, 2010, Paphos, Cyprus[doi>10.1007/978-3-642-11957-6_17]
Huafeng Jin , Tuba Yavuz-Kahveci , Beverly A. Sanders, Java memory model-aware model checking, Proceedings of the 18th international conference on Tools and Algorithms for the Construction and Analysis of Systems, March 24-April 01, 2012, Tallinn, Estonia[doi>10.1007/978-3-642-28756-5_16]
Gerwin Klein , Tobias Nipkow, A machine-checked model for a Java-like language, virtual machine, and compiler, ACM Transactions on Programming Languages and Systems (TOPLAS), v.28 n.4, p.619-695, July 2006[doi>10.1145/1146809.1146811]
L. Lamport, How to Make a Multiprocessor Computer That Correctly Executes Multiprocess Programs, IEEE Transactions on Computers, v.28 n.9, p.690-691, September 1979[doi>10.1109/TC.1979.1675439]
Lea, D. 2004. JSR 166: Concurrency utilities. http://jcp.org/en/jsr/detail&quest;id=166.
Hanbing Liu , J Strother Moore, Executable JVM model for analytical reasoning: a study, Proceedings of the 2003 workshop on Interpreters, virtual machines and emulators, p.15-23, June 12-12, 2003, San Diego, California[doi>10.1145/858570.858572]
Lochbihler, A. 2007. Jinja with threads. Archive Formal Proofs. http://afp.sf.net/entries/JinjaThreads.shtml.
Lochbihler, A. 2008. Type safe nondeterminism - a formal semantics of Java threads. In Proceedings of the International Workshop on Foundations of Object-Oriented Languages (FOOL'08).
Andreas Lochbihler, Verifying a compiler for java threads, Proceedings of the 19th European conference on Programming Languages and Systems, p.427-447, March 20-28, 2010, Paphos, Cyprus[doi>10.1007/978-3-642-11957-6_23]
Andreas Lochbihler, Java and the java memory model -- a unified, machine-checked formalisation, Proceedings of the 21st European conference on Programming Languages and Systems, p.497-517, March 24-April 01, 2012, Tallinn, Estonia[doi>10.1007/978-3-642-28869-2_25]
Lochbihler, A. 2012b. A machine-checked, type-safe model of Java concurrency -- language, virtual machine, memory model and verified compiler. Ph.D. thesis, Fakult,ät für Informatik, Karlsruher Institut für Technologie.
Andreas Lochbihler , Lukas Bulwahn, Animating the formalised semantics of a Java-like language, Proceedings of the Second international conference on Interactive theorem proving, August 22-25, 2011, Berg en Dal, The Netherlands
Manson, J. 2007. The proof of DRF guarantee and initialization. Java memory model mailing list, post 62.
Jeremy Manson , William Pugh , Sarita V. Adve, The Java memory model, Proceedings of the 32nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.378-391, January 12-14, 2005, Long Beach, California, USA[doi>10.1145/1040305.1040336]
Tobias Nipkow , Markus Wenzel , Lawrence C. Paulson, Isabelle/HOL: a proof assistant for higher-order logic, Springer-Verlag, Berlin, Heidelberg, 2002
Tobias Nipkow , David von Oheimb, Javalightis type-safe—definitely, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.161-170, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268960]
Petri, G. and Huisman, M. 2008. BicolanoMT: A formalization of multi-threaded Java at bytecode level. In Proceedings of Bytecode Semantics, Verification, Analysis and Transformation (BYTECODE'08). Electronic Notes in Theoretical Computer Science.
Benjamin C. Pierce, Types and programming languages, MIT Press, Cambridge, MA, 2002
Sergey Polyakov , Assaf Schuster, Verification of the java causality requirements, Proceedings of the First Haifa international conference on Hardware and Software Verification and Testing, November 13-16, 2005, Haifa, Israel[doi>10.1007/11678779_16]
Pugh, W. 2000. The Java memory model is fatally flawed. Concurrency: Practice Exper. 12, 445--455.
Pugh, W. and Manson, J. 2004. Causality test cases for the Java memory model. http://www.cs.umd.edu/ pugh/java/memoryModel/CausalityTestCases.html.
Erik Ruf, Effective synchronization removal for Java, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.208-218, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349327]
Davide Sangiorgi, On the bisimulation proof method, Mathematical Structures in Computer Science, v.8 n.5, p.447-479, October 1998[doi>10.1017/S0960129598002527]
Ševčík, J. 2008. Program transformations in weak memory models. Ph.D. thesis, Laboratory for Foundations of Computer Science, School of Informatics, University of Edinburgh.
Jaroslav Ševčík , David Aspinall, On Validity of Program Transformations in the Java Memory Model, Proceedings of the 22nd European conference on Object-Oriented Programming, July 07-11, 2008, Paphos, Cypress[doi>10.1007/978-3-540-70592-5_3]
Jaroslav Ŝevčik , Viktor Vafeiadis , Francesco Zappa Nardelli , Suresh Jagannathan , Peter Sewell, Relaxed-memory concurrency and verified compilation, Proceedings of the 38th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 26-28, 2011, Austin, Texas, USA[doi>10.1145/1926385.1926393]
Peter Sewell , Susmit Sarkar , Scott Owens , Francesco Zappa Nardelli , Magnus O. Myreen, x86-TSO: a rigorous and usable programmer's model for x86 multiprocessors, Communications of the ACM, v.53 n.7, July 2010[doi>10.1145/1785414.1785443]
Daniel J. Sorin , Mark D. Hill , David A. Wood, A Primer on Memory Consistency and Cache Coherence, Morgan & Claypool Publishers, 2011
Stärk, R., Schmid, J., and Börger, E. 2001. Java and the Java Virtual Machine. Springer.
Robert C. Steinke , Gary J. Nutt, A unified theory of shared memory consistency, Journal of the ACM (JACM), v.51 n.5, p.800-849, September 2004[doi>10.1145/1017460.1017464]
Zehra Sura , Xing Fang , Chi-Leung Wong , Samuel P. Midkiff , Jaejin Lee , David Padua, Compiler techniques for high performance sequentially consistent java programs, Proceedings of the tenth ACM SIGPLAN symposium on Principles and practice of parallel programming, June 15-17, 2005, Chicago, IL, USA[doi>10.1145/1065944.1065947]
Emina Torlak , Mandana Vaziri , Julian Dolby, MemSAT: checking axiomatic specifications of memory models, Proceedings of the 2010 ACM SIGPLAN conference on Programming language design and implementation, June 05-10, 2010, Toronto, Ontario, Canada[doi>10.1145/1806596.1806635]
Clark Verbrugge , Allan Kielstra , Yi Zhang, There is nothing wrong with out-of-thin-air: compiler optimization and memory models, Proceedings of the 2011 ACM SIGPLAN Workshop on Memory Systems Performance and Correctness, June 05-05, 2011, San Jose, California[doi>10.1145/1988915.1988917]
Andrew K. Wright , Matthias Felleisen, A syntactic approach to type soundness, Information and Computation, v.115 n.1, p.38-94, Nov. 15, 1994[doi>10.1006/inco.1994.1093]
