B. Alpern , M. N. Wegman , F. K. Zadeck, Detecting equality of variables in programs, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.1-11, January 10-13, 1988, San Diego, California, USA[doi>10.1145/73560.73561]
Andrew W. Appel, Modern Compiler Implementation: In ML, Cambridge University Press, New York, NY, 1998
Andrew W. Appel, SSA is functional programming, ACM SIGPLAN Notices, v.33 n.4, p.17-20, April 1998[doi>10.1145/278283.278285]
John Aycock , R. Nigel Horspool, Simple Generation of Static Single-Assignment Form, Proceedings of the 9th International Conference on Compiler Construction, p.110-124, March 25-April 02, 2000
Gilles Barthe , Delphine Demange , David Pichardie, A formally verified SSA-Based middle-end: Static single assignment meets compcert, Proceedings of the 21st European conference on Programming Languages and Systems, p.47-66, March 24-April 01, 2012, Tallinn, Estonia[doi>10.1007/978-3-642-28869-2_3]
Jan Olaf Blech , Sabine Glesner , Johannes Leitner , Steffen Mülling, Optimizing Code Generation from SSA Form: A Comparison Between Two Formal Correctness Proofs in Isabelle/HOL, Electronic Notes in Theoretical Computer Science (ENTCS), v.141 n.2, p.33-51, December, 2005[doi>10.1016/j.entcs.2005.02.042]
Benoit Boissinot , Sebastian Hack , Daniel Grund , Benoît Dupont de Dine hin , Fabri e Rastello, Fast liveness checking for ssa-form programs, Proceedings of the 6th annual IEEE/ACM international symposium on Code generation and optimization, April 05-09, 2008, Boston, MA, USA[doi>10.1145/1356058.1356064]
Benoit Boissinot , Alain Darte , Fabrice Rastello , Benoit Dupont de Dinechin , Christophe Guillon, Revisiting Out-of-SSA Translation for Correctness, Code Quality and Efficiency, Proceedings of the 7th annual IEEE/ACM International Symposium on Code Generation and Optimization, p.114-125, March 22-25, 2009[doi>10.1109/CGO.2009.19]
Marc M. Brandis , Hanspeter Mössenböck, Single-pass generation of static single-assignment form for structured languages, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.6, p.1684-1698, Nov. 1994[doi>10.1145/197320.197331]
Preston Briggs , Keith D. Cooper , L. Taylor Simpson, Value numbering, Software—Practice & Experience, v.27 n.6, p.701-724, June 1997[doi>10.1002/(SICI)1097-024X(199706)27:6<701::AID-SPE104>3.3.CO;2-S]
Preston Briggs , Keith D. Cooper , Timothy J. Harvey , L. Taylor Simpson, Practical improvements to the construction and destruction of static single assignment form, Software—Practice & Experience, v.28 n.8, p.859-881, July 10, 1998[doi>10.1002/(SICI)1097-024X(19980710)28:8<859::AID-SPE188>3.0.CO;2-8]
Philip Brisk , Majid Sarrafzadeh, Advances in static single assignment form and register allocation, University of California at Los Angeles, Los Angeles, CA, 2006
Adam Chlipala, Parametric higher-order abstract syntax for mechanized semantics, Proceedings of the 13th ACM SIGPLAN international conference on Functional programming, September 20-28, 2008, Victoria, BC, Canada[doi>10.1145/1411204.1411226]
Adam Chlipala, A verified compiler for an impure functional language, Proceedings of the 37th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 17-23, 2010, Madrid, Spain[doi>10.1145/1706299.1706312]
Fred Chow , Sun Chan , Robert Kennedy , Shin-Ming Liu , Raymond Lo , Peng Tu, A new algorithm for partial redundancy elimination based on SSA form, Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation, p.273-286, June 16-18, 1997, Las Vegas, Nevada, USA[doi>10.1145/258915.258940]
CompCertSSA. 2012. Companion web page. http://compcertssa.gforge.inria.fr.
Cooper, K. D., Harvey, T. J., and Kennedy, K. 2000. A simple, fast dominance algorithm. Tech. rep., Rice University. www.cs.rice.edu/~keith/Embed/dom.pdf.
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
Zaynah Dargaye , Xavier Leroy, Mechanized verification of CPS transformations, Proceedings of the 14th international conference on Logic for programming, artificial intelligence and reasoning, p.211-225, October 15-19, 2007, Yerevan, Armenia
Sebastian Hack , Daniel Grund , Gerhard Goos, Register allocation for programs in SSA-Form, Proceedings of the 15th international conference on Compiler Construction, March 30-31, 2006, Vienna, Austria[doi>10.1007/11688839_20]
Jens Knoop , Oliver Rüthing , Bernhard Steffen, Lazy code motion, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.224-234, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143136]
Jens Knoop , Dirk Koschützki , Bernhard Steffen, Basic-Block Graphs: Living Dinosaurs?, Proceedings of the 7th International Conference on Compiler Construction, p.65-79, March 28-April 04, 1998
Thomas Lengauer , Robert Endre Tarjan, A fast algorithm for finding dominators in a flowgraph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.1 n.1, p.121-141, July 1979[doi>10.1145/357062.357071]
Xavier Leroy, A Formally Verified Compiler Back-end, Journal of Automated Reasoning, v.43 n.4, p.363-446, December  2009[doi>10.1007/s10817-009-9155-4]
William Mansky , Elsa Gunter, A framework for formal verification of compiler optimizations, Proceedings of the First international conference on Interactive Theorem Proving, July 11-14, 2010, Edinburgh, UK[doi>10.1007/978-3-642-14052-5_26]
Yutaka Matsuno , Atsushi Ohori, A type system equivalent to static single assignment, Proceedings of the 8th ACM SIGPLAN international conference on Principles and practice of declarative programming, July 10-12, 2006, Venice, Italy[doi>10.1145/1140335.1140365]
Vijay S. Menon , Neal Glew , Brian R. Murphy , Andrew McCreight , Tatiana Shpeisman , Ali-Reza Adl-Tabatabai , Leaf Petersen, A verifiable SSA program representation for aggressive compiler optimization, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.397-408, January 11-13, 2006, Charleston, South Carolina, USA[doi>10.1145/1111037.1111072]
George C. Necula, Translation validation for an optimizing compiler, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.83-94, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349314]
Amir Pnueli , Michael Siegel , Eli Singerman, Translation Validation, Proceedings of the 4th International Conference on Tools and Algorithms for Construction and Analysis of Systems, p.151-166, March 28-April 04, 1998
Laurence Rideau , Bernard Paul Serpette , Xavier Leroy, Tilting at Windmills with Coq: Formal Verification of a Compilation Algorithm for Parallel Moves, Journal of Automated Reasoning, v.40 n.4, p.307-326, May       2008[doi>10.1007/s10817-007-9096-8]
Hanan Samet, Automatically proving the correctness of translations involving optimized code., Stanford University, Stanford, CA, 1975
Schneider, S. 2013. Semantics of an intermediate language for program transformation. Master’s thesis, Saarland University.
Vugranam C. Sreedhar , Roy Dz-Ching Ju , David M. Gillies , Vatsa Santhanam, Translating Out of Static Single Assignment Form, Proceedings of the 6th International Symposium on Static Analysis, p.194-210, September 22-24, 1999
Michael Stepp , Ross Tate , Sorin Lerner, Equality-based translation validator for LLVM, Proceedings of the 23rd international conference on Computer aided verification, p.737-742, July 14-20, 2011, Snowbird, UT
Ross Tate , Michael Stepp , Zachary Tatlock , Sorin Lerner, Equality saturation: a new approach to optimization, Proceedings of the 36th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 21-23, 2009, Savannah, GA, USA[doi>10.1145/1480881.1480915]
Jean-Baptiste Tristan , Xavier Leroy, Verified validation of lazy code motion, Proceedings of the 2009 ACM SIGPLAN conference on Programming language design and implementation, June 15-21, 2009, Dublin, Ireland[doi>10.1145/1542476.1542512]
Jean-Baptiste Tristan , Xavier Leroy, A simple, verified validator for software pipelining, Proceedings of the 37th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 17-23, 2010, Madrid, Spain[doi>10.1145/1706299.1706311]
Jean-Baptiste Tristan , Paul Govereau , Greg Morrisett, Evaluating value-graph translation validation for LLVM, Proceedings of the 32nd ACM SIGPLAN conference on Programming language design and implementation, June 04-08, 2011, San Jose, California, USA[doi>10.1145/1993498.1993533]
Zhao, J. 2013. Formalizing an SSA-based compiler for verified advanced program transformations. Ph.D. dissertation, University of Pennsylvania. http://www.cis.upenn.edu/~stevez/vellvm/Zhao13.pdf.
Jianzhou Zhao , Steve Zdancewic, Mechanized verification of computing dominators for formalizing compilers, Proceedings of the Second international conference on Certified Programs and Proofs, p.27-42, December 13-15, 2012, Kyoto, Japan[doi>10.1007/978-3-642-35308-6_6]
Jianzhou Zhao , Santosh Nagarakatte , Milo M.K. Martin , Steve Zdancewic, Formalizing the LLVM intermediate representation for verified program transformations, Proceedings of the 39th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages, January 25-27, 2012, Philadelphia, PA, USA[doi>10.1145/2103656.2103709]
Jianzhou Zhao , Santosh Nagarakatte , Milo M.K. Martin , Steve Zdancewic, Formal verification of SSA-based optimizations for LLVM, Proceedings of the 34th ACM SIGPLAN conference on Programming language design and implementation, June 16-19, 2013, Seattle, Washington, USA[doi>10.1145/2491956.2462164]
