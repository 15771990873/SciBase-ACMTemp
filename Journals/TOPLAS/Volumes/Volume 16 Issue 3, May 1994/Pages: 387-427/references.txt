Ali-Reza Adl-Tabatabai , Thomas Gross, Detection and recovery of endangered variables caused by instruction scheduling, Proceedings of the ACM SIGPLAN 1993 conference on Programming language design and implementation, p.13-25, June 21-25, 1993, Albuquerque, New Mexico, USA[doi>10.1145/155090.155092]
Ali-Reza Adl-Tabatabai , Thomas Gross, Evicted variables and the interaction of global register allocation and symbolic debugging, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.371-383, March 1993, Charleston, South Carolina, USA[doi>10.1145/158511.158692]
~ACM SIGACT-SIGPLAN Sympostum on Principles of Programmtng Languages. ACM, New ~York.
Alfred V. Aho , Ravi Sethi , Jeffrey D. Ullman, Compilers: principles, techniques, and tools, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1986
~BALZER, R M. 1969. Exdams--Extendabte debugging and monitoring system. In Proceedzngs ~of AFIPS Spring Joint Computer Conference 34. AFIPS, Washington, D.C., 125-134.
~BERGER, L. AND WISMI~ILLER, R. 1993. Source-level debugging of optimized programs using ~data flow analysis. Dept. of Computer Science, Munich Inst. of Technology, Munich, Germany
Gary Brooks , Gilbert J. Hansen , Steve Simmons, A new approach to debugging optimized code, ACM SIGPLAN Notices, v.27 n.7, p.1-11, July 1992[doi>10.1145/143103.143108]
Robert Cohn, Source level debugging of automatically parallelized code, ACM SIGPLAN Notices, v.26 n.12, p.132-143, Dec. 1991[doi>10.1145/127695.122771]
~CooL, E. L. 1992 Debugging vliw code after instruction scheduling. Master's thes~s, Tech ~Rep. CS/E 92-TH-009, Oregon Graduate Inst., Beaverton, Oreg.
Max Copperman, Debugging optimized code without being misled, California Institute of Technology, Pasadena, CA, 1993
~COPPERMAN, M. 1992. Debugging optimized code: currency determination with dataflow. In ~Proceedings of the Supercomputer Debuggzng Workshop. Los Alamos National Laboratory.
Max Copperman , Charles E. McDowell, A further note on Hennessy's “Symbolic debugging of optimized code”, ACM Transactions on Programming Languages and Systems (TOPLAS), v.15 n.2, p.357-365, April 1993[doi>10.1145/169701.214526]
~COPPERMAN, M. AND McDOWELL, C.E. 1991. Debugging optimized code without surprises. In ~Proceedings of Supercomputer Debugging Workshop. Los Alamos Natmnal Laboratory.
D. S. Coutant , S. Meloy , M. Ruscetta, DOC: a practical approach to source-level debugging of globally optimized code, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.125-134, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54003]
~FELLER, P. H. AND MEDINA-MORA, R. 1980 An incremental programming environment. Tech. ~Rep., Computer Science Dept., Carnegie Mellon Univ., Pittsburgh, Pa.
~GUPTA, R. 1990. Debugging code reorganized by a trace scheduling compiler. Struct. Program ~11, 3 (July), 1-10.
John Hennessy, Symbolic Debugging of Optimized Code, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.323-344, July 1982[doi>10.1145/357172.357173]
B. Korel, PELAS-Program Error-Locating Assistant System, IEEE Transactions on Software Engineering, v.14 n.9, p.1253-1260, September 1988[doi>10.1109/32.6169]
Jong-Deok Choi , Barton P. Miller , Robert H. B. Netzer, Techniques for debugging parallel programs with flowback analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.491-530, Oct. 1991[doi>10.1145/115372.115324]
Patricia Prather Pineo , Mary Lou Soffa, Debugging parallelized code using code liberation techniques, ACM SIGPLAN Notices, v.26 n.12, p.108-119, Dec. 1991[doi>10.1145/127695.122769]
Lori L. Pollock , Mary Lou Soffa, Incremental global reoptimization of programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.14 n.2, p.173-200, April 1992[doi>10.1145/128861.128865]
L. L. Pollock , M. L. Soffa, High-level debugging with the aid of an incremental optimizer, Proceedings of the Twenty-First Annual Hawaii International Conference on Software Track, p.524-532, January 1988, Kailua-Kona, Hawaii, USA
William S. Shu, Adapting a debugger for optimised programs, ACM SIGPLAN Notices, v.28 n.4, p.39-44, April 1993[doi>10.1145/152739.152744]
~SHU, W.S. 1989. A unified approach to the debugging of optimized programs. Ph.D. thesis, ~Dept. of Computer Science, Univ. of Nottingham, U.K.
A Srivastava, Recovery of noncurrent variables in source-level debugging of optimized code, Proc. of the sixth conference on Foundations of software technology and theoretical computer science, p.36-56, December 1986, New Delhi, India
~STREEPY, L. 1991. Cxdb a new view on optimization. In Proceedings of the Supercomputer ~Debugging Workshop. Los Alamos National Laboratory.
David Wall , Amitabh Srivastava , Fred Templin, A note on Hennessy's “symbolic debugging of optimized code”, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.1, p.176-181, Jan. 1985[doi>10.1145/2363.215005]
~WARREN, H. S., JR. AND SCHLAEPPI, H.P. 1978. Design of the fds interactive debugging system. ~IBM Res. Rep. RC7214, IBM, Yorktown Heights, N.Y.
~ZELLWEGER, P. 1984. Interactive source-level debugging of optimized programs. Res. Rep. ~CSL-84-5. Xerox Palo Alto Research Center, Palo Alto, Calif.
Polle T. Zellweger, An interactive high-level debugger for control-flow optimized programs, ACM SIGPLAN Notices, v.18 n.8, August 1983[doi>10.1145/1006142.1006183]
~ZURAWSKI, L. W. AND JOHNSON, R.E. 1990. Debugging optimized code with expected behavior. ~Dept. of Computer Science, Univ. of Illinois at Urbana-Champaign, Urbana, Ill.
