Martin Abadi , Luca Cardelli, A  Theory of Objects, Springer-Verlag New York, Inc., Secaucus, NJ, 1996
Martín Abadi , Luca Cardelli , Benjamin Pierce , Gordon Plotkin, Dynamic typing in a statically typed language, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.2, p.237-268, April 1991[doi>10.1145/103135.103138]
Abadi, M., Cardeli, L., Pierce, B., and Remy, D. 1992. Dynamic typing in polymorphic languages. In Proceedings of the ACM SIGPLAN Workshop on ML and its Applications, P. Lee, Ed. San Francisco, CA. Carnegie-Mellon University Technical Report CMU-CS-93-105.
Davide Ancona , Elena Zucca, A theory of mixin modules: basic and derived operators, Mathematical Structures in Computer Science, v.8 n.4, p.401-446, August 1998[doi>10.1017/S0960129598002576]
Davide Ancona , Elena Zucca, A Primitive Calculus for Module Systems, Proceedings of the International Conference PPDP'99 on Principles and Practice of Declarative Programming, p.62-79, September 29-October 01, 1999
Andrew W. Appel, Modern compiler implementation in ML: basic techniques, Cambridge University Press, New York, NY, 1997
Edoardo Biagioni , Robert Harper , Peter Lee , Brian G. Milnes, Signatures for a network protocol stack: a systems application of Standard ML, Proceedings of the 1994 ACM conference on LISP and functional programming, p.55-64, June 27-29, 1994, Orlando, Florida, USA[doi>10.1145/182409.182431]
G.M. Birtwhistle , O.J. Dahl , B. Myhrhaug , K. Nygaard, Simula Begin, Chartwell-Bratt Ltd, 1979
Don Box , Grady Booch , Charlie Kindel, Essential COM, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1997
Gilad Bracha , Martin Odersky , David Stoutamire , Philip Wadler, Making the future safe for the past: adding genericity to the Java programming language, Proceedings of the 13th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.183-200, October 18-22, 1998, Vancouver, British Columbia, Canada[doi>10.1145/286936.286957]
L Cardelli, Amber, Proc. of the thirteenth spring school of the LITP on Combinators and functional programming languages, p.21-47, October 1986, Val d'Ajol, France
Luca Cardelli, Program fragments, linking, and modularization, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.266-277, January 15-17, 1997, Paris, France[doi>10.1145/263699.263735]
L. Cardelli , J. Donahue , M. Jordan , B. Kalsow , G. Nelson, The Modula–3 type system, Proceedings of the 16th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.202-212, January 11-13, 1989, Austin, Texas, USA[doi>10.1145/75277.75295]
Robert Cartwright , Guy L. Steele, Jr., Compatible genericity with run-time types for the Java programming language, Proceedings of the 13th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.201-215, October 18-22, 1998, Vancouver, British Columbia, Canada[doi>10.1145/286936.286958]
Karl Crary , Robert Harper , Sidd Puri, What is a recursive module?, Proceedings of the ACM SIGPLAN 1999 conference on Programming language design and implementation, p.50-63, May 01-04, 1999, Atlanta, Georgia, USA[doi>10.1145/301618.301641]
Dominic Duggan, Dynamic typing for distributed programming in polymorphic languages, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.1, p.11-45, Jan. 1999[doi>10.1145/314602.314604]
Dominic Duggan, Sharing in Typed Module Assembly Language, Selected papers from the Third International Workshop on Types in Compilation, p.85-116, September 21, 2000
Dominic Duggan, Type-based hot swapping of running modules (extended abstract), Proceedings of the sixth ACM SIGPLAN international conference on Functional programming, September 03-05, 2001, Florence, Italy[doi>10.1145/507635.507645]
Dominic Duggan , Constantinos Sourelis, Mixin modules, Proceedings of the first ACM SIGPLAN international conference on Functional programming, p.262-273, May 24-26, 1996, Philadelphia, Pennsylvania, USA[doi>10.1145/232627.232654]
Dominic Duggan , Ching-Ching Techaubol, Modular mixin-based inheritance for application frameworks, Proceedings of the 16th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.223-240, October 14-18, 2001, Tampa Bay, FL, USA[doi>10.1145/504282.504299]
Kathleen Fisher , John Reppy, The design of a class mechanism for Moby, Proceedings of the ACM SIGPLAN 1999 conference on Programming language design and implementation, p.37-49, May 01-04, 1999, Atlanta, Georgia, USA[doi>10.1145/301618.301638]
Fisher, K. and Reppy, J. H. 2000. A calculus for compiling and linking classes. In European Symposium on Programming. ACM Press.
Matthew Flatt , Matthias Felleisen, Units: cool modules for HOT languages, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.236-248, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277730]
Girard, J.-Y. 1972. Interprétation fonctionelle et elimination des coupures dans l'arithmétique d'ordre supérieur. Ph.D. thesis, Thèse de Doctorat d'État, Paris.
Neal Glew , Greg Morrisett, Type-safe linking and modular assembly language, Proceedings of the 26th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.250-261, January 20-22, 1999, San Antonio, Texas, USA[doi>10.1145/292540.292563]
James Gosling , Bill Joy , Guy L. Steele, The  Java Language Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1996
Robert Harper , Mark Lillibridge, A type-theoretic approach to higher-order modules with sharing, Proceedings of the 21st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.123-137, January 16-19, 1994, Portland, Oregon, USA[doi>10.1145/174675.176927]
Robert Harper , John C. Mitchell , Eugenio Moggi, Higher-order modules and the phase distinction, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.341-354, December 1989, San Francisco, California, USA[doi>10.1145/96709.96744]
Tom Hirschowitz , Xavier Leroy, Mixin Modules in a Call-by-Value Setting, Proceedings of the 11th European Symposium on Programming Languages and Systems, p.6-20, April 08-12, 2002
C. A. R. Hoare, Communicating sequential processes, Prentice-Hall, Inc., Upper Saddle River, NJ, 1985
Jean D. Ichbiah , Bernd Krieg-Brueckner , Brian A. Wichmann , John G. P. Barnes , Olivier Roubine , Jean-Claude Heliard, Rationale for the design of the Ada programming language, ACM SIGPLAN Notices, v.14 n.6b, p.1-261, June 1979[doi>10.1145/956653.956654]
Intermetrics 1995. Ada-95 Reference Manual. Intermetrics, Cambridge, Mass. International standard ISO/IEC 8652:1995(E).
Lampson, B. 1983. A description of the Cedar language. Tech. Rep. CSL-83-15, Xerox Palo Alto Research Center.
Xavier Leroy, Manifest types, modules, and separate compilation, Proceedings of the 21st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.109-122, January 16-19, 1994, Portland, Oregon, USA[doi>10.1145/174675.176926]
Xavier Leroy, Applicative functors and fully transparent higher-order modules, Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.142-153, January 23-25, 1995, San Francisco, California, USA[doi>10.1145/199448.199476]
Leroy, X. and Mauny, M. 1993. Dynamics in ML. J. Func. Prog. 3, 4, 431--463.
Sheng Liang , Gilad Bracha, Dynamic class loading in the Java virtual machine, Proceedings of the 13th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.36-44, October 18-22, 1998, Vancouver, British Columbia, Canada[doi>10.1145/286936.286945]
Lillibridge, M. 1997. Translucent sums: A foundation for higher-order module systems. Ph.D. thesis, Carnegie-Mellon University, Pittsburgh, PA. Technical Report CMU-CS-97-122.
B Liskov , E Moss , A Snyder , R Atkinson , J C. Schaffert , T Bloom , R Scheifler, CLU reference manual, Springer-Verlag New York, Inc., New York, NY, 1984
Sean McDirmid , Matthew Flatt , Wilson C. Hsieh, Jiazzi: new-age components for old-fasioned Java, Proceedings of the 16th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.211-222, October 14-18, 2001, Tampa Bay, FL, USA[doi>10.1145/504282.504298]
R. Milner, Communication and concurrency, Prentice-Hall, Inc., Upper Saddle River, NJ, 1989
Robin Milner , Mads Tofte , Robert Harper, The definition of Standard ML, MIT Press, Cambridge, MA, 1990
Robin Milner , Mads Tofte , David Macqueen, The  Definition of Standard ML, MIT Press, Cambridge, MA, 1997
Greg Nelson, Systems programming with Modula-3, Prentice-Hall, Inc., Upper Saddle River, NJ, 1991
Object Management Group. 1995. The Common Object Request Broker: Architecture and Specification 2.0. Object Management Group.
Sean W. O'Malley , Larry L. Peterson, A dynamic network architecture, ACM Transactions on Computer Systems (TOCS), v.10 n.2, p.110-143, May 1992[doi>10.1145/128899.128901]
Didier Rémy , Jérôme Vouillon, Objective ML: a simple object-oriented extension of ML, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.40-53, January 15-17, 1997, Paris, France[doi>10.1145/263699.263707]
Rovner, P. 1986. On extending Modula-2+ to build large, integrated systems. IEEE Software 3, 6 (November), 46--57.
Russo, C. 2000. Adding first-class modules to Standard ML. In European Symposium on Programming. Springer-Verlag, Berlin, Germany.
Claudio V. Russo, Recursive structures for standard ML, Proceedings of the sixth ACM SIGPLAN international conference on Functional programming, September 03-05, 2001, Florence, Italy[doi>10.1145/507635.507644]
Géraud Sénizergues, The Equivalence Problem for Deterministic Pushdown Automata is Decidable, Proceedings of the 24th International Colloquium on Automata, Languages and Programming, p.671-681, July 07-11, 1997
Zhong Shao, Transparent modules with fully syntatic signatures, Proceedings of the fourth ACM SIGPLAN international conference on Functional programming, p.220-232, September 27-29, 1999, Paris, France[doi>10.1145/317636.317801]
Mark Shields , Tim Sheard , Simon Peyton Jones, Dynamic typing as staged type inference, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.289-302, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268970]
Marvin Solomon, Type definitions with parameters, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.31-38, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512765]
Stone, C. and Harper, R. 1996. A type-theoretic account of Standard ML (version 1). Tech. Rep. CMU-CS-FOX-96-02, Carnegie-Mellon University, Pitsburgh, Pennsylvania.
Christopher A. Stone , Robert Harper, Deciding type equivalence in a language with singleton kinds, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.214-227, January 19-21, 2000, Boston, MA, USA[doi>10.1145/325694.325724]
Wells, J. and Vestergaard, R. 2000. Equational reasoning for linking with first-class primitive modules. In European Symposium on Programming. Springer-Verlag, Berlin, Germany.
Andrew K. Wright , Matthias Felleisen, A syntactic approach to type soundness, Information and Computation, v.115 n.1, p.38-94, Nov. 15, 1994[doi>10.1006/inco.1994.1093]
