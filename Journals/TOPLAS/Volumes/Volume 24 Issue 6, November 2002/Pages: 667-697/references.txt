Allen, F., Cocke, J. and Rustin, R. 1971. A Catalogue of Optimizing Transformations. Prentice-Hall, Englewood Cliffs, NJ.
M. E. Benitez , J. W. Davidson, A portable global optimizer and linker, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.329-338, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54023]
Rastislav BodÃ­k , Rajiv Gupta , Mary Lou Soffa, Interprocedural conditional branch elimination, Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation, p.146-158, June 16-18, 1997, Las Vegas, Nevada, USA[doi>10.1145/258915.258929]
Brad Calder , Dirk Grunwald, Reducing branch costs via branch alignment, Proceedings of the sixth international conference on Architectural support for programming languages and operating systems, p.242-251, October 05-07, 1994, San Jose, California, USA[doi>10.1145/195473.195553]
Russell M. Clapp , Louis Duchesneau , Richard A. Volz , Trevor N. Mudge , Timothy Schultze, Toward real-time performance benchmarks for Ada, Communications of the ACM, v.29 n.8, p.760-778, Aug. 1986[doi>10.1145/6424.6428]
Davidson, J. W. and Whalley, D. B. 1992. A design environment for addressing architecture and compiler interactions. Information and Software Technology 34, 11 (11), 707--720.
Dongarra, J. and Hinds, A. 1979. Unrolling loops in fortran. Software Practice & Experience 9, 219--226.
Joseph A. Fisher , Stefan M. Freudenberger, Predicting conditional branch directions from previous runs of a program, Proceedings of the fifth international conference on Architectural support for programming languages and operating systems, p.85-95, October 12-15, 1992, Boston, Massachusetts, USA[doi>10.1145/143365.143493]
John L. Hennessy , David A. Patterson, Computer architecture (2nd ed.): a quantitative approach, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1996
Jack W. Davidson , Sanjay Jinturkar, Aggressive Loop Unrolling in a Retargetable Optimizing Compiler, Proceedings of the 6th International Conference on Compiler Construction, p.59-73, April 24-26, 1996
Johnson, S. C. 1979. A tour through the portable C compiler. Unix Programmer's Manual, 7th Edition, Section 33.
Frank Mueller , David B. Whalley, Avoiding conditional branches by code replication, Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation, p.56-66, June 18-21, 1995, La Jolla, California, USA[doi>10.1145/207110.207116]
Michael Schlansker , Scott Mahlke , Richard Johnson, Control CPR: a branch height reduction optimization for EPIC architectures, Proceedings of the ACM SIGPLAN 1999 conference on Programming language design and implementation, p.155-168, May 01-04, 1999, Atlanta, Georgia, USA[doi>10.1145/301618.301659]
Spuler, D. A. 1994. Compiler code generation for multiway branch statements as a static search problem. Tech. Rep. 94/3. James Cook University, Townsville, Australia.
Gang-Ryung Uh , David B. Whalley, Effectively exploiting indirect jumps, The Florida State University, 1997
Gang-Ryung Uh , David B. Whalley, Coalescing Conditional Branches into Efficient Indirect Jumps, Proceedings of the 4th International Symposium on Static Analysis, p.315-329, September 08-10, 1997
Yang, M. 1998. Improving performance by branch reordering. M.S. thesis, Florida State University, Talahassee, Florida.
Cliff Young , David S. Johnson , Michael D. Smith , David R. Karger, Near-optimal intraprocedural branch alignment, Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation, p.183-193, June 16-18, 1997, Las Vegas, Nevada, USA[doi>10.1145/258915.258932]
Cliff Young , Michael D. Smith, Improving the accuracy of static branch prediction using branch correlation, Proceedings of the sixth international conference on Architectural support for programming languages and operating systems, p.232-241, October 05-07, 1994, San Jose, California, USA[doi>10.1145/195473.195549]
