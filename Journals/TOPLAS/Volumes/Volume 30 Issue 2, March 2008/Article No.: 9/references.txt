John Backus, Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs, Communications of the ACM, v.21 n.8, p.613-641, Aug. 1978[doi>10.1145/359576.359579]
Jean-Pierre Banâtre , Daniel Le Métayer, Programming by multiset transformation, Communications of the ACM, v.36 n.1, p.98-111, Jan. 1993[doi>10.1145/151233.151242]
Judy M. Bishop, The Effect of Data Abstraction on Loop Programming Techniques, IEEE Transactions on Software Engineering, v.16 n.4, p.389-402, April 1990[doi>10.1109/32.54291]
Guy E. Blelloch, Programming parallel algorithms, Communications of the ACM, v.39 n.3, p.85-97, March 1996[doi>10.1145/227234.227246]
Cohen, P. 1966. Set Theory and the Continuum Hypothesis. WH Benjamin, New York.
Daniel E. Cooke, An introduction to SequenceL: a language to experiment with constructs for processing nonscalars, Software—Practice & Experience, v.26 n.11, p.1205-1246, Nov. 1996[doi>10.1002/(SICI)1097-024X(199611)26:11<1205::AID-SPE57>3.3.CO;2-Y]
Daniel E. Cooke, SequenceL provides a different way to view programming, Computer Languages, v.24 n.1, p.1-32, April, 1998[doi>10.1016/S0096-0551(97)00007-6]
Daniel L. Cooke , Per Andersen, Automatic parallel control structures in SequenceL, Software—Practice & Experience, v.30 n.14, p.1541-1570, Nov. 25, 2000[doi>10.1002/1097-024X(20001125)30:14<1541::AID-SPE350>3.3.CO;2-K]
Daniel E. Cooke , Matt Barry , Michael Lowry , Cordell Green, NASA's Exploration Agenda and Capability Engineering, Computer, v.39 n.1, p.63-73, January 2006[doi>10.1109/MC.2006.27]
Cooke, D. and Gates, A. 1991. On the development of a method to synthesize programs from requirement specifications. Int. J. Softw. Eng. Knowl. Eng. 1, 1 (Mar.), 21--38.
Cooke, D., Gelfond, M., Rushton, N., and Hu, H. 2005. Application of model-based technology systems for autonomous systems. In American Institute of Aeronautics and Astronautics Infotech&commat;Aerospace Conference. AIAA Press, Reston, VA. 8 pages.
Daniel E. Cooke , J. Nelson Rushton, Iterative and parallel algorithm design from high level language traces, Proceedings of the 5th international conference on Computational Science, May 22-25, 2005, Atlanta, GA[doi>10.1007/11428862_132]
Gelfond, M. and Lifschitz, V. 1998. The stable model semantics for logic programming. In Proceedings of the 5th International Conference on Logic Programming. Seattle, WA, Aug. MIT Press, Cambridge, MA, 1070--1080.
Gelfond, M. and Lifschitz, V. 1991. Classical negation in logic programs and disjunctive databases. New Generation Comp. 9, 365--385.
Kenneth E. Iverson, A programming language, John Wiley & Sons, Inc., New York, NY, 1962
Ralf Lämmel , Simon Peyton Jones, Scrap your boilerplate: a practical design pattern for generic programming, ACM SIGPLAN Notices, v.38 n.3, March 2003[doi>10.1145/640136.604179]
Ralf Lämmel , Simon Peyton Jones, Scrap more boilerplate: reflection, zips, and generalised casts, ACM SIGPLAN Notices, v.39 n.9, September 2004[doi>10.1145/1016848.1016883]
Fangzhen Lin , Yuting Zhao, ASSAT: computing answer sets of a logic program by SAT solvers, Artificial Intelligence, v.157 n.1-2, p.115-137, August 2004[doi>10.1016/j.artint.2004.04.004]
Loidl, H. and Trinder, P. 2006. A Gentle introduction to GPH. http://www.macs.hw.ac.uk/~dsg/gph/docs/Gentle-GPH/gph-gentle-intro.html.
Erik Meijer , Maarten Fokkinga , Ross Paterson, Functional programming with bananas, lenses, envelopes and barbed wire, Proceedings of the 5th ACM conference on Functional programming languages and computer architecture, p.124-144, June 1991, Cambridge, Massachusetts, USA
H D Mills , R C Linger, Data structured programming: Programm design without Arrays and Pointers, IEEE Transactions on Software Engineering, v.12 n.2, p.192-197, Feb. 1986
Implicit parallel programming inpH, Morgan Kaufmann Publishers Inc., San Francisco, CA, 2001
Pancake, C. 1999. Those who live by the flop may die by the flop. Keynote Address, 41st International Cray User Group Conference, Minneapolis, MN.
Sipelstein, J. and Blelloch, G. E. 1991. Collection-oriented languages. Proc. IEEE, 79, 4.
