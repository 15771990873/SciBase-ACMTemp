Banerjee, A. and Naumann, D. 2001. A simple semantics and static analysis for Java security. CS Rep. AI-068-85, Stevens Institute of Technology.
Anindya Banerjee , David A. Naumann, Representation independence, confinement and access control [extended abstract], Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.166-177, January 16-18, 2002, Portland, Oregon[doi>10.1145/503272.503289]
Barthe, G. and Dufay, G. 2004. Certified bytecode verification. In Proceedings of the International Conference on Fundamental Approaches to Software Engineering. Lecture Notes in Computer Science, vol. 2984. Springer Verlag, Berlin. 99--113.
Robert Cartwright , Mike Fagan, Soft typing, Proceedings of the ACM SIGPLAN 1991 conference on Programming language design and implementation, p.278-292, June 24-28, 1991, Toronto, Ontario, Canada[doi>10.1145/113445.113469]
John Clements , Matthias Felleisen, A tail-recursive semantics for stack inspections, Proceedings of the 12th European conference on Programming, April 07-11, 2003, Warsaw, Poland
Úlfar Erlingsson , Fred B. Schneider, IRM Enforcement of Java Stack Inspection, Proceedings of the 2000 IEEE Symposium on Security and Privacy, p.246, May 14-17, 2000
Cédric Fournet , Andrew D. Gordon, Stack inspection: theory and variants, Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.307-318, January 16-18, 2002, Portland, Oregon[doi>10.1145/503272.503301]
Stephen N. Freund , John C. Mitchell, A type system for object initialization in the Java bytecode language, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.6, p.1196-1250, Nov. 1999[doi>10.1145/330643.330646]
Stephen N. Freund , John C. Mitchell, A Type System for the Java Bytecode Language and Verifier, Journal of Automated Reasoning, v.30 n.3-4, p.271-321, 2003[doi>10.1023/A:1025011624925]
J. H. Gallier , W. Snyder, Complete sets of transformations for generalE-unification, Theoretical Computer Science, v.67 n.2-3, p.203-260, Oct. 1989[doi>10.1016/0304-3975(89)90004-2]
Li Gong , Gary Ellison, Inside Java(TM) 2 Platform Security: Architecture, API Design, and Implementation, Pearson Education, 2003
Gong, L. and Schemers, R. 1998. Implementing protection domains in the Java development kit 1.2. In Internet Society Symposium on Network and Distributed System Security. 125--134.
Tomoyuki Higuchi , Atsushi Ohori, Java bytecode as a typed term calculus, Proceedings of the 4th ACM SIGPLAN international conference on Principles and practice of declarative programming, p.201-211, October 06-08, 2002, Pittsburgh, PA, USA[doi>10.1145/571157.571178]
Guenter Karjoth, An Operational Semantics of Java 2 Access Control, Proceedings of the 13th IEEE workshop on Computer Security Foundations, p.224, July 03-05, 2000
G. Klein , M. Wildmoser, Verified Bytecode Subroutines, Journal of Automated Reasoning, v.30 n.3-4, p.363-398, 2003[doi>10.1023/A:1025095122199]
Larry Koved , Marco Pistoia , Aaron Kershenbaum, Access rights analysis for Java, Proceedings of the 17th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, November 04-08, 2002, Seattle, Washington, USA[doi>10.1145/582419.582452]
Leroy, X. 1992. Polymorphic typing of an algorithmic language. Ph.D. thesis, University of Paris VII.
Xavier Leroy, Java Bytecode Verification: Algorithms and Formalizations, Journal of Automated Reasoning, v.30 n.3-4, p.235-269, 2003[doi>10.1023/A:1025055424017]
Sheng Liang , Gilad Bracha, Dynamic class loading in the Java virtual machine, Proceedings of the 13th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.36-44, October 18-22, 1998, Vancouver, British Columbia, Canada[doi>10.1145/286936.286945]
Tim Lindholm , Frank Yellin, Java Virtual Machine Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Tobias Nipkow, Java Bytecode Verification, Journal of Automated Reasoning, v.30 n.3-4, p.233-233, 2003[doi>10.1023/A:1025086804452]
Atsushi Ohori, The Logical Abstract Machine: A Curry-Howard Isomorphism for Machine Code, Proceedings of the 4th Fuji International Symposium on Functional and Logic Programming, p.300-318, November 11-13, 1999
Joachim Posegga , Harald Vogt, Byte Code Verification for Java Smart Card Based on Model Checking, Proceedings of the 5th European Symposium on Research in Computer Security, p.175-190, September 16-18, 1998
François Pottier , Christian Skalka , Scott Smith, A systematic approach to static access control, ACM Transactions on Programming Languages and Systems (TOPLAS), v.27 n.2, p.344-382, March 2005[doi>10.1145/1057387.1057392]
Christian Skalka, Trace effects and object orientation, Proceedings of the 7th ACM SIGPLAN international conference on Principles and practice of declarative programming, p.139-150, July 11-13, 2005, Lisbon, Portugal[doi>10.1145/1069774.1069787]
Skalka, C. and Smith, S. 2004. History effects and verification. In Proceedings of the Asian Symposium on Programming Languages and Systems. Lecture Notes in Computer Science. Springer Verlag, Berlin. 107--128.
Christian Skalka , Scott Smith, Static enforcement of security with types, Proceedings of the fifth ACM SIGPLAN international conference on Functional programming, p.34-45, September 2000[doi>10.1145/351240.351244]
Raymie Stata , Martín Abadi, A type system for Java bytecode subroutines, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.149-160, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268959]
Wallach, D. 1998. Understanding Java stack inspection. In Proceedings of the IEEE Symposium on Security and Privacy. 52--63.
Dan S. Wallach , Andrew W. Appel , Edward W. Felten, SAFKASI: a security mechanism for language-based systems, ACM Transactions on Software Engineering and Methodology (TOSEM), v.9 n.4, p.341-378, Oct. 2000[doi>10.1145/363516.363520]
