ALLEN, F., CARTER, J., HARRISON, W., LOEWNER, P., TAPSCOTT, R., TREVILLYAN, L., AND WECMAN, M. The experimental compiling systems project. IBM Res. Rep. RC 6718 (#28922), IBM, Yorktown Heights, N. Y., 1977.
BARBACCI, M., BARNES, G., CATTELL, R., AND SIEWIOREK, D. ISPS reference manual. Tech. Rep. TR 79-137 (latest revision), Comput. Sci., Carnegie-Mellon Univ., Pittsburgh, Pa., 1977.
BARBACCI, M., AND SIEWIOREK, D. The CMU RT-CAD system: An innovative approach to computer aided design. Carnegie-Mellon Univ. Comput. Sci. Rev., 1974-1975.
C. Gordon Bell , A. C. Newell, Computer structures: Readings and examples (McGraw-Hill computer science series), McGraw-Hill Pub. Co., 1971
CATTELL, R.G. A survey and critique of some models of code generation. Unnumbered Tech. Rep., Comput. Sci., Carnegie-Mellon Univ., Pittsburgh, Pa., 1977.
Roderic Geoffrey Galton Cattell, Formalization and automatic derivation of code generators., 1978
Roderic G.G. Cattell , Joseph M. Newcomer , Bruce W. Leverett, Code generation in a machine-independent compiler, Proceedings of the 1979 SIGPLAN symposium on Compiler construction, p.65-75, August 06-10, 1979, Denver, Colorado, United States[doi>10.1145/800229.806955]
Michael Kelly Donegan, An approach to the automatic generation of code-generators., 1973
ELSON, M., AND RAKE, S.T. Code-generation technique for large-language compilers. IBM Syst. J. 9, 3 (1970), 166-188.
FELDMAN, J. A formal semantics for computer-oriented languages. Ph.D. dissertation, Comput. Sci., Carnegie-Mellon Univ., Pittsburgh, Pa., 1964.
Jerome Feldman , David Gries, Translator writing systems, Communications of the ACM, v.11 n.2, p.77-113, Feb. 1968[doi>10.1145/362896.362902]
Christopher Warwick Fraser, Automatic generation of code generators., 1977
Robert Steven Glanville, A machine independent algorithm for code generation and its use in retargetable compilers., 1977
R. Steven Glanville , Susan L. Graham, A new method for compiler code generation, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.231-254, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512785]
HOBBS, S. Object code optimization. Unpublished thesis proposal, Comput. Sci., Carnegie- Mellon Univ., Pittsburgh, Pa., 1976.
S. C. Johnson, A portable compiler: theory and practice, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.97-104, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512771]
LEIVE, G. The binding of modules to abstract digital hardware descriptions. Unpublished thesis proposal, Elec. Eng., Carnegie-Mellon Univ., Pittsburgh, Pa., 1977.
LEVERETT, B., CATTELL, R., HOBBS, S., NEWCOMER, J., REINER, A., SCHATZ, B., AND WULF, W. An overview of the production quality compiler-compiler project. Tech. Rep. TR 79-105, Comput. Sci., Carnegie-Mellon Univ., Pittsburgh, Pa., Feb. 1979 (condensation to appear in IEEE Comput.).
LUCKHAM, D.C., PARK, D.M.R., AND PATERSON, M.S. On formalized computer programs. J. Comput. Syst. Sci. 4, 3 (1970), 220-249.
MCKEEMAN, W.M., HORNING, J.J., AND WORTMAN, D.B. A Compiler Generator. Prentice-Hall, Englewood Cliffs, N.J., 1970.
P. L. Miller, AUTOMATIC CREATION OF A CODE GENERATOR FROM A MACHINE DESCRIPTION, Massachusetts Institute of Technology, Cambridge, MA, 1971
Joseph Michael Newcomer, Machine-independent generation of optimal local code., 1975
OAKLEY, J.D. Automatic generation of diagnostics from ISP. Unpublished thesis proposal, Comput. Sci., Carnegie-Mellon Univ., Pittsburgh, Pa., Dec. 1976.
John Denniston Oakley, Symbolic execution of formal machine descriptions, 1979
REISER, J., ET AL. SAIL Stanford Artificial Intelligence Lab. Memo. AIM-289, Comput. Sci., Stanford Univ., Stanford, Calif., 1976.
RIPKEN, K. Formale Beschreibung von Maschinen, Implementierungen und optimierender Maschinencodeerzeugung aus attributierten Programmgraphe. Dissertation, Technische Univ. Munchen, Munich, Germany, 1977.
Hanan Samet, Automatically proving the correctness of translations involving optimized code., 1975
SIMONEAUX, D.C. High-level language compiling for user-definable architectures. Ph.D. dissertation, Elec. Eng., Naval Postgraduate School, 1975.
A. Snyder, A PORTABLE COMPILER FOR THE LANGUAGE C, Massachusetts Institute of Technology, Cambridge, MA, 1975
Steven William Weingart, An efficient and systematic method of compiler code-generation., 1973
WroTE, J.R. JOSSLE: A language for specifying and structuring the semantic phase of translators. Ph.D. dissertation, Univ. California at Santa Barbara, 1973.
John Dryer Wick, Automatic generation of assemblers., 1975
Wmcox, T.R. Generating machine code for high-level programming languages. Ph.D. dissertation, Comput. Sci., Cornell Univ., Ithaca, N.Y., 1971.
William Allan Wulf , Richard K. Johnsson , Charles B. Weinstock , Steven O. Hobbs , Charles M. Geschke, The  Design of an Optimizing Compiler, Elsevier Science Inc., New York, NY, 1975
YOUNC, R. The coder: A program module for code generation in high-level language compilers. M.S. thesis, Comput. Sci., Univ. Illinois, Urbana, 1974.
