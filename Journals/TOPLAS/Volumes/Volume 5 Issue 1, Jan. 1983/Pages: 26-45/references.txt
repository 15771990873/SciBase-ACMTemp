Alfred V. Aho , John E. Hopcroft, The  Design and Analysis of Computer Algorithms, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1974
A~o, A.V., A~o ULLMAN, J.D. Principles of Compiler Design. Addison-Wesley, Reading, Mass., 1977.
ALLEN, F.E. Program optimization. In Annu. Rev. Autom. Program. 5 (1969), 239-307.
John Cocke, Programming languages and their compilers: Preliminary notes, Courant Institute of Mathematical Sciences, New York University, 1969
Robert K. Dewar , Arthur and Ssu-Cheng Liu and Jacob T. Schwartz and Edmond Schonberg, Programming by Refinement, as Exemplified by the SETL Representation Sublanguage, ACM Transactions on Programming Languages and Systems (TOPLAS), v.1 n.1, p.27-49, July 1979[doi>10.1145/357062.357064]
Robert B.K. Dewar , Edmond Schonberg, The elements of SETL style., Proceedings of the 1979 annual conference, p.24-32, January 1979[doi>10.1145/800177.810021]
DEWAR, R.B.K., SCHONBERG, E., AND SCHWARTZ, J.T. Higher Level Programming: Introduction to the Use of the Set-Theoretic Programming Language SETL. Courant Inst. of Mathematical Sciences, New York Univ., New York, 1981.
Matthew S. Hecht, Flow Analysis of Computer Programs, Elsevier Science Inc., New York, NY, 1977
Neil D. Jones , Steven S. Muchnick, Binding time optimization in programming languages: Some thoughts toward the design of an ideal language, Proceedings of the 3rd ACM SIGACT-SIGPLAN symposium on Principles on programming languages, p.77-94, January 19-21, 1976, Atlanta, Georgia[doi>10.1145/800168.811542]
KAPLAN, M.A. Relational data flow analysis. Tech. Rep. TR-243, Dep. of Electrical Engineering and Computer Science, Princeton Univ., Princeton, N.J., Apr. 1978.
Marc A. Kaplan , Jeffrey D. Ullman, A general scheme for the automatic inference of variable types, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.60-75, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512768]
KENNEDY, K.W. A survey of data flow analysis techniques. In Program Flow Analysis, S.S. Muchnick and N.D. Jones (Eds.). Prentice-Hall, Englewood Cliffs, N.J., 1981, pp. 5-54.
Donald E. Knuth, The art of computer programming, volume 1 (3rd ed.): fundamental algorithms, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 1997
Steven S. Muchnick , Neil D. Jones, Program Flow Analysis: Theory and Application, Prentice Hall Professional Technical Reference, 1981
Edmond Schonberg , Jacob T. Schwartz , Micha Sharir, An Automatic Technique for Selection of Data Representations in SETL Programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.3 n.2, p.126-143, April 1981[doi>10.1145/357133.357135]
SCHWARTZ, J.T. On Programming: An Interim Report on the SETL Project, 2d ed. Courant Inst. of Mathematical Sciences, New York Univ., New York, 1975.
SCHWARTZ, J.T. Optimization of very high level languages. J. Comput. Lang. (1975), 161-194, 197-218.
SCHWARTZ, J.T. Use-use chaining as a technique in type-finding. SETL Newsl. 140, Courant Inst. of Mathematical Sciences, New York Univ., New York, 1975.
SCHWARTZ, J.T., AND SHARm, M. A design for optimizations of the bitvectoring class. Courant Computer Science Rep. 17, Courant Inst. of Mathematical Sciences, New York Univ., New York, 1979.
TARJAN, R.E. Testing flow graph reducibility. J. Comput. Syst. Sci. 9 (1974), 355-365.
TENENBAUM, A.M. Type determination for very high level languages. Courant Computer Science Pep. 3, Courant Inst. of Mathematical Sciences, New York Univ., New York, 1974.
TsuI, W.H. A reformulation of value flow analysis. SETL Newsl. 181, Courant Inst. of Mathematical Sciences, New York Univ., New York, 1977.
Niklaus Wirth, Algorithms & data structures, Prentice-Hall, Inc., Upper Saddle River, NJ, 1985
