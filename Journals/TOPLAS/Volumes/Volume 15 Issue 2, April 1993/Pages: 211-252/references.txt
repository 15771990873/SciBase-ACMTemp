AMADIO, R., BRUCE, K., AND LONGO, G. The finitary projection model for second order lambda calculus and solutions to higher order domain equations. In Proceedings of the IEEE OEvmpostum on Logic in Computer Science, (1986), 122-130.
BARENDREG, H.P. The Lambda Calculus: frs Syntax and Semantics. 2nd ed. North-Holland, Amsterdam, 1984.
Val Breazu-Tannen , Thierry Coquand , Carl A. Gunter , Andre Scedrov, Inheritance as implicit coercion, Information and Computation, v.93 n.1, p.172-221, July 1991[doi>10.1016/0890-5401(91)90055-7]
Kim B. Bruce , Albert R. Meyer, The semantics of second order polymorphic lambda calculus., Proc. of the international symposium on Semantics of data types, p.131-156, July 1984, Sophia-Antipolis, France
Kim B. Bruce , Albert R. Meyer , John C. Mitchell, The semantics of second-order lambda calculus, Information and Computation, v.85 n.1, p.76-134, March 1990[doi>10.1016/0890-5401(90)90044-I]
Luca Cardelli, A semantics of multiple inheritance, Information and Computation, v.76 n.2-3, p.138-164, February/March 1988[doi>10.1016/0890-5401(88)90007-7]
L. Cardelli, Structural subtyping and the notion of power type, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.70-79, January 10-13, 1988, San Diego, California, United States[doi>10.1145/73560.73566]
Luca Cardelli , Peter Wegner, On understanding types, data abstraction, and polymorphism, ACM Computing Surveys (CSUR), v.17 n.4, p.471-523, Dec. 1985[doi>10.1145/6041.6042]
Robert Cartwright, Types as intervals, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.22-36, January 14-16, 1985, New Orleans, Louisiana, United States[doi>10.1145/318593.318604]
R L Constable, Implementing mathematics with the Nuprl proof development system, Prentice-Hall, Inc., Upper Saddle River, NJ, 1986
COQUAND, T. An analysis of Girard's paladox. In Proceedings of the IEEE Symposium on Logic in Computer Science (June 1986), 227 236.
Thierry Coquand , Gerard Huet, The calculus of constructions, Information and Computation, v.76 n.2-3, p.95-120, February/March 1988[doi>10.1016/0890-5401(88)90005-3]
Luis Damas , Robin Milner, Principal type-schemes for functional programs, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.207-212, January 25-27, 1982, Albuquerque, Mexico[doi>10.1145/582153.582176]
DE BRUIJN, N. G. A survey of the project Automath. In Te H B. Curry: Essays on Combmatory Logtc, Lambda Calculus and FormaDsm. Academic Press, New York, 1980, 579 607.
GIRARD, J.-Y. Interpretation fonctlonelle et eliminatlon des coupures de l'arithmetique d'ordre superieur. These D'Etat, Umversite Paris VII, 1972.
GmARD, J-Y. Une extension de l'interpretation de Godel ~ l'analyse, et son application ~ l'~hmmation des coupures dans l'analyse et la th~orie des types. In 2nd Scandmavmn Logtc Syrnposntm, J. E. Fenstad, Ed., (North-Holland, Amsterdam, 1971), 63 92.
GORDON, M. J., MmN~~, R., AND WADSWORTH C. P. Edznburgh LCF. LNCS 78, Springer, Berhn, 1979
HARPER, R., HONSELL, F., AND PLOTKIN, G. A framework for defining logics. In Proceedings of the IEEE Sympostum on Log~c zn Computer Sctence (June 1987), 194-204. Te appear m J. ACM.
HARPER, R., MAcQUEEN, D. B., AND MILNER, R Standard ML Tech. Rep. ECS-LFCS-8"-2, Lab. for Foundations of Computer Science, Univ. of Edinburgh, Mat. 1986.
R. Harper , R. Milner , M. Tofte, A type discipline for Program modules, II and Colloquium on Functional and Logic Programming and Specifications (CFLP) on TAPSOFT '87: Advanced Seminar on Foundations of Innovative Software Development, p.308-319, March 1987, Pisa, Italy
Robert Harper , John C. Mitchell , Eugenio Moggi, Higher-order modules and the phase distinction, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.341-354, December 1989, San Francisco, California, United States[doi>10.1145/96709.96744]
James G. Hook , Douglas J. Howe, Impredicative Strong Existential Equivalent to Type:Type, Cornell University, Ithaca, NY, 1986
HOWARD, W. The formulas-as-types notion of construction. In Te H. B. Curry: Essays on Combznatorv Logzc, Lambda-Calculus and Formahsm Academic Press, 1980, 479 490.
HOWE, D.J. The computational behavior of Girard's paradox. In Proceedtngs of the IEEE Symposium on Logtc ~n Computer Science (June 1987), 205 214.
K~ELL^K~S, P. C., MAmSON, H G., AND MITCHELL, J. C. Unificatmn and ML type reconstructmn In Computattonal Log~c, Essays zn Honor of Alan Robmson. MIT Press, 1991, 444 478.
A. J. Kfoury , J. Tiuryn , P. Urzyczyn, ML typability is Dexptime-complete, Proceedings of the fifteenth colloquium on CAAP'90, p.206-220, May 1990, Copenhagen, Denmark
Daniel Leivant, Polymorphic type inference, Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.88-98, January 24-26, 1983, Austin, Texas[doi>10.1145/567067.567077]
David MacQueen, Modules for standard ML, Proceedings of the 1984 ACM Symposium on LISP and functional programming, p.198-207, August 06-08, 1984, Austin, Texas, United States[doi>10.1145/800055.802036]
David B. MacQueen, Using dependent types to express modular structure, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.277-286, January 01, 1986, St. Petersburg Beach, Florida[doi>10.1145/512644.512670]
David MacQueen , Gordon Plotkin , Ravi Sethi, An ideal model for recursive polymorphic types, Information and Control, v.71 n.1-2, p.95-130, Oct/Nov. 1986[doi>10.1016/S0019-9958(86)80019-5]
MARTIN-L~F, P. An intuitionistic theory of types: Pred~chve part. In H. E. Rose and J. C. Shepherdson, Eds. Logtc Colloqutum, '73, Amsterdam, 1973, North-Holland, 73-118.
M^RTIN-L"F, P. Constructive mathematics and computer progTamming In S~xth International Congress for Logtc, Methodology, and Phdosophy of Science North-Holland, Amsterdam, 1982, 153 175
MARTIN-L~F, P. lntultzomstlc Type Theo~2~. Bibliopolis, Napoh, 1984.
Nancy Jean Mccracken, An investigation of a programming language with a polymorphic type structure., 1979
A. R. Meyer , J. C. Mitchell , E. Moggi , R. Statman, Empty types in polymorphic lambda calculus, Proceedings of the 14th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.253-262, January 21-23, 1987, Munich, West Germany[doi>10.1145/41625.41648]
Albert R. Meyer , Mark B. Reinhold, "Type" is not a type, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.287-295, January 01, 1986, St. Petersburg Beach, Florida[doi>10.1145/512644.512671]
MILNER, R. A theory of type polymorphism in programming. JCSS, 17 (1978), 348-375.
M~LNER, R. The Standard ML core language. Polymorphism 2, 2 (1985), 1-28. An earlier version appeared in Proceedings of the 1984 ACM Symposium on Lisp and Functional Programming.
Robin Milner , Mads Tofte, Commentary on standard ML, MIT Press, Cambridge, MA, 1991
Robin Milner , Mads Tofte , Robert Harper, The definition of Standard ML, MIT Press, Cambridge, MA, 1990
John C. Mitchell, A type-inference approach to reduction properties and semantics of polymorphic expressions (summary), Logical foundations of functional programming, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1990
John C. Mitchell, Polymorphic type inference and containment, Logical foundations of functional programming, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1990
John C. Mitchell, Representation independence and data abstraction, Proceedings of the 13th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.263-276, January 01, 1986, St. Petersburg Beach, Florida[doi>10.1145/512644.512669]
John C. Mitchell, Type systems for programming languages, Handbook of theoretical computer science (vol. B): formal models and semantics, MIT Press, Cambridge, MA, 1991
John C. Mitchell , Albert R. Meyer, Second-Order Logical Relations (Extended Abstract), Proceedings of the Conference on Logic of Programs, p.225-236, June 17-19, 1985
MITCHELL, J. C., AND MOGG~, E. IG'ipke-style models for typed lambda calculus. Ann. Pure Appl. Logic 51 (1991), 99 124. Preliminary version in Proceedings of the IEEE Symposium on Logic in Computer Science (1987), 303 314.
John C. Mitchell , Gordon D. Plotkin, Abstract types have existential type, ACM Transactions on Programming Languages and Systems (TOPLAS), v.10 n.3, p.470-502, July 1988[doi>10.1145/44501.45065]
MOGGI, E. A category-theoretic account of progTam modules. Math. Structures Comput. Scz. 1, i (1991), 103-139.
E. Moggi, Computational lambda-calculus and monads, Proceedings of the Fourth Annual Symposium on Logic in computer science, p.14-23, June 1989, Pacific Grove, California, United States
Atsushi Ohori, A simple semantics for ML polymorphism, Proceedings of the fourth international conference on Functional programming languages and computer architecture, p.281-292, September 11-13, 1989, Imperial College, London, United Kingdom[doi>10.1145/99370.99393]
PLOTmN, G.D. Calt-by-name, call-by-value and the lambda calculus. Theor. Comput. Sct. 1 (1975), 125-159.
PLOTKIN, G.D. LCF considered as a progTamming language. Theor. Comput. Scz. 5 (1977), 223 255.
John C. Reynolds, Towards a theory of type structure, Programming Symposium, Proceedings Colloque sur la Programmation, p.408-423, April 09-11, 1974
REYNOLDS, J.C. The essence of Algol. In Algorithmzc Languages, de Bakker and van Vliet, Eds. IFIP, North-Holland, Amsterdam, 1981, 345-372.
REYNOLD, J.C. Types, abstraction, and parametric polymorphism. In Informatzon Processing '83, North-Holland, Amsterdam, 1983, 513-523.
REYNOLDS, J. C. Polymorphism is not set-theoretic. In Proceedings of the Internattonal Symposium on Semantics of Data Types (Sophia-Antirolis, France), LNCS 173, Springer, Berlin, 1984, 145-156.
SCOTT, D. S. Relating theories of the lambda calculus. In To H. B. Curry: Essays on Combinatory Logic, Lambda Calculus and Formalism. Academic Press, 1980, 403-450.
SEEL~, R. A. G. Locally cartesian closed categories and type theory. Math. Proc. Camb. Phil. Soc. 95 (1984), 33-48.
SEELY, R. A. G. Categorical semantics for higher-order polymorphic lambda calculus. J. Symbolic Logic 52 (1987), 969-989.
STATiVlAN, R. Logical relations and the typed lambda calculu~. Ir~f. Control 65 (1985), 86 97.
Allen Stoughton, Fully abstract models of programming languages, Pitman Publishing, Inc., Marshfield, MA, 1988
TROELSTRA, M. Mathemat~cal investigation of intuitiomstic arithmetic and analysis. LNM $44~ Springer, Berlin, 1973.
TOFTE, M. Operational semantics and polymorphic type inference. Ph.D. dissertatlon~ Edinburgh Univ, 1988. Avafiable as Edinburgh Univ. Laboratory for Foundatlons of Computer Science Tech Rep. ECS-LFCS-88-54
Mitchell Wand, A types-as-sets semantics for milner-style polymorphism, Proceedings of the 11th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.158-164, January 15-18, 1984, Salt Lake City, Utah, United States[doi>10.1145/800017.800527]
