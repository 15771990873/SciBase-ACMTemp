F. E. Allen , J. Cocke, A program data flow analysis procedure, Communications of the ACM, v.19 n.3, p.137, March 1976[doi>10.1145/360018.360025]
Alfred V. Aho , Jeffrey D. Ullman, Principles of Compiler Design (Addison-Wesley series in computer science and information processing), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1977
Alfred V. Aho , Jeffrey D. Ullman, The  Theory of Parsing, Translation, and Compiling, Prentice Hall Professional Technical Reference, 1972
John Backus, Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs, Communications of the ACM, v.21 n.8, p.613-641, Aug. 1978[doi>10.1145/359576.359579]
BOURNE, S. R., BIRRELL, A., AND WALKER, I. Algol "8C Reference Manual. Cambridge University, 1975.
Richard J. Le Blanc , Charles N. Fischer, A simple separate compilation mechanism for block-structured languages, IEEE Transactions on Software Engineering, v.10 n.3, p.221-226, May 1984[doi>10.1109/TSE.1984.5010230]
COMER, D. Map: a Pascal macro preprocessor for large program development. Sofiw. Pract. Exper. 9, 3 (Mar. 1979), 203-209.
COMER, D. Principles of program design induced from experience with small public programs. IEEE Trans. Sofiw. Eng. SE-7, 2 (Mar. 1981), 169-173.
DIJKSTRA, E.W. Notes on Structured Programming. Academic Press, 1972.
FAIMAN, R. N., AND KORTESOJA, A.A. An optimizing Pascal compiler. IEEE Trans. Softw. Eng. SE-6, 6 (Nov. 1980), 512-518.
Susan L. Graham , Peter B. Kessler , Marshall K. Mckusick, Gprof: A call graph execution profiler, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.120-126, June 23-25, 1982, Boston, Massachusetts, USA[doi>10.1145/800230.806987]
Charles M. Geschke , James H. Morris, Jr. , Edwin H. Satterthwaite, Early experience with Mesa, Communications of the ACM, v.20 n.8, p.540-553, Aug. 1977[doi>10.1145/359763.359771]
JoY, W. N., GRAHAM, S. L., AND HALEY, C.B. Berkeley Pascal User's Manual, Version 2.0. Dept. of Electrical Engineering and Computer Science, Univ. of California, Berkeley, Oct. 1980.
KARP, R.M. Reducibility Among Combinatorial Problems. Plenum Press, New York, 1972.
Butler W. Lampson, Fast procedure calls, Proceedings of the first international symposium on Architectural support for programming languages and operating systems, p.66-76, March 01-03, 1982, Palo Alto, California, USA[doi>10.1145/800050.801827]
B. Liskov , R. R. Atkinson , T. Bloom , E. B. Moss , R. Schaffert , A. Snyder, CLU REFERENCE MANUAL, Massachusetts Institute of Technology, Cambridge, MA, 1979
Thomas P. Murtagh, A less dynamic memory allocation scheme for algol-like languages, Proceedings of the 11th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.283-289, January 15-18, 1984, Salt Lake City, Utah, USA[doi>10.1145/800017.800540]
Michael L. Powell, A portable optimizing compiler for Modula-2, Proceedings of the 1984 SIGPLAN symposium on Compiler construction, p.310-319, June 17-22, 1984, Montreal, Canada[doi>10.1145/502874.502905]
David A. Patterson , Carlo H. Sequin, RISC I: A Reduced Instruction Set VLSI Computer, Proceedings of the 8th annual symposium on Computer Architecture, p.443-457, May 12-14, 1981, Minneapolis, Minnesota, USA
PEREIRA, F., WARREN, D., BOWEN, D., B~mD, L., AND PEREIRA, L. CProlog User's Manual Version 1.2. SRI International, Menlo Fark, Calif.
Reference Manual for the Ada Programming Language. Tech. Rep. U.S. Dept. of Defense, Feb. 1983.
ROLLINS, E.J. A syntax analyzer constructor. Tech. Rep. Oregon Graduate Center, Beaverton, Ore., Aug. 1982.
ROSEN, B.K. Robust linear algorithms for cutsets. J. Algorithms 3 (1982), 205-213.
SHAMIR, A. A linear time algorithm for finding minimum cutsets in reducible graphs. SIAM J. Comput. 8, 4 (Nov. 1979), 645-655.
TURNER, D. A., AND CAMPBELL, R.W. SASL Language Reference Manual. Tech. Rep. Dept. of Computational Science, St. Andrews Univ., 1979.
UCB. UNIX Programmer's Manual, 4.2 BSD. Dept. of Electrical Engineering and Computer Science, Univ. of California, Berkeley, Aug. 1983.
Kenneth G. Walter, Recursion analysis for compiler optimization, Communications of the ACM, v.19 n.9, p.514-516, Sept. 1976[doi>10.1145/360336.360341]
Niklaus Wirth, Program development by stepwise refinement, Communications of the ACM, v.14 n.4, p.221-227, April 1971[doi>10.1145/362575.362577]
