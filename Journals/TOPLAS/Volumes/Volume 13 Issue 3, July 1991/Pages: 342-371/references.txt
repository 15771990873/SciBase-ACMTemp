Antonio Albano , Luca Cardelli , Renzo Orsini, GALILEO:  a strongly-typed, interactive conceptual language, ACM Transactions on Database Systems (TODS), v.10 n.2, p.230-260, June 1985[doi>10.1145/3857.3859]
Malcolm P. Atkinson , Ronald Morrison, Procedures as persistent data objects, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.4, p.539-559, Oct. 1985[doi>10.1145/4472.4477]
ATKINSON, M. P., BAILEY, P. J., CHISItOLM, K. J., COCKSHOTT, W. P., AND MORRISON, R. An approach to persistent programming. Comput. J. 26, 4 (Nov. 1983), 360-365.
BmTWlSTLE, G. M., DAHL, O. J., MYRHAUG, B., AND NYGAARD, K. SIMULA BEGIN. Auerbach, Pennsauken, N.J., 1973.
BOEHM, B.W. Understanding and controlling software costs. In Tenth IFIP World Congress (Dublin, Ireland, Sept. 1-5, 1986). North-Holland, Amsterdam, 1986, pp. 703-714.
BROWN, A. L., CARRICK, R., CONNOR, R. C. H., DEARLE, A., AND MORRISON, R. The persistent abstraet machine. Res. Rep. PPRR-59-88, Dept. of Computational Science, Unir. of St. Andrews, Scotland, 1988. (Also published by the Unir. of Glasgow, Scotland.)
R. Burstall , B. Lampson, A kernel language for abstract data types and modules., Proc. of the international symposium on Semantics of data types, p.1-50, July 1984, Sophia-Antipolis, France
R. M. Burstall , D. B. MacQueen , D. T. Sannella, HOPE: An experimental applicative language, Proceedings of the 1980 ACM conference on LISP and functional programming, p.136-143, August 25-27, 1980, Stanford University, California, United States[doi>10.1145/800087.802799]
CARD~LLI, L. The functional ab~tract machine. Polymorph~m 'Eew~l. 1, 1 (Jan. 1983).
CARDELLI, L. Basic polymorphic type checking. Polymorphism Newsl. 2, I (Jan. 1984). (Also Tech. Rep. 119, AT&T Bell Labs.)
Luca Cardelli, A semantics of multiple inheritance., Proc. of the international symposium on Semantics of data types, p.51-67, July 1984, Sophia-Antipolis, France
Luca Cardelli , Peter Wegner, On understanding types, data abstraction, and polymorphism, ACM Computing Surveys (CSUR), v.17 n.4, p.471-523, Dec. 1985[doi>10.1145/6041.6042]
CONNO~, R. C. H. The Napier type checking module. Res. Rep. PPRR-58-88, Dept. of Computational Science, Univ. of St. Andrews, Scotland, 1988. (Also published by Univ. of Glasgow, Scotland.)
R. C. H. Conner , A. Dearle , R. Morrison , A. L. Brown, An object addressing mechanism for statically typed languages with multiple inheritance, ACM SIGPLAN Notices, v.24 n.10, p.279-285, Oct. 1989[doi>10.1145/74878.74906]
Richard Connor , Alan Dearle , Ronald Morrison , Fred Brown, Existentially quantified types as a database viewing mechanism, Proceedings of the international conference on extending database technology on Advances in database technology, p.301-315, March 1990, Venice, Italy
Richard C. H. Connor , Alfred L. Brown , Raymund Carrick , Alan Dearle , Ronald Morrison, The Persistent Abstract Machine, Proceedings of the Third International Workshop on Persistent Object Systems, p.353-366, January 10-13, 1989
Luis Damas , Robin Milner, Principal type-schemes for functional programs, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.207-212, January 25-27, 1982, Albuquerque, Mexico[doi>10.1145/582153.582176]
A. Dearle , A. L. Brown, Safe browsing in a strongly typed persistent environment, The Computer Journal, v.31 n.6, p.540-544, December 1988[doi>10.1093/comjnl/31.6.540]
EMERS, A., AND DONAH~E, J. Revised report on Russell. Tech. Rep. TR79-389, Dept. of Computer Science, Cornell Univ., Ithaca, N Y , 1979.
FAmBAmN, J. Ponder and its type system Tech. Rep. 31, Dept. of Computer Science, Univ. of Cambridge, U.K., Nov. 1982.
J. Fairbairn, A new type-checker for a functional language, Data types and persistence, Springer-Verlag, London, 1988
Adele Goldberg , David Robson, Smalltalk-80:  the language and its implementation, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1983
Michael Hammer , Dennis Mc Leod, Database description with SDM: a semantic database model, ACM Transactions on Database Systems (TODS), v.6 n.3, p.351-386, Sept. 1981[doi>10.1145/319587.319588]
HAUCK, E. A., AND DENT, B.A. Burroughs B6500/6700 stack mechanism. AFIPS SJCC 32 (Atlantic City, N.J., Apr. 30-May 2, 1968), pp. 245-252.
HUDAK, P., WADLER, P., ARVIND, BOUTEL, B., FAIRBAIN, J., FASEL, J., HAMMOND, K., HUGHES, J., JOHNSON, T., KIEBURTZ, D., NIKHIL, R., PEYTON JONES, S., REEVES, M, WISE, D., AND YOUNG, J. Report on the functional programming language Haskell. Dept. of Computer Science, Glasgow Univ., Scotland, Apr. 1990. (Also published by Yale Univ., New Haven, Conn.)
ICHBIAH ET AL. The Programmmg Language Ada Reference Manual. Lecture Notes in Computer Science, vol. 155. Springer-Verlag, New York, 1983.
John B. Johnston, The contour model of block structured processes, ACM SIGPLAN Notices, v.6 n.2, February 1971[doi>10.1145/1115880.1115883]
Stefan Kaes, Parametric Overloading in Polymorphic Programming Languages, Proceedings of the 2nd European Symposium on Programming, p.131-144, March 21-24, 1988
B Liskov , E Moss , A Snyder , R Atkinson , J C. Schaffert , T Bloom , R Scheifler, CLU reference manual, Springer-Verlag New York, Inc., New York, NY, 1984
MATTHEWS, D. C. J. Poly manual. Tech. Rep. 65, Dept. of Computer Science, Univ. of Cambridge, U.K., 1985.
MmNER, R. A proposal for standard ML. Tech. Rep. CSR-157-83, Dept. of Computer Science, Univ. of Edinburgh, Scotland, 1983.
MmNER, R. A theory of type polymorphism in programming. J. Comput Syst. Sci. 17, (1978), 348-375.
John C. Mitchell , Gordon D. Plotkin, Abstract types have existential types, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.37-51, January 14-16, 1985, New Orleans, Louisiana, United States[doi>10.1145/318593.318606]
MORRISON, R., BROWN, A. L., CONNOR, R. C. H., AND DEARLE, A. The Napier88 Reference Manual. Res. Rep. PPRR-77-89, Dept. of Computational Science, Univ. of St. Andrews, Scotland, 1989. (Also published by the Univ. of Glasgow, Scotland.)
R. Morrison , A. L. Brown , R. Carrick , R. C. H. Connor, Polymorphism, persistence and software re-use in a strongly typed object-oriented environment, Software Engineering Journal, v.2 n.6, p.199-204, Nov., 1987[doi>10.1049/sej.1987.0026]
Ronald Morrison , Alfred L. Brown , Raymund Carrick , Richard C. H. Connor , Alan Dearle , Malcolm P. Atkinson, The Napier Type System, Proceedings of the Third International Workshop on Persistent Object Systems, p.3-18, January 10-13, 1989
David Stemple , Leo Fegaras , Tim Sheard , Adolfo Socorro, Exceeding the limits of polymorphism in database programming languages, Proceedings of the international conference on extending database technology on Advances in database technology, p.269-285, March 1990, Venice, Italy
STRACHE~, C. Fundamental Concepts ~n Programming Languages. Oxford University Press, Oxford, U.K., 1967.
TURNER, D. A. SASL language manual. Rep. CS/79/3, Dept. of Computational Science, Univ. of St. Andrews, Scotland, 1979.
TURNER, D.A. Miranda System Manual. Research Software, Ltd., Canterbury, England, 1987.
J. C. van Vliet , H. M. Gladney, An evaluation of tagging, Softwareâ€”Practice & Experience, v.15 n.9, p.823-837, Sept. 1985[doi>10.1002/spe.4380150902]
P. Wadler , S. Blott, How to make ad-hoc polymorphism less ad hoc, Proceedings of the 16th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.60-76, January 11-13, 1989, Austin, Texas, United States[doi>10.1145/75277.75283]
