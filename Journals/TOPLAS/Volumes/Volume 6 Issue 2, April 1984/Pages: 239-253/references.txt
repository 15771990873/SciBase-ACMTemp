BRINCH, H.P. Operating Systems Principles. Prentice Hall, Englewood Cliffs, N.J., 1973.
Ole Johan Dahl, Structured Programming, Academic Press, Inc., Orlando, FL, 1972
DIJKSTRA, F,. Co-operating Sequential Processes. In Programming Languages, Genuys, F. Ed. Academic Press, New York, 1968.
HAILPERN, B. AND OWICKI, S. Verifying Network Protocols Using Temporal Logic. In Proceedings of the NBS Symposium on Computer Network Protocols (Gaithersburg, Md.), National Bureau of Standards, Washington, D.C., 1980.
R. T. Hailpern, Verifying Concurrent Processes Using Temporal Logic, Springer-Verlag New York, Inc., Secaucus, NJ, 1982
C. A. R. Hoare, Monitors: an operating system structuring concept, Communications of the ACM, v.17 n.10, p.549-557, Oct. 1974[doi>10.1145/355620.361161]
John H. Howard, Signaling in monitors, Proceedings of the 2nd international conference on Software engineering, p.47-52, October 13-15, 1976, San Francisco, California, United States
KARP, R. Proving Operating Systems Correct. UMi Research Press, Ann Arbor, Mich., 1983.
J. L. W. Kessels, An alternative to event queues for synchronization in monitors, Communications of the ACM, v.20 n.7, p.500-503, July 1977[doi>10.1145/359636.359710]
Leslie Lamport, "Sometime" is sometimes "not never": on the temporal logic of programs, Proceedings of the 7th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.174-185, January 28-30, 1980, Las Vegas, Nevada[doi>10.1145/567446.567463]
MITCHELL, J., MAYBURY, M., AND SWEET, R. Mesa Language Manual. Xerox Palo Alto Research Center, Palo Alto, Calif., 1979.
Susan Owicki , Leslie Lamport, Proving Liveness Properties of Concurrent Programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.455-495, July 1982[doi>10.1145/357172.357178]
PNEULI, A. The Temporal Logic of Programs. In Proceedings o{ the 18th Annual Symposium on the Foundations o{ Computer Science, (Washington, D.C.), IEEE, New York, 1977.
Amir Pnueli, The Temporal Semantics of Concurrent Programs, Proceedings of the International Sympoisum on Semantics of Concurrent Computation, p.1-20, July 02-04, 1979
THOMPSON, K. Unix implementation. Bell Syst. Tech. J. 57, 6 (1978).
WIRTH, N. MODULA: A Language for Modular Multiprogramming. ETH, Zurich, 1976.
