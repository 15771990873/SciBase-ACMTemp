AIELLO, L. An efficient interpreter for the lambda-calculus. J. Comput. Syst. Sci. 23 (1981), 383-424.
John Backus, Can programming be liberated from the von Neumann style?: a functional style and its algebra of programs, Communications of the ACM, v.21 n.8, p.613-641, Aug. 1978[doi>10.1145/359576.359579]
BURGE, W.H. Recursive Programming Techniques. Addison-Wesley, Reading, Mass., 1975.
BURSTALL, R.M., MACQUEEN, D.B., ANO SANNELLA, D.T. HOPE: An experimental applicative language. Rep. CSR-62-80, Dept. of Computer Science, Univ. of Edinburgh, Edinburgh, Scotland, May, 1980.
BURTON, F.W. A linear space translation of functional programs to Turner combinators. Inf. Process. Lett. 14, 5 (July 23, 1982), 201-204.
F. W. Burton, Storage Management in Virtual Tree Machines, IEEE Transactions on Computers, v.37 n.3, p.321-328, March 1988[doi>10.1109/12.2169]
T. J.W. Clarke , P. J.S. Gladstone , C. D. MacLean , A. C. Norman, SKIM - The S, K, I reduction machine, Proceedings of the 1980 ACM conference on LISP and functional programming, p.128-135, August 25-27, 1980, Stanford University, California, United States[doi>10.1145/800087.802798]
Computer 15, 2 (Feb. 1982) entire issue.
DENNIS, J.B. Data flow supercomputers. Computer 13, 11 (Nov. 1980), 48-56.
Martin S. Feather, A System for Assisting Program Transformation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.1, p.1-20, Jan. 1982[doi>10.1145/357153.357154]
FREEDMAN, D.P., AND WISE, D.S. Cons should not evaluate its arguments. In Automata, Languages and Programming, S. Michaelson and R. Milner, Eds. Edinburgh University Press, Edinburgh, Scotland, 1976, pp. 257-284.
GOSTELOW, K.P., AND THOMAS, R.E. Preformance of a simulated datafiow computer. IEEE Trans. Comput. C-29, 10 (Oct. 1980), 905-919.
Peter Henderson, Functional Programming, Prentice Hall PTR, Upper Saddle River, NJ, 1980
Peter Henderson , James H. Morris, Jr., A lazy evaluator, Proceedings of the 3rd ACM SIGACT-SIGPLAN symposium on Principles on programming languages, p.95-103, January 19-21, 1976, Atlanta, Georgia[doi>10.1145/800168.811543]
HOROWlTZ, E., AND SAHNI, S. Fundamentals o{ Computer Algorithms. Computer Science Press, Potomac, Md., 1978.
KAHN, G., AND MACQUEEN, D. Coroutined and Networks of parallel processes. Pep. 202, IRIA, Le Chesnay, France, Nov. 1976.
LANDIN, P.J. The mechanical evaluation of expressions. Comput. J. 6, 4 (Nov. 1963), 308-320.
James R. McGraw, The VAL Language: Description and Analysis, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.1, p.44-82, Jan. 1982[doi>10.1145/357153.357157]
R. L. Page , M. G. Conant , D. H. Grit, If-then-else as a concurrency inhibitor in eager beaver evaluation of recursive programs, Proceedings of the 1981 conference on Functional programming languages and computer architecture, p.179-186, October 18-22, 1981, Portsmouth, New Hampshire, United States[doi>10.1145/800223.806777]
SCHWARZ, J. Using annotations to make recursive equations behave. IEEE Trans. So{tw. Eng. SE-8, 1 (Jan. 1982), 21-33.
Joseph E. Stoy, Denotational Semantics: The Scott-Strachey Approach to Programming Language Theory, MIT Press, Cambridge, MA, 1977
TURNER, D.A. A new implementation technique for applicative languages. So{tw. Pract. Exper. 9 (1979), 31-49.
TURNER, D.A. Another algorithm for bracket abstraction. J. Symbolic Logic 44, 3 (Dec. 1978), 67-70.
WADSWOI~TH, C.P. Semantics and Pragmatics o{ the Lambda-Calculus. Ph.D. dissertation, Programming Research Group, Oxford Univ., 1971.
