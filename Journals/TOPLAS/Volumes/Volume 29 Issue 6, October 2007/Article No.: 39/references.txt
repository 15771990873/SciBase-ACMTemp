Andrew W. Appel, Foundational Proof-Carrying Code, Proceedings of the 16th Annual IEEE Symposium on Logic in Computer Science, p.247, June 16-19, 2001
Andrew W. Appel , Amy P. Felty, A semantic model of types and machine instructions for proof-carrying code, Proceedings of the 27th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.243-253, January 19-21, 2000, Boston, MA, USA[doi>10.1145/325694.325727]
Thomas Ball , Rupak Majumdar , Todd Millstein , Sriram K. Rajamani, Automatic predicate abstraction of C programs, Proceedings of the ACM SIGPLAN 2001 conference on Programming language design and implementation, p.203-213, June 2001, Snowbird, Utah, USA[doi>10.1145/378795.378846]
Thomas Ball , Sriram K. Rajamani, Automatically validating temporal safety properties of interfaces, Proceedings of the 8th international SPIN workshop on Model checking of software, p.103-122, May 2001, Toronto, Ontario, Canada
Frédéric Besson , Thomas Jensen , Tiphaine Turpin, Small witnesses for abstract interpretation-based proofs, Proceedings of the 16th European conference on Programming, March 24-April 01, 2007, Braga, Portugal
François Bourdoncle, Abstract debugging of higher-order imperative languages, Proceedings of the ACM SIGPLAN 1993 conference on Programming language design and implementation, p.46-55, June 21-25, 1993, Albuquerque, New Mexico, USA[doi>10.1145/155090.155095]
Edmund M. Clarke , Orna Grumberg , Somesh Jha , Yuan Lu , Helmut Veith, Counterexample-Guided Abstraction Refinement, Proceedings of the 12th International Conference on Computer Aided Verification, p.154-169, July 15-19, 2000
Edmund M. Clarke, Jr. , Orna Grumberg , Doron A. Peled, Model checking, MIT Press, Cambridge, MA, 2000
Agostino Cortesi , Gilberto Filé , William Winsborough, The quotient of an abstract interpretation, Theoretical Computer Science, v.202 n.1-2, p.163-192, July 1998[doi>10.1016/S0304-3975(97)00137-0]
Cousot, P. 1981. Semantic foundations of program analysis. In Program Flow Analysis: Theory and Applications, S. Muchnick and N. Jones, Eds. Prentice-Hall, Inc., Englewood Cliffs, NJ, Chapter 10, 303--342.
Cousot, P. 1998. The calculational design of a generic abstract interpreter. In Course notes for the NATO International Summer School Marktoberdorf (Germany) on Calculational System Design, M. Broy and R. Steinbrüggen, Eds. NATO ASI Series F. IOS Press, Amsterdam.
Cousot, P. 2005. Abstract interpretation. MIT course 16.399, http://web.mit.edu/16.399/www/.
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
Patrick Cousot , Radhia Cousot, Systematic design of program analysis frameworks, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.269-282, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567778]
Patrick Cousot , Radhia Cousot, Refining Model Checking by Abstract Interpretation, Automated Software Engineering, v.6 n.1, p.69-95, January 1999[doi>10.1023/A:1008649901864]
Dennis Dams , Rob Gerth , Orna Grumberg, Abstract interpretation of reactive systems, ACM Transactions on Programming Languages and Systems (TOPLAS), v.19 n.2, p.253-291, March 1997[doi>10.1145/244795.244800]
Davey, D. A. and Priestley, H. A. 1990. Introduction to Lattices and Order. Cambridge University Press.
Kei Davis , Philip Wadler, Backwards Strictness Analysis: Proved and Improved, Proceedings of the 1989 Glasgow Workshop on Functional Programming, p.12-30, August 21-23, 1989
Evelyn Duesterwald , Rajiv Gupta , Mary Lou Soffa, Demand-driven computation of interprocedural data flow, Proceedings of the 22nd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.37-48, January 23-25, 1995, San Francisco, California, USA[doi>10.1145/199448.199461]
Gilberto Filé , Roberto Giacobazzi , Francesco Ranzato, A unifying view of abstract domain design, ACM Computing Surveys (CSUR), v.28 n.2, p.333-336, June 1996[doi>10.1145/234528.234742]
Roberto Giacobazzi , Isabella Mastroeni, Abstract non-interference: parameterizing non-interference by abstract interpretation, Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.186-197, January 14-16, 2004, Venice, Italy[doi>10.1145/964001.964017]
Roberto Giacobazzi , Francesco Ranzato, Refining and Compressing Abstract Domains, Proceedings of the 24th International Colloquium on Automata, Languages and Programming, p.771-781, July 07-11, 1997
Roberto Giacobazzi , Francesco Ranzato, The reduced relative power operation on abstract domains, Theoretical Computer Science, v.216 n.1-2, p.159-211, March 11, 1999[doi>10.1016/S0304-3975(98)00194-7]
Roberto Giacobazzi , Francesco Ranzato , Francesca Scozzari, Making abstract interpretations complete, Journal of the ACM (JACM), v.47 n.2, p.361-416, March 2000[doi>10.1145/333979.333989]
Roberto Giacobazzi , Francesca Scozzari, A logical model for relational abstract domains, ACM Transactions on Programming Languages and Systems (TOPLAS), v.20 n.5, p.1067-1109, Sept. 1998[doi>10.1145/293677.293680]
Susanne Graf , Hassen Saïdi, Construction of Abstract State Graphs with PVS, Proceedings of the 9th International Conference on Computer Aided Verification, p.72-83, June 22-25, 1997
Nadeem A. Hamid , Zhong Shao , Valery Trifonov , Stefan Monnier , Zhaozhong Ni, A Syntactic Approach to Foundational Proof-Carrying Code, Proceedings of the 17th Annual IEEE Symposium on Logic in Computer Science, p.89-100, July 22-25, 2002
Thomas A. Henzinger , Ranjit Jhala , Rupak Majumdar , Grégoire Sutre, Lazy abstraction, Proceedings of the 29th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.58-70, January 16-18, 2002, Portland, Oregon[doi>10.1145/503272.503279]
Thomas A. Henzinger , Ranjit Jhala , Rupak Majumdar , Grégoire Sutre, Software verification with BLAST, Proceedings of the 10th international conference on Model checking software, p.235-239, May 09-10, 2003, Portland, OR, USA
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Howe, J. M., King, A., and Lu, L. 2004. Analysing logic programs by reasoning backwards. In Program Development in Computational Logic. Lecture Notes in Computer Science, vol. 3049. Springer-Verlag, 152--188.
Hughes, J. 1988. Backwards analysis of functional programs. In Proceedings of the IFIP TC2 Workshop on Partial Evaluation and Mixed Computation. Elsevier, 187--208.
John Hughes , John Launchbury, Reversing abstract interpretations, Symposium proceedings on 4th European symposium on programming, p.269-286, January 1992, Rennes, France
Andy King , Lunjin Lu, A backward analysis for constraint logic programs, Theory and Practice of Logic Programming, v.2 n.4-5, p.517-547, July 2002[doi>10.1017/S1471068402001436]
Massé, D. 2001. Combining forward and backward analyses of temporal properties. In Proceedings of the 2nd Symposium on Programs as Data Objects (PADO). Lecture Notes in Computer Science, vol. 2053. Springer-Verlag, 103--116.
Miné, A. 2001. A new numerical abstract domain based on difference-bound matrices. In Proceedings of the 2nd Symposium on Programs as Data Objects (PADO). Lecture Notes in Computer Science, vol. 2053. Springer-Verlag, 155--172.
Greg Morrisett , David Walker , Karl Crary , Neal Glew, From system F to typed assembly language, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.85-97, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268954]
George C. Necula, Proof-carrying code, Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.106-119, January 15-17, 1997, Paris, France[doi>10.1145/263699.263712]
Necula, G. C. and Lee, P. 1997. Safe, untrusted agents using proof-carrying code. In Special Issue on Mobile Agent Security, G. Vigna, Ed. Lecture Notes in Computer Science, vol. 1419. Springer-Verlag, 61--91.
George C. Necula , S. P. Rahul, Oracle-based checking of untrusted software, Proceedings of the 28th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.142-154, January 2001, London, United Kingdom[doi>10.1145/360204.360216]
George C. Necula , Robert R. Schneck, Proof-carrying code with untrusted proof rules, Proceedings of the 2002 Mext-NSF-JSPS international conference on Software security: theories and systems, November 08-10, 2002, Tokyo, Japan
Xavier Rival, Abstract dependences for alarm diagnosis, Proceedings of the Third Asian conference on Programming Languages and Systems, November 02-05, 2005, Tsukuba, Japan[doi>10.1007/11575467_23]
Xavier Rival, Understanding the origin of alarms in ASTRÉE, Proceedings of the 12th international conference on Static Analysis, September 07-09, 2005, London, UK[doi>10.1007/11547662_21]
Seo, S., Yang, H., and Yi, K. 2003. Automatic construction of Hoare proofs from abstract interpretation results. In Proceedings of the Asian Symposium on Programming Languages and Systems (APLAS). Lecture Notes in Computer Science, vol. 2895. Springer-Verlag, 230--245.
Tip, F. 1995. A survey of program slicing techniques. J. Program. Lang. 3, 3, 121--189.
Philip Wadler , R. J. M. Hughes, Projections for strictness analysis, Proc. of a conference on Functional programming languages and computer architecture, p.385-407, October 1987, Portland, Oregon, USA
Yang, H., Seo, S., Yi, K., and Han, T. 2006. Off-line semantic slicing from abstract interpretation results. Tech. mem. ROPAS-2006-34, Programming Research Laboratory, School of Computer Science & Engineering, Seoul National University. Available at http://ropas.snu.ac.kr/lib/dock/YaSeYiHa2006.pdf.
