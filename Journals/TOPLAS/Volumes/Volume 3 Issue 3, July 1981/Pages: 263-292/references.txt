Henry C. Baker, Jr. , Carl Hewitt, The incremental garbage collection of processes, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.55-59, August 15-17, 1977[doi>10.1145/800228.806932]
BERRY, D.M., CHIRICA, L.M., JOHNSTON, J.B., MARTIN, D.F., AND SORKIN, A. Time required for reference count management in retention block-structured languages. Int. J. Comput. Inf. Sci. 7, I (1978), 11-64 (Part 1); 7, 2 (1978), 91-119 (Part 2).
BERRY, D.M., ANO SORKIN, A. Time required for garbage collection in retention block-structured languages. Int. J. Comput. Inf. Sci. 7, 4 (1978), 361-404.
Daniel G. Bobrow , Ben Wegbreit, A model and stack implementation of multiple environments, Communications of the ACM, v.16 n.10, p.591-603, Oct. 1973[doi>10.1145/362375.362379]
CLINT, M. Program proving: Coroutines. Acta Inf. 2 (1973), 50-63.
Melvin E. Conway, Design of a separable transition-diagram compiler, Communications of the ACM, v.6 n.7, p.396-408, July 1963[doi>10.1145/366663.366704]
DAHL, O.-J. An approach to correctness proofs of semicoroutines. In Programming Methodology, D. Gries (Ed.), SpringeroVerlag, New York, 1978, pp. 116-129.
Ole-Johan Dahl, SIMULA 67 common base language, (Norwegian Computing Center. Publication), 1968
FRIEDMAN, D.P., AND WISE, D.S. CONS should not evaluate its arguments. Tech. Rep. 44, Dep. Computer Science, Indiana Univ., Bloomington, Ind., Nov. 1975.
Ralph E. Griswold , David R. Hanson, Language facilities for programmable backtracking, Proceedings of the 1977 symposium on Artificial intelligence and programming languages, p.94-99, August 15-17, 1977[doi>10.1145/800228.806937]
David R. Hanson , Ralph E. Griswold, The SL5 procedure mechanism, Communications of the ACM, v.21 n.5, p.392-400, May 1978[doi>10.1145/359488.359502]
Daniel H. H. Ingalls, The Smalltalk-76 programming system design and implementation, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.9-16, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512762]
KAHN, G., AND MAcQUEEN, D. Coroutines and networks of parallel processes. IRIA/LABORIA Res. Rep. 202, Le Chesnay, France, Nov. 1976.
KR~EG, B. A class of recursive coroutines. In IFIP Congress 74 (Software Booklet), North- Holland, Amsterdam, 1974, pp. 408-412.
LINDSTROM, G., AND SOFFA, M.L. Control discipline necessity: Making the language as general as the implementation. In preparation.
MCDERMOTr, D., AND SUSSMAN, G.J. The CONNIVER reference manual. MIT AI Lab. Memo. 259, MIT, Cambridge, Mass., May 1972.
MCILROY, M.D. Coroutines: Semantics in search of a syntax. Unpublished manuscript, 1968.
Nora, A.K. A storage reclamation scheme for Applicative Multi-Processing System AMPS. M.S. thesis, Dep. Computer Science, Univ. Utah, Salt Lake City, Sept. 1979.
Brian Randall , Lawford J. Russell, Algol-60 Implementation, Academic Press, Inc., Orlando, FL, 1964
H. Schorr , W. M. Waite, An efficient machine-independent procedure for garbage collection in various list structures, Communications of the ACM, v.10 n.8, p.501-506, Aug. 1967[doi>10.1145/363534.363554]
VAN WIJNGAARDEN, A., MAILLOUX, B.J., PECK, J.E.L., KOSTER, C.H.A., SINTZOFF, M., LINDSEY, C.H., MEERTENS, L.G.L.T., AND FISKER, R.G. Revised report on the algorithmic language Algol 68. ALGOL Bull. 36 (March 1974), suppl.
VANEK, L.I. Hierarchical coroutines: A mechanism for improved program structure. Tech. Rep. 99, Computer Systems Research Group, Univ. Toronto, Ontario, Feb. 1979.
WANG, A., AND DAHL, O.-J. Coroutine sequencing in a block-structured environment. BIT 11 (1971), 425-449.
