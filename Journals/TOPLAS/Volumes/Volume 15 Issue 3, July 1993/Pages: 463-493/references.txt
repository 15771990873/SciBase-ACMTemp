ABRAMSKY, A. Abstract mterpretation, logical relations and Kan extensions. Logic Comput 1, i (1990), 5-40.
ABRAMSIxoE, S., AND HANKIN, C., EDS. Abstract Interpretahon ofDeclarative Languages. Elhs ttorwood, 1987.
Andrew Berlin, Partial evaluation applied to numerical computation, Proceedings of the 1990 ACM conference on LISP and functional programming, p.139-150, June 27-29, 1990, Nice, France[doi>10.1145/91556.91612]
B~0RNER, D., ERSHOV, A. P., AND JONES, N. D., EDS. Partial Evaluation and Mixed Computation. North-Holland, 1988.
R. M. Burstall , John Darlington, A Transformation System for Developing Recursive Programs, Journal of the ACM (JACM), v.24 n.1, p.44-67, Jan. 1977[doi>10.1145/321992.321996]
COLBY, C., AND LEE, P. An implementation of parameterized partial evaluation. Bigre J. 74 (1991), 82-89.
CONSEL, C. Analyse de Programmes, Evaluation Partielle et G~n~ration de Compilateurs. Ph.D. thesis, Univ. de Paris VI, Paris, France, June 1989.
Charles Consel, Binding time analysis for high order untyped functional languages, Proceedings of the 1990 ACM conference on LISP and functional programming, p.264-272, June 27-29, 1990, Nice, France[doi>10.1145/91556.91668]
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
PÃ¤r Emanuelson , Anders Haraldsson, On compiling embedded languages in LISP, Proceedings of the 1980 ACM conference on LISP and functional programming, p.208-215, August 25-27, 1980, Stanford University, California, United States[doi>10.1145/800087.802808]
FUTAMURA, Y., AND NOG{, K. Generalized partial computat}on. In Partial Evaluation and Mixed Computatwn. D. Bj0rner, A. P. Ershov, and N. D. Jones, Eds. North-Holland, 1988.
on Programs as data objects, April 1986
GuzowsKI, M.A. Toward developing a refiexive partial evaluator for an interesting subset of Lisp. Master's thesis, Dept. of Computer Engineering and Science, Case Western Reserve Univ., Cleveland, Ohio, 1988.
HARALDSSON, A. A program manipulation system based on partial evaluation. Ph.D. thesis, Link"ping Univ., Sweden, 1977. Link"ping Studies in Science and Technology Dissertations 14.
JONES, N. D., AND NIELSON, F. Abstract interpretation: A semantics-based tool for program analysis. Tech. Rep. Univ. of Copenhagen and Aarhus Univ., Copenhagen, Denmark, 1990.
JONES, N. D., SESTOFT, P., AND S~NPERGAARD, H. Mix: A self-applicable partial evaluator for experiments in compiler generation. Ltsp Symb. Comput. 2 (1989), 9-50.
AEoo, S.C. Parameterized partial evaluation: theory and practice. Ph.D. thesis, Yale Univ. 1992. June 1992. Also Res. Rep. 926.
LAUNCHBURY, J. Projection factorisation in partial evaluation. Ph.D. thesis, Dept. of Computing Science, Univ. of Glasgow, Scotland, 1990.
F. Nielson, Two-level semantics and abstract interpretation, Theoretical Computer Science, v.69 n.2, p.117-242, Dec. 11, 1989[doi>10.1016/0304-3975(89)90091-1]
David A. Schmidt, Denotational semantics: a methodology for language development, William C. Brown Publishers, Dubuque, IA, 1986
SCHOOLER, R. Partial evaluation as a means oflanguage extensibility. Master's thesis, MIT, 1984.
Peter. Sestoft, The structure of a self-applicable partial evaluator,  on Programs as data objects, p.257-281, April 1986, Copenhagen, Denmark
SESTOFT, P. Annotated bibliography on partial evaluation and mixed computation. Diku report, Univ. of Copenhagen, Copenhagen, Denmark, 1990.
Akihiko Takano, Generalized partial computation for a lazy functional language, Proceedings of the 1991 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, p.1-11, June 17-19, 1991, New Haven, Connecticut, United States[doi>10.1145/115865.115867]
Daniel Weise , Roland Conybeare , Erik Ruf , Scott Seligman, Automatic online partial evaluation, Proceedings of the 5th ACM conference on Functional programming languages and computer architecture, p.165-191, June 1991, Cambridge, Massachusetts, United States
Daniel Weise , Erik Ruf, Computing Types During Program Specialization, Stanford University, Stanford, CA, 1990
