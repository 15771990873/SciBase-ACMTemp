ANDREWS, D. A formal definition of Modula-2, 1989. Intermediate draft Doc. D91 of the ISO working-group TC97/SC22/WG13, 1989.
Isabelle Attali, Compiling TYPOL with Attribute Grammars, Proceedings of the 1st International Workshop on Programming Language Implementation and Logic Programming, p.252-272, May 16-18, 1988
Rolf Bahlke , Gregor Snelting, The PSG system: from formal language definitions to interactive programming environments, ACM Transactions on Programming Languages and Systems (TOPLAS), v.8 n.4, p.547-576, Oct. 1986[doi>10.1145/6465.20890]
Robert A Ballance, Syntactic and Semantic Checking in, University of California at Berkeley, Berkeley, CA, 1989
L. Cardelli , J. Donahue , M. Jordan , B. Kalsow , G. Nelson, The Modulaâ€“3 type system, Proceedings of the 16th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.202-212, January 11-13, 1989, Austin, Texas, United States[doi>10.1145/75277.75295]
CHANG, C., ANO KEISLER, H. Model Theory. 2nd ed. North-Holland, Amsterdam, 1977.
Pierre Deransart , Martin Jourdan , Bernard Lorho, Attribute grammars: definitions, systems and bibliography, Springer-Verlag New York, Inc., New York, NY, 1988
DESPEYROUX, T. Executable specification of static semantics. In Proceedings of the International Symposium on Semantics of Data Types. Lecture Notes in Computer Science, vol. 173. Springer-Verlag, New York, 1984, 215 233.
GIEGEmC}~, R. Introduction to the compiler generating system Mug2. Tech. Rep. TUM-INFO 7913, Institut ~-r Mathematik und Informatik, Technische Universit~t M~nchen, Germany, 1979.
W. M. Waite , G. Goos, Compiler Construction, Springer-Verlag New York, Inc., Secaucus, NJ, 1985
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Charles Antony Richard Hoare, The emperor's old clothes, Communications of the ACM, v.24 n.2, p.75-83, Feb. 1981[doi>10.1145/358549.358561]
Richard C. Holt , Philip A. Matthews , J. Alan Rosselet , James R. Cordy, The Turing programming language: design and definition, Prentice-Hall, Inc., Upper Saddle River, NJ, 1987
Thomas Johnsson, Attribute grammars as a functional programming paradigm, Proc. of a conference on Functional programming languages and computer architecture, p.154-173, October 1987, Portland, Oregon, United States
C B Jones, Systematic software development using VDM, Prentice Hall International (UK) Ltd., Hertfordshire, UK, 1986
G. Kahn, Natural semantics, 4th Annual Symposium on Theoretical Aspects of Computer Sciences on STACS 87, p.22-39, February 1987, Passau, Germany
KASTENS, U. Ordered attribute grammars. Acta Inf. 13, 3 (1978), 229-256.
KASTENS, U., HUTT, B., AND ZIMMERMANN, E. GAG: A Practical Compiler Generator. Lecture Notes in Computer Science, vol. 141. Springer-Verlag, New York, 1982.
KNUTH, n. Semantics of context-free languages. Math. Syst. Theory 2, 2 (Feb. 1968), 127 146. Corrigendum: Math. Syst. Theory 5, i (Jan. 1971), 95-96.
KOSKIMIES, K., ELOMAA, T., LEHTONEN, T., AND PAAKKI, J. Tools/hlp84 report and user manual. Tech. Rep. A-1988-2, Dept. of Computer Science, Univ. of Helsinki, Finland, 1988.
LASSEZ, J.-L., AND MAHER, M. Optimal fixedpoints of logic programs. Theor. Comput. Sct. 39, i (July 1985), 15-25.
J. W. Lloyd, Foundations of logic programming; (2nd extended ed.), Springer-Verlag New York, Inc., New York, NY, 1987
Elliott Mendelson, Introduction to mathematical logic (3rd ed.), Wadsworth Publ. Co., Belmont, CA, 1987
MILNER, R. A theory of type polymorphism in programming. J. Comput. Syst. Sci. 17 (Dec. 1978), 348 375.
ODERSKY, M. A new approach to formal language definition and its application to Oberon. No. 18, Reihe Informatik Dissertationen der ETH Zuerich, Verlag der Fachvereine, Switzerland, 1989.
PEREmA, F., AND WARREN, D. Definite clause grammars for language analysis. Artif. Intell. 13, 3 (May 1980), 231-278.
t)LOTKIN, G. A structural approach to operational semantics. Tech. Rep. FN-19, DAIMI, Aarhus Univ., Denmark, Sept. 1981.
Thomas W. Reps , Tim Teitelbaum, The synthesizer generator: a system for constructing language-based editors, Springer-Verlag New York, Inc., New York, NY, 1989
ROBINSON, J. Logic: Form and Function--The Mechanization of Deductive Reasoning. North-Holland, New York, 1979.
ROSSELE% A. Definition and implementation of context conditions for programming lang~ages. Tech. Rep. CSRG-162, Computer Systems Research Inst., Univ. of Toronto, Canada, 1984.
J. C. Shepherdson, Negation in logic programming, Foundations of deductive databases and logic programming, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1988
J. M. Spivey, The Z notation: a reference manual, Prentice-Hall, Inc., Upper Saddle River, NJ, 1989
Joseph E. Stoy, Denotational Semantics: The Scott-Strachey Approach to Programming Language Theory, MIT Press, Cambridge, MA, 1977
Tim Teitelbaum , Richard Chapman, Higher-order attribute grammars and editing environments, Proceedings of the ACM SIGPLAN 1990 conference on Programming language design and implementation, p.197-208, June 1990, White Plains, New York, United States[doi>10.1145/93542.93567]
R. D. Tennent, The denotational semantics of programming languages, Communications of the ACM, v.19 n.8, p.437-453, Aug. 1976[doi>10.1145/360303.360308]
UHL, J. Spezifikation von programmiersprachen und uebersetzern. Tech. Rep. 161, Gesellschaft fuer Mathematik und Datenverarbeitung (GMD), Karlsruhe, Germany, 1986.
J. Uhl, An  Attribute Grammar for the Semantic Analysis of ADA, Springer-Verlag New York, Inc., Secaucus, NJ, 1982
VAN WIJNGAARDEN, A., MAILLOUX, B., PECK, J., AND KOSTER, C. Report on the algorithm~c language Algol 68. Tech. Rep. MR 101, Mathematisch Centrum, Amsterdam, 1969.
H. H. Vogt , S. D. Swierstra , M. F. Kuiper, Higher order attribute grammars, Proceedings of the ACM SIGPLAN 1989 Conference on Programming language design and implementation, p.131-145, June 19-23, 1989, Portland, Oregon, United States[doi>10.1145/73141.74830]
Niklaus Wirth, What can we do about the unnecessary diversity of notation for syntactic definitions?, Communications of the ACM, v.20 n.11, p.822-823, Nov. 1977[doi>10.1145/359863.359883]
N. Wirth, The programming language Oberon, Softwareâ€”Practice & Experience, v.18 n.7, p.671-690, July 1988[doi>10.1002/spe.4380180707]
