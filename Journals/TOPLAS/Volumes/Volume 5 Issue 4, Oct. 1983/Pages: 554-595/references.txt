J. A. Goguen , J. W. Thatcher , E. G. Wagner , J. B. Wright, Initial Algebra Semantics and Continuous Algebras, Journal of the ACM (JACM), v.24 n.1, p.68-95, Jan. 1977[doi>10.1145/321992.321997]
ADJ: THATCHER, J.W., WAGNER, E.G., AND WRIGHT, J.B. More on advice on structuring compilers and proving them correct. Theor. Comput. Sci. 15, (1981), 223-249.
AHO, A.V. Translator writing systems: Where do they now stand? Computer 13, 8 (Aug. 1980), 9-14. This paper is a guest editor's introduction and overview of a special issue on Translator Writing Systems.
Alfred V. Aho , Jeffrey D. Ullman, Principles of Compiler Design (Addison-Wesley series in computer science and information processing), Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1977
ANDERSON, E.R., BELZ, F.C., AND BLUM, E.K. SEMANOL (73): A metalanguage for programruing the semantics of programming languages." Acta Inf. 6 (1976), 109-131.
ANDERSON, E.R., BELZ, F.C., AND BLUM, E.K. Issues in the formal specification of programming languages. In Formal Description of Programming Concepts, E. J. Neuhold, Ed., Elsevier North- Holland, New York (1978), pp. 1-30.
BACKUS, J.W., BEEBER, R.J., BEST, S., GOLDBERG, R., HAIBT, L.M., HERRICK, H.L., NELSON, R.A., SAYRE, D., SHERIDAN, P.B., STERN, H., ZILLER, I., HUaHES, R.A., AND NUTT, R. The Fortran automatic coding system. Western Joint Computer Conference, pp. 188-198 (1957).
Friedrich L. Bauer, Historical Remarks on Compiler Construction, Compiler Construction, An Advanced Course, 2nd ed., p.603-621, January 1976
Friedrich L. Bauer, Historical Remarks on Compiler Construction, Compiler Construction, An Advanced Course, 2nd ed., p.603-621, January 1976
BJORNER, D. Programming languages: Formal development of interpreters and compilers. In International Computing Symposium 1977, E. Morlet and D. Ribbens, Eds., Elsevier North- Holland, New York (1977), pp. 1-21.
The Vienna Development Method: The Meta-Language, January 1978
James Bodwin , Laurette Bradley , Kohji Kanda , Diane Litle , Uwe Pleban, Experience with an experimental compiler generator based on denotational semantics, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.216-229, June 23-25, 1982, Boston, Massachusetts, United States[doi>10.1145/800230.806997]
R. G. Cattell, Automatic Derivation of Code Generators from Machine Descriptions, ACM Transactions on Programming Languages and Systems (TOPLAS), v.2 n.2, p.173-190, April 1980[doi>10.1145/357094.357097]
CHRiSTIANSEN, H. AND JONES, N.D. Control flow treatment in a simple compiler generator. In Formal Description of Programming Concepts II, D. Bj~rner, Ed., Elsevier North-Holland, New York (1982), pp. 38-62. The page numbers refer to the preliminary proceedings of the IFIP TC-2 Working Conference, Garmisch, West Germany, June 1982.
Jack W. Davidson , Christopher W. Fraser, The Design and Application of a Retargetable Peephole Optimizer, ACM Transactions on Programming Languages and Systems (TOPLAS), v.2 n.2, p.191-202, April 1980[doi>10.1145/357094.357098]
Jerome Feldman , David Gries, Translator writing systems, Communications of the ACM, v.11 n.2, p.77-113, Feb. 1968[doi>10.1145/362896.362902]
Harald Ganzinger, Transforming denotational semantics into practical attribute grammars, Semantics-Directed Compiler Generation, Proceedings of a Workshop, p.1-69, January 14-18, 1980
Marie-Claude Gaudel, Specification of compilers as abstract data type representations, Semantics-Directed Compiler Generation, Proceedings of a Workshop, p.140-164, January 14-18, 1980
Marie-Claude Gaudel, Compiler Generation from Formal Definition of Programming Languages: A Survey, Proceedings of the International Colloquium on Formalization of Programming Concepts, p.96-114, April 19-25, 1981
R. Steven Glanville , Susan L. Graham, A new method for compiler code generation, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.231-254, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512785]
GOLDSTINE, H.H., AND VON NEUMANN, J. Planning and coding problems for an electronic computing instrument, Part II, Vol. 1. In John von Neumann: Collected Works, Vol. V, Macmillan, New York (1963) pp. 80-151. The report was prepared for the U.S. Army Ordnance Department in April 1947.
Michael J. C. Gordon, The  Denotational Description of Programming Languages: An Introduction, Springer-Verlag New York, Inc., Secaucus, NJ, 1979
David Gries, Compiler Construction for Digital Computers, John Wiley & Sons, Inc., New York, NY, 1971
JOHNSON, S.C. Yacc--yet another compiler compiler. Computer Science Tech. Rep. 32, Bell Laboratories, Murray Hill, N.J. (july 1975). See the UNIX Programmer's Manual 2, Section 19 (January 1979), Bell Laboratories, Murray Hill, N.J.
Walter L. Johnson , James H. Porter , Stephanie I. Ackley , Douglas T. Ross, Automatic generation of efficient lexical processors using finite state techniques, Communications of the ACM, v.11 n.12, p.805-813, Dec. 1968[doi>10.1145/364175.364185]
Neil D. Jones, Semantics-Directed Compiler Generation: Proceedings, Springer-Verlag New York, Inc., Secaucus, NJ, 1980
B. W. Kernighan , D. M. Ritchie, The C programming language, Prentice-Hall, Inc., Upper Saddle River, NJ, 1978
D. E. Knuth, Invited papers: History of writing compilers, Proceedings of the 1962 ACM national conference on Digest of technical papers, p.43, September 01-01, 1962[doi>10.1145/800198.806098]
KNVTH, D.E. Semantics of context-free languages. Math. Syst. Theory 2, 2 (June 1968) 127-145 Correction in Vol. 5, no. I (1971) pp. 95-96.
LESK, M.E. Lex--a lexical analyzer generator. Computer Science Tech. Rep. 39, Bell Laboratories, Murray Hill NJ (October 1975). See the version by M.E. Lesk and E. Schmidt in the UNIX Programmer's Manual 2, Section 20 (Jan. 1979), Bell Laboratories, Murray Hill, N.J.
Philip M. Lewis, 2nd , Daniel J. Rosenkrantz , Richard E. Stearns, Compiler Design Theory, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1976
McCARTHY, J. Towards a mathematical science of computation. In Information Processing 1962, C. M. Popplewell, Ed., Elsevier North-Holland, New York (1963), pp. 21-28.
Robert Milne , C. Strachey, A  Theory of Programming Language Semantics, Halsted Press, New York, NY, 1977
MORRIS, F.L. The next 700 programming language descriptions. Unpublished manuscript (Nov. 1970).
F. Lockwood Morris, Advice on structuring compilers and proving them correct, Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.144-152, October 01-03, 1973, Boston, Massachusetts[doi>10.1145/512927.512941]
MossEs, P.D. SIS--semantics implementation system: Reference manual and user guide. DAIMI MD-30, Dept. Computer Science, University of Aarhus, Denmark (Aug. 1979).
MOSSES, P.D. Abstract semantic algebras! In Formal Description of Programming Concepts II, D. Bjzrner, Ed., Elsevier North-Holland (1982) pp. 63-88. The page numbers refer to the preliminary proceedings of the IFIP TC-2 Working Conference, Garmisch, West Germany, June 1982.
Lawrence Paulson, A semantics-directed compiler generator, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.224-233, January 25-27, 1982, Albuquerque, Mexico[doi>10.1145/582153.582178]
RAIHA, K.-J. Bibliography on attribute grammars, SIGPLAN Notices 15, 3 (Mar. 1980), pp. 35- 44.
Jean-Claude Raoult , Ravi Sethi, Properties of a Notation for Combining Functions, Journal of the ACM (JACM), v.30 n.3, p.595-611, July 1983[doi>10.1145/2402.322393]
Martin R. Raskovsky, Denotational semantics as a specification of code generators, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.230-244, June 23-25, 1982, Boston, Massachusetts, United States[doi>10.1145/800230.806998]
SCOTT, D.S. AND STRACHEY, C. Towards a mathematical semantics for computer languages, In Proc. Syrup. Computers and Automata, Polytechnic Press, Brooklyn, New York (April 1971), pp. 19-46.
SETHI, R. Circular expressions: elimination of static environments. Science of Computer Programming 1, 3 (May 1982), pp. 203-222.
STOY, J.E. Denotational Semantics, MIT Press, Cambridge, Mass. (1977).
STRACHEY, C. AND WADSWORTH, C. Continuations: a mathematical semantics which can deal with full jumps. Technical Monograph PRG-11, Programming Research Group, Oxford University (1974).
R. D. Tennent, The denotational semantics of programming languages, Communications of the ACM, v.19 n.8, p.437-453, Aug. 1976[doi>10.1145/360303.360308]
TURNER, D.A. A new implementation technique for applicative languages. Sofiw. Prac. Exper. 9, 1 (Jan. 1979), 31-49.
Mitchell Wand, Deriving Target Code as a Representation of Continuation Semantics, ACM Transactions on Programming Languages and Systems (TOPLAS), v.4 n.3, p.496-517, July 1982[doi>10.1145/357172.357179]
