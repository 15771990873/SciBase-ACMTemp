Thomas Ball , James R. Larus, Branch prediction for free, Proceedings of the ACM SIGPLAN 1993 conference on Programming language design and implementation, p.300-313, June 21-25, 1993, Albuquerque, New Mexico, USA[doi>10.1145/155090.155119]
Rastislav Bodík , Rajiv Gupta , Mary Lou Soffa, Complete removal of redundant expressions, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.1-14, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277653]
Rastislav Bodík , Rajiv Gupta , Mary Lou Soffa, Load-reuse analysis: design and evaluation, Proceedings of the ACM SIGPLAN 1999 conference on Programming language design and implementation, p.64-76, May 01-04, 1999, Atlanta, Georgia, USA[doi>10.1145/301618.301643]
Tong Chen , Jin Lin , Wei-Chung Hsu , Pen-Chung Yew, An empirical study on the granularity of pointer analysis in c programs, Proceedings of the 15th international conference on Languages and Compilers for Parallel Computing, p.157-171, July 25-27, 2002, College Park, MD[doi>10.1007/11596110_11]
Chen, T., Lin, J., Hsu, W., and Yew, P. C. 2004. Data dependence profiling for speculative optimization. In The Proceedings of the 14th International Conference on Compiler Construction. 57--62.
Fred C. Chow , Sun Chan , Shin-Ming Liu , Raymond Lo , Mark Streich, Effective Representation of Aliases and Indirect Memory Operations in SSA Form, Proceedings of the 6th International Conference on Compiler Construction, p.253-267, April 24-26, 1996
Fred Chow , Sun Chan , Robert Kennedy , Shin-Ming Liu , Raymond Lo , Peng Tu, A new algorithm for partial redundancy elimination based on SSA form, Proceedings of the ACM SIGPLAN 1997 conference on Programming language design and implementation, p.273-286, June 16-18, 1997, Las Vegas, Nevada, USA[doi>10.1145/258915.258940]
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
D. M. Dhamdhere, Practical adaption of the global optimization algorithm of Morel and Renvoise, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.2, p.291-294, April 1991[doi>10.1145/103135.214520]
Amer Diwan , Kathryn S. McKinley , J. Eliot B. Moss, Type-based alias analysis, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.106-117, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277670]
Dulong, C., Krishnaiyer, R., Kulkarni, D., Lavery, D., Li, W., Ng, J., and Sehr, D. 1999. An overview of the Intel IA-64 compiler. Intel Technology Journal.
Manel Fernández , Roger Espasa, Speculative Alias Analysis for Executable Code, Proceedings of the 2002 International Conference on Parallel Architectures and Compilation Techniques, p.222-231, September 22-25, 2002
Rakesh Ghiya , Daniel Lavery , David Sehr, On the importance of points-to analysis and other memory disambiguation methods for C programs, Proceedings of the ACM SIGPLAN 2001 conference on Programming language design and implementation, p.47-58, June 2001, Snowbird, Utah, USA[doi>10.1145/378795.378806]
Michael Hind, Pointer analysis: haven't we solved this problem yet?, Proceedings of the 2001 ACM SIGPLAN-SIGSOFT workshop on Program analysis for software tools and engineering, p.54-61, June 2001, Snowbird, Utah, USA[doi>10.1145/379605.379665]
Yuan-Shin Hwang , Peng-Sheng Chen , Jenq Kuen Lee , Roy Dz-Ching Ju, Probabilistic points-to analysis, Proceedings of the 14th international conference on Languages and compilers for parallel computing, p.290-305, August 01-03, 2001, Cumberland Falls, KY, USA
Intel Corp. 1999. IA-64 Application Developer's Architecture Guide, Available at http://developer.intel.com/design/ia64/downloads/adag.htm.
Kazuaki Ishizaki , Tatsushi Inagaki , Hideaki Komatsu , Toshio Nakatani, Eliminating Exception Constraints of Java Programs for IA-64, Proceedings of the 2002 International Conference on Parallel Architectures and Compilation Techniques, p.259, September 22-25, 2002
Roy Dz-ching Ju , Jean-François Collard , Karim Oukbir, Probabilistic memory disambiguation and its application to data speculation, ACM SIGARCH Computer Architecture News, v.27 n.1, p.27-30, March 1999[doi>10.1145/309758.309769]
Roy Dz-ching Ju , Kevin Nomura , Uma Mahadevan , Le-Chun Wu, A Unified Compiler Framework for Control and Data Speculation, Proceedings of the 2000 International Conference on Parallel Architectures and Compilation Techniques, p.157, October 15-19, 2000
Ju, R. D.-C., Chan, S., and Wu, C. 2001. Open Research Compiler (ORC) for the Itanium Processor Family. Tutorial presented at Micro 34.
Motohiro Kawahito , Hideaki Komatsu , Toshio Nakatani, Effective null pointer check elimination utilizing hardware trap, Proceedings of the ninth international conference on Architectural support for programming languages and operating systems, p.139-149, November 2000, Cambridge, Massachusetts, USA[doi>10.1145/378993.379234]
Robert Kennedy , Fred C. Chow , Peter Dahl , Shin-Ming Liu , Raymond Lo , Mark Streich, Strength Reduction via SSAPRE, Proceedings of the 7th International Conference on Compiler Construction, p.144-158, March 28-April 04, 1998
Robert Kennedy , Sun Chan , Shin-Ming Liu , Raymond Lo , Peng Tu , Fred Chow, Partial redundancy elimination in SSA form, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.3, p.627-676, May 1999[doi>10.1145/319301.319348]
Kathleen Knobe , Vivek Sarkar, Array SSA form and its use in parallelization, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.107-120, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268956]
Jens Knoop , Oliver Rüthing , Bernhard Steffen, Lazy code motion, Proceedings of the ACM SIGPLAN 1992 conference on Programming language design and implementation, p.224-234, June 15-19, 1992, San Francisco, California, USA[doi>10.1145/143095.143136]
Jin Lin , Tong Chen , Wei-Chung Hsu , Pen-Chung Yew, Speculative register promotion using Advanced Load Address Table (ALAT), Proceedings of the international symposium on Code generation and optimization: feedback-directed and runtime optimization, March 23-26, 2003, San Francisco, California
Jin Lin , Tong Chen , Wei-Chung Hsu , Pen-Chung Yew , Roy Dz-Ching Ju , Tin-Fook Ngai , Sun Chan, A compiler framework for speculative analysis and optimizations, Proceedings of the ACM SIGPLAN 2003 conference on Programming language design and implementation, June 09-11, 2003, San Diego, California, USA[doi>10.1145/781131.781164]
Raymond Lo , Fred Chow , Robert Kennedy , Shin-Ming Liu , Peng Tu, Register promotion by sparse partial redundancy elimination of loads and stores, Proceedings of the ACM SIGPLAN 1998 conference on Programming language design and implementation, p.26-37, June 17-19, 1998, Montreal, Quebec, Canada[doi>10.1145/277650.277659]
E. Morel , C. Renvoise, Global optimization by suppression of partial redundancies, Communications of the ACM, v.22 n.2, p.96-103, Feb. 1979[doi>10.1145/359060.359069]
A. Nicolau, Run-Time Disambiguation: Coping with Statically Unpredictable Dependencies, IEEE Transactions on Computers, v.38 n.5, p.663-678, May 1989[doi>10.1109/12.24269]
Pfmon. 2003. Available from ftp://ftp.hpl.hp.com/pub/linux-ia64/pfmon-1.1-0.ia64.rpm.
Bjarne Steensgaard, Points-to analysis in almost linear time, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.32-41, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237727]
Robert P. Wilson , Monica S. Lam, Efficient context-sensitive pointer analysis for C programs, Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation, p.1-12, June 18-21, 1995, La Jolla, California, USA[doi>10.1145/207110.207111]
Wu, Y. and Lee, Y. 2000. Accurate invalidation profiling for effective data speculation on EPIC processors. In 13th International Conference on Parallel and Distributed Computing Systems.
