As transistors keep shrinking and on-chip caches keep growing, static power dissipation resulting from leakage of caches takes an increasing fraction of total power in processors. Several techniques have already been proposed to reduce leakage power by turning off unused cache lines. However, they all have to pay the price of performance degradation. This paper presents a cache architecture, thesnug set-associative(SSA) cache, that cuts most of static power dissipation of caches without incuring performance penalties. The SSA cache reduces leakage power by implementing theminimum set-associativescheme, which only activates the minimal numbers of ways in each cache set, while the performance losses caused by this scheme are compensated by thebase-offset load/store queues. The rationale of combining these two techniques is locality: as the contents of the cache blocks in the current working set are repeatedly accessed, same addresses would be computed again and again. The SSA cache architecture can be applied to data and instruction caches to reduce leakage power without incurring performance penalties. Experimental results show that SSA can cut static power consumption of the L1 data cache by 93&percnt;, on average, for SPECint2000 benchmarks, while the execution times are reduced by 5&percnt;. Similarly, SSA can cut leakage dissipation of the L1 instruction cache by 92&percnt;, on average, and improve performance over 3&percnt;. Furthermore, when SSA is adopted for both L1 data and instruction caches, the normalized leakage of L1 data and instruction caches is lowered to 8&percnt;, on average, while still accomplishing a 2&percnt; reduction in execution times.