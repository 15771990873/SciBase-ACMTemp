Randy Allen , Ken Kennedy, Automatic translation of FORTRAN programs to vector form, ACM Transactions on Programming Languages and Systems (TOPLAS), v.9 n.4, p.491-542, Oct. 1987[doi>10.1145/29873.29875]
Ken Kennedy , John R. Allen, Optimizing compilers for modern architectures: a dependence-based approach, Morgan Kaufmann Publishers Inc., San Francisco, CA, 2001
Amini, M., Coelho, F., Irigoin, F., and Keryell, R. 2011. Static compilation analysis for host-accelerator communication optimization. In Workshop on Languages and Compilers for Parallel Computing (LCPC'11). Lecture Notes in Computer Science. Springer.
AMP 2011. C&plus;&plus; accelerated massive parallelism. http://msdn.microsoft.com/en-us/library/hh265137
Baghdadi, S., Grösslinger, A., and Cohen, A. 2010. Putting automatic polyhedral compilation for GPGPU to work. In Proceedings of the International Workshop Compilers for Parallel Computer (CPC).
Muthu Manikandan Baskaran , J. Ramanujam , P. Sadayappan, Automatic C-to-CUDA code generation for affine programs, Proceedings of the 19th joint European conference on Theory and Practice of Software, international conference on Compiler Construction, March 20-28, 2010, Paphos, Cyprus[doi>10.1007/978-3-642-11970-5_14]
Cedric Bastoul, Code Generation in the Polyhedral Model Is Easier Than You Think, Proceedings of the 13th International Conference on Parallel Architectures and Compilation Techniques, p.7-16, September 29-October 03, 2004[doi>10.1109/PACT.2004.11]
Mohamed-Walid Benabderrahmane , Louis-Noël Pouchet , Albert Cohen , Cédric Bastoul, The polyhedral model is more widely applicable than you think, Proceedings of the 19th joint European conference on Theory and Practice of Software, international conference on Compiler Construction, March 20-28, 2010, Paphos, Cyprus[doi>10.1007/978-3-642-11970-5_16]
Aart J. C. Bik, Software Vectorization Handbook, The: Applying Intel Multimedia Extensions for Maximum Performance, Intel Press, 2004
Bondhugula, U. 2012. PLuTo: An automatic parallelizer and locality optimizer for multicores, version 0.7. http://pluto-compiler.sourceforge.net/
Uday Bondhugula , Albert Hartono , J. Ramanujam , P. Sadayappan, A practical automatic polyhedral parallelizer and locality optimizer, ACM SIGPLAN Notices, v.43 n.6, June 2008[doi>10.1145/1379022.1375595]
Uday Bondhugula , Albert Hartono , J. Ramanujam , P. Sadayappan, A practical automatic polyhedral parallelizer and locality optimizer, Proceedings of the 2008 ACM SIGPLAN conference on Programming language design and implementation, June 07-13, 2008, Tucson, AZ, USA[doi>10.1145/1375581.1375595]
Pierre Boulet , Alain Darte , Georges-André Silber , Frédéric Vivien, Loop parallelization algorithms: from parallelism extraction to code generation, Parallel Computing, v.24 n.3-4, p.421-444, May, 1998[doi>10.1016/S0167-8191(98)00020-9]
Chen, C., Chame, J., and Hall, M. 2008. A framework for composing high-level loop transformations. Tech. rep., USC Computer Science.
Pete Cooper , Uwe Dolinsky , Alastair F. Donaldson , Andrew Richards , Colin Riley , George Russell, Offload – automating code migration to heterogeneous multicore systems, Proceedings of the 5th international conference on High Performance Embedded Architectures and Compilers, January 25-27, 2010, Pisa, Italy[doi>10.1007/978-3-642-11515-8_25]
Feautrier, P. 1991. Dataflow analysis of array and scalar references. Int. J. Parallel Program. 20, 1, 23--53.
Paul Feautrier, Some efficient solutions to the affine scheduling problem: I. One-dimensional time, International Journal of Parallel Programming, v.21 n.5, p.313-348, Oct. 1992[doi>10.1007/BF01407835]
Paul Feautrier, Some efficient solutions to the affine scheduling problem: I. One-dimensional time, International Journal of Parallel Programming, v.21 n.5, p.313-348, Oct. 1992[doi>10.1007/BF01407835]
Roger Ferrer , Vicenç Beltran , Marc Gonzàlez , Xavier Martorell , Eduard Ayguadé, Analysis of task offloading for accelerators, Proceedings of the 5th international conference on High Performance Embedded Architectures and Compilers, January 25-27, 2010, Pisa, Italy[doi>10.1007/978-3-642-11515-8_24]
Grosser, T., Zheng, H., A, R., Simbürger, A., Grösslinger, A., and Pouchet, L.-N. 2011. Polly: Polyhedral optimization in llvm. In 1st Interantional Workshop on Polyhedral Compilation Techniques (IMPACT'11).
Armin Größlinger, Precise Management of Scratchpad Memories for Localising Array Accesses in Scientific Codes, Proceedings of the 18th International Conference on Compiler Construction: Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2009, p.236-250, March 22-29, 2009, York, UK[doi>10.1007/978-3-642-00722-4_17]
HMPP 2010. HMPP workbench: directive-based multi-language and multi-target hybrid programming model. http://www.caps-entreprise.com/hmpp.html
HPC Project. 2012. Par4All automatic parallelization version 1.3. http://www.par4all.org
Seyong Lee , Rudolf Eigenmann, OpenMPC: Extended OpenMP Programming and Tuning for GPUs, Proceedings of the 2010 ACM/IEEE International Conference for High Performance Computing, Networking, Storage and Analysis, p.1-11, November 13-19, 2010[doi>10.1109/SC.2010.36]
Seyong Lee , Seung-Jai Min , Rudolf Eigenmann, OpenMP to GPGPU: a compiler framework for automatic translation and optimization, Proceedings of the 14th ACM SIGPLAN symposium on Principles and practice of parallel programming, February 14-18, 2009, Raleigh, NC, USA[doi>10.1145/1504176.1504194]
Allen Leung , Nicolas Vasilache , Benoît Meister , Muthu Baskaran , David Wohlford , Cédric Bastoul , Richard Lethin, A mapping path for multi-GPGPU accelerated computers from a portable high level programming abstraction, Proceedings of the 3rd Workshop on General-Purpose Computation on Graphics Processing Units, March 14-14, 2010, Pittsburgh, Pennsylvania[doi>10.1145/1735688.1735698]
Amy Wingmui Lim , Monica S. Lam, Improving parallelism and data locality with affine partitioning, 2001
Yixun Liu , Eddy Z. Zhang , Xipeng Shen, A cross-input adaptive framework for GPU program optimizations, Proceedings of the 2009 IEEE International Symposium on Parallel&Distributed; Processing, p.1-10, May 23-29, 2009[doi>10.1109/IPDPS.2009.5160988]
Dorit Nuzman , Ira Rosen , Ayal Zaks, Auto-vectorization of interleaved data for SIMD, Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation, June 11-14, 2006, Ottawa, Ontario, Canada[doi>10.1145/1133981.1133997]
Dorit Nuzman , Ayal Zaks, Outer-loop vectorization: revisited for short SIMD architectures, Proceedings of the 17th international conference on Parallel architectures and compilation techniques, October 25-29, 2008, Toronto, Ontario, Canada[doi>10.1145/1454115.1454119]
NVIDIA Corporation 2011. NVIDIA CUDA Programming guide 4.0. NVIDIA Corporation.
OpenACC 2011. OpenACC: Directives for accelerators. http://www.openacc-standard.org
PoCC 2012. PoCC: the polyhedral compiler collection version 1.1. http://www.cse.ohio-state.edu/~pouchet/software/pocc/
Nishkam Ravi , Yi Yang , Tao Bao , Srimat Chakradhar, Apricot: an optimizing compiler and productivity tool for x86-compatible many-core coprocessors, Proceedings of the 26th ACM international conference on Supercomputing, June 25-29, 2012, San Servolo Island, Venice, Italy[doi>10.1145/2304576.2304585]
Lakshminarayanan Renganarayanan , DaeGon Kim , Sanjay Rajopadhye , Michelle Mills Strout, Parameterized tiled loops for free, Proceedings of the 2007 ACM SIGPLAN conference on Programming language design and implementation, June 10-13, 2007, San Diego, California, USA[doi>10.1145/1250734.1250780]
Gabe Rudy , Malik Murtaza Khan , Mary Hall , Chun Chen , Jacqueline Chame, A programming language interface to describe transformations and code generation, Proceedings of the 23rd international conference on Languages and compilers for parallel computing, p.136-150, October 07-09, 2010, Houston, TX
Shane Ryoo , Christopher I. Rodrigues , Sara S. Baghsorkhi , Sam S. Stone , David B. Kirk , Wen-mei W. Hwu, Optimization principles and application performance evaluation of a multithreaded GPU using CUDA, Proceedings of the 13th ACM SIGPLAN Symposium on Principles and practice of parallel programming, February 20-23, 2008, Salt Lake City, UT, USA[doi>10.1145/1345206.1345220]
Shane Ryoo , Christopher I. Rodrigues , Sam S. Stone , Sara S. Baghsorkhi , Sain-Zee Ueng , John A. Stratton , Wen-mei W. Hwu, Program optimization space pruning for a multithreaded gpu, Proceedings of the 6th annual IEEE/ACM international symposium on Code generation and optimization, April 05-09, 2008, Boston, MA, USA[doi>10.1145/1356058.1356084]
Jaewook Shin , Jacqueline Chame , Mary W. Hall, Compiler-Controlled Caching in Superword Register Files for Multimedia Extension Architectures, Proceedings of the 2002 International Conference on Parallel Architectures and Compilation Techniques, p.45-55, September 22-25, 2002
Jaewook Shin , Mary Hall , Jacqueline Chame, Superword-Level Parallelism in the Presence of Control Flow, Proceedings of the international symposium on Code generation and optimization, p.165-175, March 20-23, 2005[doi>10.1109/CGO.2005.33]
The Portland Group 2010. PGI Accelerator Programming Model for Fortran & C v1.3 ed. The Portland Group.
Konrad Trifunovic , Dorit Nuzman , Albert Cohen , Ayal Zaks , Ira Rosen, Polyhedral-Model Guided Loop-Nest Auto-Vectorization, Proceedings of the 2009 18th International Conference on Parallel Architectures and Compilation Techniques, p.327-337, September 12-16, 2009[doi>10.1109/PACT.2009.18]
Sain-Zee Ueng , Melvin Lathara , Sara S. Baghsorkhi , Wen-Mei W. Hwu, CUDA-Lite: Reducing GPU Programming Complexity, Languages and Compilers for Parallel Computing: 21th International Workshop, LCPC 2008, Edmonton, Canada, July 31 - August 2, 2008, Revised Selected Papers, Springer-Verlag, Berlin, Heidelberg, 2008[doi>10.1007/978-3-540-89740-8_1]
Swapneela Unkule , Christopher Shaltz , Apan Qasem, Automatic restructuring of GPU kernels for exploiting inter-thread data locality, Proceedings of the 21st international conference on Compiler Construction, March 24-April 01, 2012, Tallinn, Estonia[doi>10.1007/978-3-642-28652-0_2]
Vasilache, N., Meister, B., Baskaran, M., and Lethin, R. 2012. Joint scheduling and layout optimization to enable multi-level vectorization. In Proceedings of the International workshop on Polyhedral Compilation Techniques (IMPACT'12).
Sven Verdoolaege, isl: an integer set library for the polyhedral model, Proceedings of the Third international congress conference on Mathematical software, September 13-17, 2010, Kobe, Japan
Verdoolaege, S. and Grosser, T. 2012. Polyhedral extraction tool. In Proceedings of the International Workshop on Polyhedral Compilation Techniques (IMPACT'12).
R. Clint Whaley , Antoine Petitet, Minimizing development and maintenance costs in supporting persistently optimized BLAS, Software—Practice & Experience, v.35 n.2, p.101-121, February 2005[doi>10.1002/spe.v35:2]
Michael Joseph Wolfe , Carter Shanklin , Leda Ortega, High Performance Compilers for Parallel Computing, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1995
Peng Wu , Alexandre E. Eichenberger , Amy Wang , Peng Zhao, An integrated simdization framework using virtual vectors, Proceedings of the 19th annual international conference on Supercomputing, June 20-22, 2005, Cambridge, Massachusetts[doi>10.1145/1088149.1088172]
