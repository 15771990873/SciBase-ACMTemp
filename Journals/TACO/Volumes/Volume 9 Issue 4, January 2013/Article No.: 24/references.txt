Anckaert, B. 2008. Diversity for software protection. Ph.D. thesis, Ghent University.
Bertrand Anckaert , Mariusz Jakubowski , Ramarathnam Venkatesan, Proteus: virtualization for diversified tamper-resistance, Proceedings of the ACM workshop on Digital rights management, October 30-30, 2006, Alexandria, Virginia, USA[doi>10.1145/1179509.1179521]
Blake Anderson , Daniel Quist , Joshua Neil , Curtis Storlie , Terran Lane, Graph-based malware detection using dynamic analysis, Journal in Computer Virology, v.7 n.4, p.247-258, November  2011[doi>10.1007/s11416-011-0152-x]
Avizienis, A. and Chen, L. 1977. On the implementation of N-version programming for software fault tolerance during execution. In Proceedings of the 1st IEEE Computer Software and Applications Conference. 149--155.
Elena Gabriela Barrantes , David H. Ackley , Stephanie Forrest , Darko Stefanović, Randomized instruction set emulation, ACM Transactions on Information and System Security (TISSEC), v.8 n.1, p.3-40, February 2005[doi>10.1145/1053283.1053286]
Barth, A., Li, S., Rubinstein, B., and Song, D. 2011. How open should open source be&quest; arXiv:1109.0507v1.
Barthen. 2009. {WoW} {3.0.9} Symbolic info. http://www.mmowned.com/forums/world-of-warcraft/bots-programs/memory-editing/219320-wow-3-0-9-symbolic-info.html.
Ulrich Bayer , Engin Kirda , Christopher Kruegel, Improving the efficiency of dynamic malware analysis, Proceedings of the 2010 ACM Symposium on Applied Computing, March 22-26, 2010, Sierre, Switzerland[doi>10.1145/1774088.1774484]
Sandeep Bhatkar , Daniel C. DuVarney , R. Sekar, Address obfuscation: an efficient approach to combat a board range of memory error exploits, Proceedings of the 12th conference on USENIX Security Symposium, p.8-8, August 04-08, 2003, Washington, DC
D. Boneh , J. Shaw, Collusion-secure fingerprinting for digital data, IEEE Transactions on Information Theory, v.44 n.5, p.1897-1905, September 1998[doi>10.1109/18.705568]
David Brumley , Pongsin Poosankam , Dawn Song , Jiang Zheng, Automatic Patch-Based Exploit Generation is Possible: Techniques and Implications, Proceedings of the 2008 IEEE Symposium on Security and Privacy, p.143-157, May 18-21, 2008[doi>10.1109/SP.2008.17]
Frederick B. Cohen, Operating system protection through program evolution, Computers and Security, v.12 n.6, p.565-584, Oct. 1993[doi>10.1016/0167-4048(93)90054-9]
Christian Collberg , Clark Thomborson , Douglas Low, Manufacturing cheap, resilient, and stealthy opaque constructs, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.184-196, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268962]
Coppens, B., De Sutter, B., and De Bosschere, K. 2012. Protecting your software releases. IEEE Secur. Priv. (to appear).
Core Security Technologies. 2010. Windows SMTP service DNS query id vulnerabilities. CoreLabs Security Advisory.
Benjamin Cox , David Evans , Adrian Filipi , Jonathan Rowanhill , Wei Hu , Jack Davidson , John Knight , Anh Nguyen-Tuong , Jason Hiser, N-variant systems: a secretless framework for security through diversity, Proceedings of the 15th conference on USENIX Security Symposium, July 31-August 04, 2006, Vancouver, B.C., Canada
De Sutter, B., Anckaert, B., Geiregat, J., Chanet, D., and De Bosschere, K. 2008. Instruction set limitation in support of software diversity. In Proceedings of the 11th International Conference on Information Security and Cryptology (ICISC'08). Lecture Notes in Computer Science, Vol.5461. Springer, 152--165.
Dullien, T. and Rolles, R. 2005. Graph-based comparison of executable objects. In Symposium sur la Sécurité des Technologies de l'Information et des Communications.
Eagle, C. 2011. The IDA Pro Book 2nd Ed. No Starch Press.
Economou, N. 2010. Microsoft Virtual PC: The hyper-hole-visor bug & MS10-048: Win32k window creation vulnerability (CVE-2010-1897). http://www.ek.party.org/archive/2010/ekoparty-2010/economou=2x1Microsoft-bug.pdf
Funda Ergun , Joe Kilian , Ravi Kumar, A note on the limits of collusion-resistant watermarks, Proceedings of the 17th international conference on Theory and application of cryptographic techniques, May 02-06, 1999, Prague, Czech Republic
Flake, H. 2004. Structural comparison of executable objects. In Proceedings of the Detection of Intrusions and Malware & Vulnerability Assessment, GI SIG SIDAR Workshop. 161--173.
S. Forrest , A. Somayaji , D. Ackley, Building Diverse Computer Systems, Proceedings of the 6th Workshop on Hot Topics in Operating Systems (HotOS-VI), p.67, May 05-06, 1997
Frijters, J. 2010. Reverse engineering the MS10-060 .NET security patch. http://weblog.ikbm.net/permaLink.aspx&quest;guid=cle9440e=becc=44a4=bf2a=12c407f07737.
Debin Gao , Michael K. Reiter , Dawn Song, BinHunt: Automatically Finding Semantic Differences in Binary Programs, Proceedings of the 10th International Conference on Information and Communications Security, October 20-22, 2008, Birmingham, UK[doi>10.1007/978-3-540-88625-9_16]
Shon Harris , Allen Harper , Chris Eagle , Jonathan Ness, Gray Hat Hacking, Second Edition, McGraw-Hill, Inc., New York, NY, 2007
Johnson, N. 2011. From patch to proof-of-concept: MS10-081. http://blogs.ixlacom.com/ixia-blog/microsoft-vulnerablilty-proof-of-concept/.
Douglas W. Jones, The ultimate RISC, ACM SIGARCH Computer Architecture News, v.16 n.3, p.48-55, June 1988[doi>10.1145/48675.48683]
Gaurav S. Kc , Angelos D. Keromytis , Vassilis Prevelakis, Countering code-injection attacks with instruction-set randomization, Proceedings of the 10th ACM conference on Computer and communications security, October 27-30, 2003, Washington D.C., USA[doi>10.1145/948109.948146]
Miryung Kim , David Notkin, Program element matching for multi-version program analyses, Proceedings of the 2006 international workshop on Mining software repositories, May 22-23, 2006, Shanghai, China[doi>10.1145/1137983.1137999]
Miryung Kim , David Notkin , Dan Grossman, Automatic Inference of Structural Changes for Matching across Program Versions, Proceedings of the 29th international conference on Software Engineering, p.333-343, May 20-26, 2007[doi>10.1109/ICSE.2007.20]
LeDoux, C., Walenstein, A., and Lakhotia, A. 2012. Improved malware classification through sensor fusion using disjoint union. In Proceedings of the 6th International Conference on Information Systems, Technology and Management (ICISTM). 360--371.
Lee, B. and Jang, Y. 2012. Exploit shop website. http://exploitshop.wordpress.com/
Cullen Linn , Saumya Debray, Obfuscation of executable code to improve resistance to static disassembly, Proceedings of the 10th ACM conference on Computer and communications security, October 27-30, 2003, Washington D.C., USA[doi>10.1145/948109.948149]
Loveless, M. 2006. Corporate security: A hacker perspective. In Proceedings of the 20th Large Installation System Administration Conference.
Matias Madou , Bertrand Anckaert , Bjorn De Sutter , Koen De Bosschere, Hybrid static-dynamic attacks against software protection mechanisms, Proceedings of the 5th ACM workshop on Digital rights management, November 07-07, 2005, Alexandria, VA, USA[doi>10.1145/1102546.1102560]
Miller, W. and Myers, E. 1985. A file comparison program. Softw. Pract. Exper. 15, 11, 1025--1040.
Moore, H. 2008. Exploiting IIS via HTMLEncode (MS08-006). https://strikecenter.bpointsys.com/articles/permalink&quest;month=02&year;=2008&title;=Exploiting-lis-via-html-encode-ms08-006&day;=13.
Nagarajan, V., Zhang, X., Gupta, R., Madou, M., De Sutter, B., and De Bosschere, K. 2007. Matching control flow of program versions. In Proceedings of the 23rd IEEE International Conference on Software Maintenance. 83--94.
Adam J. O'Donnell , Harish Sethu, On achieving software diversity for improved network security using distributed coloring algorithms, Proceedings of the 11th ACM conference on Computer and communications security, October 25-29, 2004, Washington DC, USA[doi>10.1145/1030083.1030101]
Oh, J. 2009. Fight against 1-day exploits: Diffing binaries vs anti-diffing binaries. In BlackHat USA. http://www.blackhat.com/html/bh-usa-09/bh-usa-09-archives.html.
Percival, C. 2003. Naive differences of executable code. http://www.daemonology.net/bsdiff/.
Protas, A. and Manzuik, S. 2006. Skeletons in Microsoft's closet - silently fixed vulnerabilities. BlackHat Europe. http://www.blackhat.com/html/bh-europe-06/bh-ev-06-speakers.html
Sabin, T. 2004. Comparing binaries with graph isomorphisms. Tech. rep., BindView RAZOR Team.
Hovav Shacham , Matthew Page , Ben Pfaff , Eu-Jin Goh , Nagendra Modadugu , Dan Boneh, On the effectiveness of address-space randomization, Proceedings of the 11th ACM conference on Computer and communications security, October 25-29, 2004, Washington DC, USA[doi>10.1145/1030083.1030124]
Monirul Sharif , Andrea Lanzi , Jonathon Giffin , Wenke Lee, Automatic Reverse Engineering of Malware Emulators, Proceedings of the 2009 30th IEEE Symposium on Security and Privacy, p.94-109, May 17-20, 2009[doi>10.1109/SP.2009.27]
Slawlerguy. 2008. Reversing the ms08-067 patch. http://dontstoffbearsuppurpose.com/2008/10/23/looking-at-ms08-067/.
Sotirov, A. 2006. Reverse Engineering Microsoft Binaries. CanSecWest.
Ana Nora Sovarel , David Evans , Nathanael Paul, Where's the FEEB? the effectiveness of instruction set randomization, Proceedings of the 14th conference on USENIX Security Symposium, p.10-10, July 31-August 05, 2005, Baltimore, MD
Varghese, N. 2008. Reverse engineering for Exploit Writers. Clubhack.
Robert A. Wagner , Michael J. Fischer, The String-to-String Correction Problem, Journal of the ACM (JACM), v.21 n.1, p.168-173, Jan. 1974[doi>10.1145/321796.321811]
Walenstein, A., Mathur, R., Chouchane, M. R., and Lakhotia, A. 2008. Constructing malware normalizers using term rewriting. J. Comput. Virol. 4, 4, 307--322.
Walia, H. 2011. Reversing Microsoft Patches to Reveal Vulnerable Code. Nullcon.
Chenxi Wang , Jonathan Hill , John C. Knight , Jack W. Davidson, Protection of Software-Based Survivability Mechanisms, Proceedings of the 2001 International Conference on Dependable Systems and Networks (formerly: FTCS), p.193-202, July 01-04, 2001
Wang, Z., Pierce, K., and McFarling, S. 2000. Bmat—a binary matching tools for stale profile propagation. J. Instruct. Level Parallel. 2, 1--20.
Xiangyu Zhang , Rajiv Gupta, Matching execution histories of program versions, Proceedings of the 10th European software engineering conference held jointly with 13th ACM SIGSOFT international symposium on Foundations of software engineering, September 05-09, 2005, Lisbon, Portugal[doi>10.1145/1081706.1081738]
Xiangyu Zhang , Rajiv Gupta, Whole execution traces and their applications, ACM Transactions on Architecture and Code Optimization (TACO), v.2 n.3, p.301-334, September 2005[doi>10.1145/1089008.1089012]
Zhou, Y. and Main, A. 2006. Diversity via code transformations: A solution for NGNA renewable security. In NCTA - The National Show.
zynamics. 2012a. BinDiff. http://www.zynamics.com/bindiff.html.
Zynamics 2012b. Zynamics BinDiff Manual. Zynamics.
