B. Alpern , M. N. Wegman , F. K. Zadeck, Detecting equality of variables in programs, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.1-11, January 10-13, 1988, San Diego, California, USA[doi>10.1145/73560.73561]
B. Alpern , C. R. Attanasio , J. J. Barton , M. G. Burke , P. Cheng , J.-D. Choi , A. Cocchi , S. J. Fink , D. Grove , M. Hind , S. F. Hummel , D. Lieber , V. Litvinov , M. F. Mergen , T. Ngo , J. R. Russell , V. Sarkar , M. J. Serrano , J. C. Shepherd , S. E. Smith , V. C. Sreedhar , H. Srinivasan , J. Whaley, The Jalapeño virtual machine, IBM Systems Journal, v.39 n.1, p.211-238, January 2000[doi>10.1147/sj.391.0211]
Amme, W. 2004. Effiziente und sichere Codegenerierung für mobilen Code. Habilitation, Friedrich-Schiller-University, Jena, Germany.
Wolfram Amme , Niall Dalton , Jeffery von Ronne , Michael Franz, SafeTSA: a type safe and referentially secure mobile-code representation based on static single assignment form, Proceedings of the ACM SIGPLAN 2001 conference on Programming language design and implementation, p.137-147, June 2001, Snowbird, Utah, USA[doi>10.1145/378795.378825]
Amme, W., Dalton, N., Fröhlich, P., Haldar, V., Housel, P. S., von Ronne, J., Stork, C. H., Zhenochin, S., and Franz, M. 2001b. Project transprose: Reconciling mobile-code security with execution efficiency. In Proceedings of the Second DARPA Information Survivability Conference and Exposition. IEEE Computer Society, Los Alamitos, California. 196--210.
Amme, W., von Ronne, J., and Franz, M. 2005. Quantifying the benefits of ssa-based mobile code. In Proceedings of the 4th International Workshop on Compiler Optimization Meets Compiler Verification (COCV 2005), April 2005. Electronic Notes in Theoretical Computer Science Series (ENTCS), vol. 141. Elsevier Science, Amsterdam. 103--119.
Andrew W. Appel, SSA is functional programming, ACM SIGPLAN Notices, v.33 n.4, p.17-20, April 1998[doi>10.1145/278283.278285]
Matthew Arnold , Stephen Fink , David Grove , Michael Hind , Peter F. Sweeney, Adaptive optimization in the Jalapeño JVM, Proceedings of the 15th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.47-65, October 2000, Minneapolis, Minnesota, USA[doi>10.1145/353171.353175]
Matthew Arnold , Stephen Fink , Vivek Sarkar , Peter F. Sweeney, A comparative study of static and profile-based heuristics for inlining, Proceedings of the ACM SIGPLAN workshop on Dynamic and adaptive compilation and optimization, p.52-64, January 2000[doi>10.1145/351397.351416]
Belady, L. A. 1960. A study of replacement algorithms for virtual storage computers. IBM Journal of Research and Development 5, 2, 78--101.
Val Breazu-Tannen , Thierry Coquand , Carl A. Gunter , Andre Scedrov, Inheritance as implicit coercion, Information and Computation, v.93 n.1, p.172-221, July 1991[doi>10.1016/0890-5401(91)90055-7]
Preston Briggs , Keith D. Cooper , Linda Torczon, Improvements to graph coloring register allocation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.16 n.3, p.428-455, May 1994[doi>10.1145/177492.177575]
Bull, J. M., Smith, L. A., Westhead, M. D., Henty, D. S., and Davey, R. A. 2000. A benchmark suite for high performance Java. Concurrency: Practice and Experience 12, 6 (May), 375--388.
Michael G. Burke , Jong-Deok Choi , Stephen Fink , David Grove , Michael Hind , Vivek Sarkar , Mauricio J. Serrano , V. C. Sreedhar , Harini Srinivasan , John Whaley, The Jalapeño dynamic optimizing compiler for Java, Proceedings of the ACM 1999 conference on Java Grande, p.129-141, June 12-14, 1999, San Francisco, California, USA[doi>10.1145/304065.304113]
G. J. Chaitin, Register allocation & spilling via graph coloring, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.98-105, June 23-25, 1982, Boston, Massachusetts, USA[doi>10.1145/800230.806984]
Chaitin, G. J., Auslander, M. A., Chandra, A. K., Cocke, J., Hopkins, M. E., and Markstein, P. W. 1981. Register allocation via coloring. Computer Languages 6, 1, 47--57.
Cliff Click, Global code motion/global value numbering, Proceedings of the ACM SIGPLAN 1995 conference on Programming language design and implementation, p.246-257, June 18-21, 1995, La Jolla, California, USA[doi>10.1145/207110.207154]
Linda Torczon , Keith Cooper, Engineering A Compiler, Morgan Kaufmann Publishers Inc., San Francisco, CA, 2007
Ron Cytron , Jeanne Ferrante , Barry K. Rosen , Mark N. Wegman , F. Kenneth Zadeck, Efficiently computing static single assignment form and the control dependence graph, ACM Transactions on Programming Languages and Systems (TOPLAS), v.13 n.4, p.451-490, Oct. 1991[doi>10.1145/115372.115320]
de Bruijn, N. G. 1978. Lambda calculus with namefree formulas involving symbols that represent reference transforming mappings. Indagationes Mathematicae (Proceedings) 81, 3, 348--356.
ECMA. 2002. Common Language Infrastructure (CLI), Standard ECMA-335.
Stephen J. Fink , Kathleen Knobe , Vivek Sarkar, Unified Analysis of Array and Object References in Strongly Typed Languages, Proceedings of the 7th International Symposium on Static Analysis, p.155-174, June 29-July 01, 2000
Michael Franz , Thomas Kistler, Slim binaries, Communications of the ACM, v.40 n.12, p.87-94, Dec. 1997[doi>10.1145/265563.265576]
Christopher W. Fraser , David R. Hanson, Simple register spilling in a retargetable compiler, Software—Practice & Experience, v.22 n.1, p.85-99, Jan. 1992[doi>10.1002/spe.4380220105]
Rajiv Gupta , Rastislav Bodík, Register Pressure Sensitive Redundancy Elimination, Proceedings of the 8th International Conference on Compiler Construction, Held as Part of the European Joint Conferences on the Theory and Practice of Software, ETAPS'99, p.107-121, March 22-28, 1999
M. S. Hecht , J. D. Ullman, Characterizations of Reducible Flow Graphs, Journal of the ACM (JACM), v.21 n.3, p.367-375, July 1974[doi>10.1145/321832.321835]
James Gosling , Bill Joy , Guy L. Steele, The  Java Language Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1996
Thomas Kistler , Michael Franz, A Tree-Based Alternative to Java Byte-Codes, International Journal of Parallel Programming, v.27 n.1, p.21-33, Feb. 1999[doi>10.1023/A:1018740018601]
Kathleen Knobe , Vivek Sarkar, Array SSA form and its use in parallelization, Proceedings of the 25th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.107-120, January 19-21, 1998, San Diego, California, USA[doi>10.1145/268946.268956]
Chris Lattner , Vikram Adve, LLVM: A Compilation Framework for Lifelong Program Analysis & Transformation, Proceedings of the international symposium on Code generation and optimization: feedback-directed and runtime optimization, p.75, March 20-24, 2004, Palo Alto, California
League, C., Trifonov, V., and Shao, Z. 2001. Functional Java bytecode. In Proceedings of the World Multiconference on Systemics, Cybernetics, and Informatics. International Institute of Informatics and Systemics, Orlando, FL.
Vijay S. Menon , Neal Glew , Brian R. Murphy , Andrew McCreight , Tatiana Shpeisman , Ali-Reza Adl-Tabatabai , Leaf Petersen, A verifiable SSA program representation for aggressive compiler optimization, Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.397-408, January 11-13, 2006, Charleston, South Carolina, USA[doi>10.1145/1111037.1111072]
Rajeev Motwani , Krishna V. Palem , Vivek Sarkar , Salem Reyen, Combining Register Allocation and Instruction Scheduling, Stanford University, Stanford, CA, 1995
Massimiliano Poletto , Vivek Sarkar, Linear scan register allocation, ACM Transactions on Programming Languages and Systems (TOPLAS), v.21 n.5, p.895-913, Sept. 1999[doi>10.1145/330249.330250]
Christian H. Stork , Michael Franz, Well: a language-agnostic foundation for compact and inherently safe mobile code, University of California at Irvine, Irvine, CA, 2006
Stork, C. H., Haldar, V., and Franz, M. 2000. Generic adaptive syntax-directed compression for mobile code. Technical Report 00-42 (Nov.). Information and Computer Science, Univeristy of California, Irvine, CA.
Jeffery Von Ronne , Michael Franz, A safe and efficient machine-independent code transportation format based on static single assignment form and applied to just-in-time compilation, University of California at Irvine, Irvine, CA, 2005
von Ronne, J., Amme, W., and Franz, M. 2006. An inherently type-safe ssa-based code format. Tech. Rep. CS-TR-2006-004, Computer Science, The University of Texas at San Antonio, San Antonio.
