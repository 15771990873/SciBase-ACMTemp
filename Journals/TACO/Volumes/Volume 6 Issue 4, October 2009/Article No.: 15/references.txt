Diab Abuaiadh , Yoav Ossia , Erez Petrank , Uri Silbershtein, An efficient parallel heap compaction algorithm, Proceedings of the 19th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, October 24-28, 2004, Vancouver, BC, Canada[doi>10.1145/1028976.1028995]
Hezi Azatchi , Yossi Levanoni , Harel Paz , Erez Petrank, An on-the-fly mark and sweep garbage collector based on sliding views, Proceedings of the 18th annual ACM SIGPLAN conference on Object-oriented programing, systems, languages, and applications, October 26-30, 2003, Anaheim, California, USA[doi>10.1145/949305.949329]
Katherine Barabash , Yoav Ossia , Erez Petrank, Mostly concurrent garbage collection revisited, Proceedings of the 18th annual ACM SIGPLAN conference on Object-oriented programing, systems, languages, and applications, October 26-30, 2003, Anaheim, California, USA[doi>10.1145/949305.949328]
Ori Ben-Yitzhak , Irit Goft , Elliot K. Kolodner , Kean Kuiper , Victor Leikehman, An algorithm for parallel incremental compaction, Proceedings of the 3rd international symposium on Memory management, June 20-21, 2002, Berlin, Germany[doi>10.1145/512429.512442]
Stephen M. Blackburn , Robin Garner , Chris Hoffmann , Asjad M. Khang , Kathryn S. McKinley , Rotem Bentzur , Amer Diwan , Daniel Feinberg , Daniel Frampton , Samuel Z. Guyer , Martin Hirzel , Antony Hosking , Maria Jump , Han Lee , J. Eliot B. Moss , Aashish Phansalkar , Darko Stefanović , Thomas VanDrunen , Daniel von Dincklage , Ben Wiedermann, The DaCapo benchmarks: java benchmarking development and analysis, Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications, October 22-26, 2006, Portland, Oregon, USA[doi>10.1145/1167473.1167488]
Stephen M. Blackburn , Robin Garner , Chris Hoffmann , Asjad M. Khang , Kathryn S. McKinley , Rotem Bentzur , Amer Diwan , Daniel Feinberg , Daniel Frampton , Samuel Z. Guyer , Martin Hirzel , Antony Hosking , Maria Jump , Han Lee , J. Eliot B. Moss , Aashish Phansalkar , Darko Stefanović , Thomas VanDrunen , Daniel von Dincklage , Ben Wiedermann, The DaCapo benchmarks: java benchmarking development and analysis, Proceedings of the 21st annual ACM SIGPLAN conference on Object-oriented programming systems, languages, and applications, October 22-26, 2006, Portland, Oregon, USA[doi>10.1145/1167473.1167488]
Stephen M. Blackburn , Kathryn S. McKinley, Ulterior reference counting: fast garbage collection without a long wait, Proceedings of the 18th annual ACM SIGPLAN conference on Object-oriented programing, systems, languages, and applications, October 26-30, 2003, Anaheim, California, USA[doi>10.1145/949305.949336]
Stephen M. Blackburn , Kathryn S. McKinley, Immix: a mark-region garbage collector with space efficiency, fast collection, and mutator performance, Proceedings of the 2008 ACM SIGPLAN conference on Programming language design and implementation, June 07-13, 2008, Tucson, AZ, USA[doi>10.1145/1375581.1375586]
Hans-J. Boehm , Alan J. Demers , Scott Shenker, Mostly parallel garbage collection, ACM SIGPLAN Notices, v.26 n.6, p.157-164, June 1991[doi>10.1145/113446.113459]
Cliff Click , Gil Tene , Michael Wolf, The pauseless GC algorithm, Proceedings of the 1st ACM/USENIX international conference on Virtual execution environments, June 11-12, 2005, Chicago, IL, USA[doi>10.1145/1064979.1064988]
Jacques Cohen , Alexandru Nicolau, Comparison of Compacting Algorithms for Garbage Collection, ACM Transactions on Programming Languages and Systems (TOPLAS), v.5 n.4, p.532-553, Oct. 1983[doi>10.1145/69575.357226]
David Detlefs , Christine Flood , Steve Heller , Tony Printezis, Garbage-first garbage collection, Proceedings of the 4th international symposium on Memory management, October 24-25, 2004, Vancouver, BC, Canada[doi>10.1145/1029873.1029879]
L. Peter Deutsch , Daniel G. Bobrow, An efficient, incremental, automatic garbage collector, Communications of the ACM, v.19 n.9, p.522-526, Sept. 1976[doi>10.1145/360336.360345]
Dieckmann, S. and Hölzle, U. 1998. A study of the allocation behavior of the SPECjvm98 Java benchmarks. In Proceedings of 12th European Conference on Object-Oriented Programming (ECOOP98).Springer-Verlag, Berlin, 92--115.
Dijkstra, E. W., Lamport, L., Martin, A. J., Scholten, C. S., and Steffens, E. F. M. 1976. On-the-fly garbage collection: An exercise in cooperation. Lecture Notes in Computer Science, vol. 46. Springer-Verlag, Berlin.
Diwan, A., Ed. 2004. Proceedings of the 4th International Symposium on Memory Management. ACM Press.
Damien Doligez , Xavier Leroy, A concurrent, generational garbage collector for a multithreaded implementation of ML, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.113-123, March 1993, Charleston, South Carolina, USA[doi>10.1145/158511.158611]
Tamar Domani , Elliot K. Kolodner , Erez Petrank, A generational on-the-fly garbage collector for Java, Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation, p.274-284, June 18-21, 2000, Vancouver, British Columbia, Canada[doi>10.1145/349299.349336]
Fisher, D. A. 1974. Bounded workspace garbage collection in an address order preserving list processing environment. Inform. Process. Lett. 3, 1, 25--32.
Christine H. Flood , David Detlefs , Nir Shavit , Xiaolan Zhang, Parallel garbage collection for shared memory multiprocessors, Proceedings of the 2001 Symposium on JavaTMVirtual Machine Research and Technology Symposium, p.21-21, April 23-24, 2001, Monterey, California
Furusou, S., Matsuoka, S., and Yonezawa, A. 1991. Parallel conservative garbage collection with fast allocation. In Proceedings of the ACM Conference on Object-Oriented Systems, Languages and Applications (OOPSLA'91). ACM, New York.
GPLJava. Open Source Java Software. http://java-source.net.
Antony L. Hosking, Portable, mostly-concurrent, mostly-copying garbage collection for multi-processors, Proceedings of the 5th international symposium on Memory management, June 10-11, 2006, Ottawa, Ontario, Canada[doi>10.1145/1133956.1133963]
HotSpot JVM GC. HotSpot JVM GC. http://java.sun.com/javase/technologies/hotspot/gc/index.jsp.
Richard Jones , Rafael Lins, Garbage collection: algorithms for automatic dynamic memory management, John Wiley & Sons, Inc., New York, NY, 1996
Jonkers, H. B. M. 1979. A fast garbage compaction algorithm. Inform. Process. Lett. 9, 1, 25--30.
Haim Kermany , Erez Petrank, The Compressor: concurrent, incremental, and parallel compaction, Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation, June 11-14, 2006, Ottawa, Ontario, Canada[doi>10.1145/1133981.1134023]
B. Lang , F. Dupont, Incremental incrementally compacting garbage collection, Papers of the Symposium on Interpreters and interpretive techniques, p.253-263, June 24-26, 1987, St. Paul, Minnesota, USA[doi>10.1145/29650.29677]
Martin Larose , Marc Feeley, A compacting incremental collector and its performance in a production quality compiler, Proceedings of the 1st international symposium on Memory management, p.1-9, October 17-19, 1998, Vancouver, British Columbia, Canada[doi>10.1145/286860.286861]
Yossi Levanoni , Erez Petrank, An on-the-fly reference-counting garbage collector for java, ACM Transactions on Programming Languages and Systems (TOPLAS), v.28 n.1, p.1-69, January 2006[doi>10.1145/1111596.1111597]
Lieberman, H. and Hewitt, C. E. 1981. A real-time garbage collector based on the lifetimes of objects. AI Memo 569a, MIT, Cambridge, MA.
Johannes J. Martin, An efficient garbage compaction algorithm, Communications of the ACM, v.25 n.8, p.571-580, Aug 1982[doi>10.1145/358589.358625]
F. Lockwood Morris, A time- and space-efficient garbage compaction algorithm, Communications of the ACM, v.21 n.8, p.662-665, Aug. 1978[doi>10.1145/359576.359583]
OpenJDK. Open Source J2SE. http://openjdk.java.net.
Yoav Ossia , Ori Ben-Yitzhak , Irit Goft , Elliot K. Kolodner , Victor Leikehman , Avi Owshanko, A parallel, incremental and concurrent GC for servers, Proceedings of the ACM SIGPLAN 2002 Conference on Programming language design and implementation, June 17-19, 2002, Berlin, Germany[doi>10.1145/512529.512546]
Yoav Ossia , Ori Ben-Yitzhak , Marc Segal, Mostly concurrent compaction for mark-sweep GC, Proceedings of the 4th international symposium on Memory management, October 24-25, 2004, Vancouver, BC, Canada[doi>10.1145/1029873.1029877]
Tony Printezis , David Detlefs, A generational mostly-concurrent garbage collector, Proceedings of the 2nd international symposium on Memory management, p.143-154, October 15-16, 2000, Minneapolis, Minnesota, USA[doi>10.1145/362422.362480]
Narendran Sachindran , J. Eliot B. Moss, Mark-copy: fast copying GC with less space overhead, Proceedings of the 18th annual ACM SIGPLAN conference on Object-oriented programing, systems, languages, and applications, October 26-30, 2003, Anaheim, California, USA[doi>10.1145/949305.949335]
Narendran Sachindran , J. Eliot B. Moss , Emery D. Berger, MC2: high-performance garbage collection for memory-constrained environments, Proceedings of the 19th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, October 24-28, 2004, Vancouver, BC, Canada[doi>10.1145/1028976.1028984]
SPEC. SPEC Java Benchmarks. http://www.spec.org.
Guy L. Steele, Jr., Multiprocessing compactifying garbage collection, Communications of the ACM, v.18 n.9, p.495-508, Sept. 1975[doi>10.1145/361002.361005]
VolanoMark. The VolanoMark Benchmark. http://www.volano.com/benchmarks.html
Michal Wegiel , Chandra Krintz, The mapping collector: virtual memory support for generational, parallel, and concurrent compaction, Proceedings of the 13th international conference on Architectural support for programming languages and operating systems, March 01-05, 2008, Seattle, WA, USA[doi>10.1145/1346281.1346294]
Michal Wegiel , Chandra Krintz, Dynamic prediction of collection yield for managed runtimes, Proceedings of the 14th international conference on Architectural support for programming languages and operating systems, March 07-11, 2009, Washington, DC, USA[doi>10.1145/1508244.1508278]
Paul R. Wilson, Uniprocessor Garbage Collection Techniques, Proceedings of the International Workshop on Memory Management, p.1-42, September 17-19, 1992
T. Yuasa, Real-time garbage collection on general-purpose machines, Journal of Systems and Software, v.11 n.3, p.181-198, Mar. 1990[doi>10.1016/0164-1212(90)90084-Y]
