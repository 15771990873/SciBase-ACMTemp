This article introduces and explores thecondition-basedapproach to solve the consensus problem in asynchronous systems. The approach studiesconditionsthat identify sets of input vectors for which it is possible to solve consensus despite the occurrence of up tofprocess crashes. The first main result definesacceptableconditions and shows that these are exactly the conditions for which a consensus protocol exists. Two examples of realistic acceptable conditions are presented, and proved to be maximal, in the sense that they cannot be extended and remain acceptable. The second main result is a generic consensus shared-memory protocol for any acceptable condition. The protocol always guarantees agreement and validity, and terminates (at least) when the inputs satisfy the condition with which the protocol has been instantiated, or when there are no crashes. An efficient version of the protocol is then designed for the message passing model that works whenf<n/2, and it is shown that no such protocol exists whenfâ‰¥n/2. It is also shown how the protocol's safety can be traded for its liveness.