According to the definition of satisfaction of Boolean dependencies, Theorem 15 is not true for Boolean dependencies with negation. (ApositiveBoolean dependency is built using the Boolean connectives &cuwed;, &cuvee;, and &nrarr;; a general Boolean dependency (with negation) may use also the Boolean connective Â¬.) Actually, the definition of satisfaction is not meaningful for Boolean dependencies with negation, since many are never satisfied. We show how the definition of satisfaction should be changed in order to make Boolean dependencies with negation meaningful and correct the error.We associate with each relationra set &agr;(r) oftruth assignments, as follows. For each pair of distinct tuples ofr, the set &agr;(r) contains the truth assignment that maps an attributeAto true if the two tuples are equal onA, and to false if the two tuples have different values forA. A Boolean dependency &sgr; is satisfied by a relationrif &sgr; (i.e., the corresponding Boolean formula) satisfies every truth assignment of &agr;(r).The original definition given in the paper is equivalent to having &agr;(r) also include the truth assignment that is generated by pairs in which both tuples are really the same tuple ofr, that is, to having &agr;(r) also always include the truth assignment &tgr; mapping all attributes to true. Under that definition, however, many Boolean dependencies with negation are never satisfied and, hence, are meaningless. More precisely, according to the original definition, a Boolean dependency is satisfied by