Suppose we are given two disjoint linearly ordered subsetsAandBof a linearly ordered setC, sayA= {a1<a2< ··· <am} andB= {b1<b2< ··· <bn}. The problem is to determine the linear ordering of their union (i.e. to mergeAandB) by means of a sequence of pairwise comparisons between an element ofAand an element ofB(which we refer to in the paper as the (m, n) problem). Given any algorithmsto solve the (m, n) problem, we are interested in the maximum number of comparisonsKs(m, n) required under all possible orderings ofA∪B. An algorithmsis said to be minimax ifKs(m, n) =K(m, n) whereK(m, n) = minsKs(m, n)It is a rather difficult task to determineK(m, n) in general. In this study the authors are only concerned with the minimax over a particular class of merging algorithms. This class includes the tape merge algorithm, the simple binary algorithm, and the generalized binary algorithm.