Lethbe a recursive function. A partial recursive function&psgr;is i.o. (infinitely often)h-complex if every program for&psgr;requires more thanh(&khgr;) steps to compute&psgr;(&khgr;) for infinitely many inputs&khgr;. A more stringent notion is that of&psgr;being a.e. (almost everywhere)h-complex:&psgr;is a.e.h-complex if every program for&psgr;requires more thanh(&khgr;) steps to compute&psgr;(&khgr;) for all but finitely many inputs&khgr;.These two definitions ofh-complex functions do not yield the same theorems. Although it is possible to prove of every i.o.h-complex recursive function that it is i.o.h-complex, it is not possible to prove of every a.e.h-complex recursive function that it is a.e.h-complex. Similarly, recursive functions not i.o.h-complex can be proven to be such, but recursive functions not a.e.h-complex cannot be so proven.The construction of almost everywhere complex recursive functions appears much more difficult than the construction of infinitely often complex recursive functions. There have been found no “natural” examples of recursive functions requiring more than polynomial time for all but finitely many inputs. It is shown that from a single example of a moderately a.e. complex recursive function, one can obtain a.e. very complex recursive functions.