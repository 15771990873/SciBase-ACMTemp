In practice, almost all dynamic systems require decisions to be made on-line, without full knowledge of their future impact on the system. A general model for the processing of sequences of tasks is introduced, and a general on-line decision algorithm is developed. It is shown that, for an important class of special cases, this algorithm is optimal among all on-line algorithms.Specifically, a task system (S,d) for processing sequences of tasks consists of a setSof states and a cost matrixdwhered(i, jis the cost of changing from stateito statej(we assume thatdsatisfies the triangle inequality and all diagonal entries are 0).     The cost of processing a given task depends on the state of the system. A schedule for a sequenceT1,T2,…,Tkof tasks is a sequences1,s2,…,skof states wheresiis the state in whichTiis processed; the cost of a schedule is the sum of all task processing costs and the state transition costs incurred.An on-line scheduling algorithm is one that choosessionly knowingT1T2…Ti. Such an algorithm isw-competitive if, on any input task sequence, its cost is within an additive constant ofwtimes the optimal offline schedule cost. The competitive ratiow(S,d) is the infimumwfor which there is aw-competitive on-line scheduling algorithm for (S,d). It is shown thatw(S,d) = 2|S|–1for every task systemin whichdis symmetric, andw(S, d) =O(|S|2) for every task system. Finally, randomized on-line scheduling algorithms are introduced. It is shown that for the uniform task system (in whichd(i,j) = 1 for alli,j), the expected competitive ratiow¯(S,d) =O(log|S|).