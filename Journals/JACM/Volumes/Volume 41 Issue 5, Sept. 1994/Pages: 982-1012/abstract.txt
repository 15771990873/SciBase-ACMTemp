We present a practical algorithm for finding minimum-length paths between points in the Euclidean plane with (not necessarily convex) polygonal obstacles. Prior to this work, the best known algorithm for finding the shortest path between two points in the plane required&OHgr;(n2logn)time andO(n2) space, wherendenotes the number of obstacle edges. Assuming that a triangulation or a Voronoi diagram for the obstacle space is provided with the input (if is not, either one can be precomputed inO(nlogn)time), we present anO(kn)time algorithm, wherekdenotes the number of “islands” (connected components) in the obstacle space. The algorithm uses onlyO(n)space and, given a source points, produces anO(n)size data structure such that the distance betweensand any other pointxin the plane (x) is not necessarily an obstacle vertex or a point on an obstacle edge) can be computed inO(1) time. The algorithm can also be used to compute shortest paths for the movement of a disk (so that optimal movement for arbitrary objects can be computed to the accuracy of enclosing them with the smallest possible disk).