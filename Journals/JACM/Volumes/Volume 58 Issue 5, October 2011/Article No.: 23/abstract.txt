Consider ann-vertex graphG= (V,E) of maximum degreeΔ, and suppose that each vertexv∈Vhosts a processor. The processors are allowed to communicate only with their neighbors inG. The communication is synchronous, that is, it proceeds in discrete rounds.In the distributed vertex coloring problem, the objective is to colorGwithΔ+ 1, or slightly more thanΔ+ 1, colors using as few rounds of communication as possible. (The number of rounds of communication will be henceforth referred to asrunning time.) Efficientrandomizedalgorithms for this problem are known for more than twenty years [Alon et al. 1986; Luby 1986]. Specifically, these algorithms produce a (Δ+ 1)-coloring withinO(logn) time, with high probability. On the other hand, the best knowndeterministicalgorithm that requires polylogarithmic time employsO(Δ2) colors. This algorithm was devised in a seminal FOCS’87 paper by Linial [1987]. Its running time isO(log*n). In the same article, Linial asked whether one can color with significantly less thanΔ2colors in deterministic polylogarithmic time. By now, this question of Linial became one of the most central long-standing open questions in this area.In this article, we answer this question in the affirmative, and devise a deterministic algorithm that employsΔ1+o(1) colors, and runs inpolylogarithmictime. Specifically, the running time of our algorithm isO(f(Δ)logΔlogn), for an arbitrarily slow-growing functionf(Δ) =ω(1). We can also produce anO(Δ1+η)-coloring inO(logΔlogn)-time, for an arbitrarily small constantη> 0, and anO(Δ)-coloring inO(Δ&epsi;logn) time, for an arbitrarily small constant&epsi;> 0. Our results are, in fact, far more general than this. In particular, for a graph of arboricitya, our algorithm produces anO(a1+η)-coloring, for an arbitrarily small constantη> 0, in timeO(logalogn).