A classical algorithm for finding a minimum-cost circulation consists of repeatedly finding a residual cycle of negative cost andcancelingit by pushing enough flow around the cycle to saturate an arc. We show that a judicious choice of cycles for canceling leads to a polynomial bound on the number of iterations in this algorithm. This gives a very simple strongly polynomial algorithm that uses no scaling. A variant of the algorithm that uses dynamic trees runs in &Ogr;(nm(logn)min{log(nC),mlogn}) time on a network ofnvertices,marcs, and arc costs of maximum absolute valueC. This bound is comparable to those of the fastest previously known algorithms.