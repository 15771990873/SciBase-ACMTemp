Two different kinds of Byzantine Agreement for distributed systems with processor faults are defined and compared. The first is required when coordinated actions may be performed by each participant at different times. This kind is called Simultaneous Byzantine Agreement (SBA).This paper deals with the number of rounds of message exchange required to reach Byzantine Agreement of either kind (BA). If an algorithm allows its participants to reach Byzantine agreement in every execution in which at mosttparticipants are faulty, then the algorithm is said to toleratetfaults. It is well known that any BA algorithm that toleratestfaults (witht<n- 1 wherendenotes  the total  number of processors) must run at leastt+ 1 rounds in some execution. However, it might be supposed that in executions where the numberfof actual faults is small compared tot, the number of rounds could be correspondingly small. A corollary of our first result states that (whent<n- 1) any algorithm for SBA must runt+ 1 rounds in some execution where there are no faults. For EBA (witht<n- 1), a lower bound of min(t+ 1,f+ 2) rounds is proved. Finally, an algorithm for EBA is presented that achieves the lower bound, provided thattis on the order of the square root of the  total number of  processors.