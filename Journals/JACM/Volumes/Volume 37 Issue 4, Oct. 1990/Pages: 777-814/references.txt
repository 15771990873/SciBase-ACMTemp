ANDREWS, P.B. Resolution in type theory. J. Symb. Logic 36 (1971), 414-432.
Krzysztof R. Apt , M. H. van Emden, Contributions to the Theory of Logic Programming, Journal of the ACM (JACM), v.29 n.3, p.841-862, July 1982[doi>10.1145/322326.322339]
BARENDREGT, H. P. The Lambda Calculus: Its Syntax and Semantics. North Holland, Amsterdam, the Netherlands, 198 I.
BOWEN, K.A. Programming with full first-order logic. In J. E. Hayes, D. Michie, and Y.-H. PaD, Eds. Machine Intelligence, vol. 10. Halsted Press, New York, 1982, 421-440.
CHURCH, A. A formulation of the simple theory of types. J. Symb. Logic 5 (1940), 56-68.
R. L. Constable , S. F. Allen , H. M. Bromley , W. R. Cleaveland , J. F. Cremer , R. W. Harper , D. J. Howe , T. B. Knoblock , N. P. Mendler , P. Panangaden , J. T. Sasaki , S. F. Smith, Implementing mathematics with the Nuprl proof development system, Prentice-Hall, Inc., Upper Saddle River, NJ, 1986
Amy P. Felty , Dale Miller, Specifying Theorem Provers in a Higher-Order Logic Programming Language, Proceedings of the 9th International Conference on Automated Deduction, p.61-80, May 23-26, 1988
Steven Fortune , Daniel Leivant , Michael O'Donnell, The Expressiveness of Simple and Second-Order Type Structures, Journal of the ACM (JACM), v.30 n.1, p.151-185, Jan. 1983[doi>10.1145/322358.322370]
GENTZEN, G. Investigations into logical deduction. In M. E. Szabo, Ed., The Collected Papers of Gerhard Gentzen. North-Holland, Amsterdam, The Netherlands, 1969, pp. 68-131.
GOLDEARB, W.D. The undecidability of the second-order unification problem. Theoret. Comput. Sci. 13 ( 1981 ), 225-230.
GORDON, M., MILNER, A., AND WADSWORTH, C. Edinburgh LCF: A mechanized logic of computation. In Lecture Notes in Computer Science, vol. 78. Springer-Verlag, New York, 1972.
GOULD, W.E. A matching procedure for ~-order logic. Scientific Rep. No. 4. AFCRL (1976), 66-781.
HANNAN, J., AND MILLER, D. Uses of higher-order unification for implementing program transformers. In Proceedings of the 5th International Conference and Symposium on Logic Programming. MIT Press, Cambridge, Mass., 1988, pp. 942-959.
HUET, G. P. The undecidability of unification in third order logic. Inf. Contr. 22, 3 (1973), 257-267.
HUET, G.P. A unification algorithm for typed ~-calculus. Theoret. Comput. Sci. 1 (1975), 27-57.
HUET, G., AND LANG, B. Proving and applying program transformations expressed with secondorder log~c. Acta Inf. 11 (1978), 31-55.
LUCCHESI, C. L. The undecidability of the unification problem for third order languages. Rep. CSRR 2059. Dept. Appl. Analysis and Comput. Sci., Univ. Waterloo, Waterloo, Ont., Canada, 1972.
MILLER, D. Hereditary Harrop formulas and logic programming. In Proceedings of the VIII International Congress of Logic, Methodology, and Philosophy of Science (Moscow). August 1987, pp. 153-156.
Dale Miller, A logical analysis of modules in logic programming, Journal of Logic Programming, v.6 n.1-2, p.79-108, Jan./Mar. 1989[doi>10.1016/0743-1066(89)90031-9]
Dale A. Miller , Gopalan Nadathur, Some uses of higher-order logic in computational linguistics, Proceedings of the 24th annual meeting on Association for Computational Linguistics, p.247-256, July 10-13, 1986, New York, New York[doi>10.3115/981131.981165]
Dale A Miller , Gopalan Nadathur, Higher-order logic programming, Proceedings on Third international conference on logic programming, p.448-462, September 1986, London, United Kingdom
MILLER, D., AND NADATHUR, G. A logic programming approach to manipulating formulas and programs. IEEE Syrup. Logic Prog. 1987, 379-388.
MILLER, D., NADATHUR, G., PFENNING, F., AND SCEDROV, A. Uniform proofs as a foundation for logic programming. Ann. Pure Appl. Logic, to appear.
MILNER, R. A theory of type polymorphism in programming. J. Comput. Syst. Sci. 17 (1978), 348-375.
G. Nadathur, A higher-order logic as the basis for logic programming, University of Pennsylvania, Philadelphia, PA, 1987
NADATHUR, G., AND JAYARAMAN, B. Towards a WAM model for ~Prolog. In Proceedings of the North American Conference on Logic Programming. MIT Press, Cambridge, Mass., 1989, pp. 1180-1198.
NADATHUR, G., AND MILLER, D. An overview of ~,Prolog. In Proceedings of the 5th International Conference on Logic Programming. MIT Press, Cambridge, Mass., 1988, pp. 810-827.
L C Paulson, Natural deduction as higher-order resolution, Journal of Logic Programming, v.3 n.3, p.237-258, Oct. 1986[doi>10.1016/0743-1066(86)90015-4]
Frank Pfenning, Partial polymorphic type inference and higher-order unification, Proceedings of the 1988 ACM conference on LISP and functional programming, p.153-163, July 25-27, 1988, Snowbird, Utah, USA[doi>10.1145/62678.62697]
F. Pfenning , C. Elliot, Higher-order abstract syntax, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.199-208, June 20-24, 1988, Atlanta, Georgia, USA[doi>10.1145/53990.54010]
SCHERLIS, W., AND SCOTT, D. First steps towards inferential programming. In R. E. A. Mason, Ed., Information Processing. Elsevier North-Holland, Amsterdam, The Netherlands, 1983, pp. 199-212.
Leon Sterling , Ehud Shapiro, The art of Prolog: advanced programming techniques, MIT Press, Cambridge, MA, 1986
M. H. Van Emden , R. A. Kowalski, The Semantics of Predicate Logic as a Programming Language, Journal of the ACM (JACM), v.23 n.4, p.733-742, Oct. 1976[doi>10.1145/321978.321991]
WARREN, O. H.D. Higher-order extensions to Prolog: Are they needed? In J. E. Hayes, D. Michie, and Y.-H. Pao, Eds., Machine Intelligence, vol. 10. Halsted Press, 1982, 441-454.
