The minimum consistent DFA problem is that of finding a DFA with as few states as possible that is consistent with a given sample (a finite collection of words, each labeled as to whether the DFA found should accept or reject). Assuming that Pâ‰ NP, it is shown that for any constantk, no polynomial-time algorithm can be guaranteed to find a consistent DFA with fewer thanoptkstates, whereoptis the number of states in the minimum state DFA consistent with the sample. This result holds even if the alphabet is of constant size two, and if the algorithm is allowed to produce an NFA, a regular expression, or a regular grammar that is consistent with the sample. A  similar nonapproximability result is presented     for the problem of finding small consistent linear grammars. For the case of finding minimum consistent DFAs when the alphabet is not of constant size but instead is allowed to vary with the problem specification, the slightly stronger lower bound on approximability ofopt(1-&egr;)log logoptis shown for any &egr; > 0.