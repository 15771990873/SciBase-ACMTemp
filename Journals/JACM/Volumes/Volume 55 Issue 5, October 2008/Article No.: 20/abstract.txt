A distributed consensus algorithm allowsnprocesses to reach a common decision value starting from individual inputs.Wait-freeconsensus, in which a process always terminates within a finite number of its own steps, is impossible in an asynchronous shared-memory system. However, consensus becomes solvable using randomization when a process only has to terminate with probability 1. Randomized consensus algorithms are typically evaluated by theirtotal step complexity, which is the expected total number of steps taken by all processes.This article proves that the total step complexity of randomized consensus is Î˜(n2) in an asynchronous shared memory system using multi-writer multi-reader registers. This result is achieved by improving both the lower and the upper bounds for this problem.In addition to improving upon the best previously known result by a factor of log2n, the lower bound features a greatly streamlined proof. Both goals are achieved through restricting attention to a set oflayeredexecutions and using an isoperimetric inequality for analyzing their behavior.The matching algorithm decreases the expected total step complexity by a lognfactor, by leveraging the multi-writing capability of the shared registers. Its correctness proof is facilitated by viewing each execution of the algorithm as a stochastic process and applying Kolmogorov's inequality.