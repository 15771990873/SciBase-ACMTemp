The approximate string matching problem is to find all locations at which a query of lengthmmatches a substring of a text of lengthnwithk-or-fewer differences. Simple and practical bit-vector algorithms have been designed for this problem, most notably the one used inagrep. These algorithms compute a bit representation of the current state-set of thek-difference automaton for the query, and asymptotically run in eitherO(nm/w) orO(nmlog &sgr;/w) time wherewis the word size of the machine (e.g., 32 or 64 in practice), and &sgr; is the size of the pattern alphabet. Here we present an algorithm  of comparable simplicity that  requires onlyO(nm/w)time by virtue of computing a bit representation of therelocatabledynamic programming matrix for the problem. Thus, the algorithm's performance is independent ofk, and it is found to be more efficient than the previous results for many choices ofkand 
smallm.Moreover, because the algorithm is not 
dependent onk, it can be used to rapidly compute blocks of the dynamic programming matrix as in the 4-Russians algorithm of Wu et al.(1996). This gives rise to anO(kn/w)expected-time algorithm for the case wheremmay be arbitrarily large. In practice this new algorithm,  that computes a region of the dynamic progr amming (d.p.) matrxwentries at a time using the basic algorithm as a subroutine is significantly faster  than our previous 4-Russians algorithm, that computes the same region 4 or 5 entries at a time using table lookup. This performance improvement yields a code that is either superior or competitive withallexisting algorithms except for some filtration algorithms that are superior whenk/mis sufficiently small.