The structural tree-based mapping algorithm is an efficient and 
popular technique for technology mapping. In order to make good use of this mapping technique in FTGA design, it is desirable to design FPGA logic modules based on Boolan functions which can be represented by a tree of gates (i.e., series-parallel or SP functions). Thakur and Wong [1996a; 1996b] studied this issue and they demonstrated the advantages of designing logic modules as universal SP functions, that is, SP functions which can implement all SP functions with a certain number of inputs. The number of variables in the universal function corresponds to the number of inputs to the FPGA module, so it is desirable to have as few variables as possible in the constructed functions. The universal SP functions presented in  Thakur and Wong [1996a; 1966b] were designed manually. Recently, there is an algorithm that can generate these functions automatically [Young and Wong 1997], but the number of variables in the generated functions grows exponentially. In this paper, we present an algorithm to generate, for eachn> 0, a universal SP functionfnfor implementing all SP functions withninputs or less. The number of variables infnis less thann2.376and the constructions are the smallest possible whennis small (nâ‰¤ 7). We also derived a nontrival lower bound on the sizes of the optimal universal SP functions  (&OHgr;(nlogn)).