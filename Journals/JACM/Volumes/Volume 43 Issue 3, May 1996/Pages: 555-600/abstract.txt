In comparative concurrency semantics, one usually distinguishes betweenlinear timeandbranching timesemantic equivalences. Milner's notion ofobservatin equivalenceis often mentioned as the standard example of a branching time equivalence. In this paper we investigate whether observation equivalence really does respect the branching structure of processes, and find that in the presence of the unobservable action &tgr;  of CCS this is not the case.Therefore, the notion ofbranching bisimulation equivalenceis introduced which strongly preserves the branching structure of processes, in the sense that it preserves computations together with the potentials in all intermediate states that are passed through,  even if silent moves are involved. On closed CCS-terms branching bisimulation congruence can be completely axiomatized by the single axion scheme:a.(&tgr;.(y+z)+y)=a.(y+z)(wherearanges over all actions) and the usual loaws for strong congruence.We also establish that for sequential processes observation equivalence is not preserved under refinement of actions, whereas branching bisimulation is.For a large class of processes, it turns out that branching bisimulation and observation equivalence are the same. As far as we know, all protocols that have been verified in the setting of observation equivalence happen to fit in this class, and hence are also valid in the stronger setting of branching bisimulation equivalence.