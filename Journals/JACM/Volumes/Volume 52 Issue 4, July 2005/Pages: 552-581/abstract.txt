We design two compressed data structures for the full-text indexing problem that support efficient substring searches using roughly the space required for storing the text in compressed form.Our first compressed data structure retrieves theoccoccurrences of a patternP[1,p] within a textT[1,n] inO(p&plus;occlog1&plus;εn) time for any chosen ε, 0<ε<1. This data structure uses at most 5nHk(T) &plus;o(n) bits of storage, whereHk(T) is thekth order empirical entropy ofT. The space usage is Θ(n) bits in the worst case ando(n) bits for compressible texts. This data structure exploits the relationship between suffix arrays and the Burrows--Wheeler Transform, and can be regarded as acompressed suffix array.Our second compressed data structure achievesO(p&plus;occ) query time usingO(nHk(T)logεn) &plus;o(n) bits of storage for any chosen ε, 0<ε<1. Therefore, it provides optimaloutput-sensitivequery time usingo(nlogn) bits in the worst case. This second data structure builds upon the first one and exploits the interplay between two compressors: the Burrows--Wheeler Transform and theLZ78algorithm.