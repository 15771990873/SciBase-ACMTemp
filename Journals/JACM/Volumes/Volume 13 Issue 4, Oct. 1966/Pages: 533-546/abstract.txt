It has long been known that increasing the number of tapes used by a Turing machine does not provide the ability to compute any new functions. On the other hand, the use of extra tapes does make it possible to speed up the computation of certain functions. It is known that a square factor is sometimes required for a one-tape machine to behave as a two-tape machine and that a square factor is always sufficient.The purpose of this paper is to show that, if a given function requires computation timeTfor ak-tape realization, then it requires at most computation timeTlogTfor a two-tape realization. The proof of this fact is constructive; given anyk-tape machine, it is shown how to design an equivalent two-tape machine that operates within the stated time bounds. In addition to being interesting in its own right, the trade-off relation between number of tapes and speed of computation can be used in a diagonalization argument to show that ifT(n) andU(n) are two time functions such that infT(n) logT(n) Ã·U(n) = 0 then there exists a function that can be computed within the time boundU(n) but not within the time boundT(n).