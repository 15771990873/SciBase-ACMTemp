We consider the problem of scheduling a collection of dynamically arriving jobs with unknown execution times so as to minimize the average flow time. This is the classic CPU scheduling problem faced by time-sharing operating systems where preemption is allowed. It is easy to see that every algorithm that doesn't unnecessarily idle the processor is at worstn-competitive, wherenis the number of jobs. Yet there was no known nonclairvoyant algorithm, deterministic or randomized, with a competitive ratio provablyO(n1−&epsi;). In this article, we give a randomized nonclairvoyant algorithm, RMLF, that has competitive ratioO(lognlog logn) against an oblivious adversary. RMLF is a slight variation of the multilevel feedback (MLF) algorithm used by the UNIX operating system, further justifying the adoption of this algorithm. It is known that every randomized nonclairvoyant algorithm is Ω(logn)-competitive, and that every deterministic nonclairvoyant algorithm is Ω(n1/3)-competitive.