In atimestamping system, processors repeatedly choose timestamps so that the order of the timestamps obtained reflects the real-time order in which they were requested.Concurrent timestamping systemspermit requests by multiple processors to be issued concurrently; inbounded timestamping systemsthe sizes of the timestamps and the size and number of shared variables are bounded. An algorithm iswait-freeif there exists ana prioribound on the number of steps a processor must take in order to make progress, independent of the action or inaction of other processors. Lettingndenote the number of procesors, we construct a simple wait-free bounded concurrent timestamping system    requiringO(n) steps (accesses to shared memory) for a processor to read the current timestamps and determine the order among them, andO(n) steps to generate a timestamp, independent of the actions of the other processors. In addition, we introduce and implement thetraceable useabstraction, a new primitive providing “inventory control” over values introduced by processors in the course of an algorithm execution. This abstraction has proved to be of great value in converting unbounded algorithms to bounded ones {Attiya and Rachman 1998; Dwork et al. 1992; 1993].