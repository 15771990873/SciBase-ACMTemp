We consider comparator networksMthat are used repeatedly: while the output produced byMis not sorted, it is fed again intoM.  Sorting algorithms working in this way are calledperiodic. The number of parallel steps performed during a single run ofMis called itsperiod, the sortingtimeofMis the total number of parallel steps that are necessary to sort in the worst case. Periodic sorting networks have the advantage that they need little hardware (control logic, wiring, area) and that they are adaptive. We are interested in comparator networks of a constant period, due to their potential applications in hardware design.Previously,   very little was known on such networks. The fastest solutions required timeO(n&egr;) where the depth was roughly 1/&egr;. We introduce a general method calledperiodification schemethat converts automatically an arbitrary sorting network that sortsnitems in timeT(n) and that has layout areaA(n) into a sorting network that has period 5, sorts ***(n•T(n) items in timeO(T(<n)• logn), and has layout areaO(A(n)) •T(n)). In particular, applying this scheme to Batcher's algorithms, we get practical period 5 comparator networks that sort in timeO(log3n). For theoretical interest, one may use the AKS netork resulting in a period 5 comparator network with runtimeO(log2n).