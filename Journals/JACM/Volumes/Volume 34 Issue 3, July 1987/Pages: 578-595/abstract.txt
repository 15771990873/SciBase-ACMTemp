Given a finite set of textsS= {w1, â€¦ ,wk} over some fixed finite alphabet &Sgr;, a complete inverted file forSis an abstract data type that provides the functionsfind(w), which returns the longest prefix ofwthat occurs (as a subword of a word) inS;freq(w), which returns the number of timeswoccurs inS; andlocations(w), which returns the set of positions wherewoccurs inS. A data structure that implements a complete inverted file forSthat occupies linear space and can be built in linear time, using the uniform-cost RAM model, is given. Using this data structure, the time for each of the above query functions is optimal. To accomplish this, techniques from the theory of finite automata and the work on suffix trees are used to build a deterministic finite automaton that recognizes the set of all subwords of the setS. This automaton is then annotated with additional information and compacted to facilitate the desired query functions. The result is a data structure that is smaller and more flexible than the suffix tree.