A computer is a setM(the memory), a setB, a class of mapsS:M→B, known as states, and a class @@@@ of mapsT: @@@@ → @@@@, known as instructions. Each instructionIhas an input regionIR(I), an output regionOR(I), and affected regionsAR(M′,I), forM′⊆IR(I). For example, letIbe the instruction (CLA Y) on the IBM 7094. IfLis the location counter andACis the accumulator, thenIR(I) =Y∪LandOR(I) =AC∪L; ifM′is the address portion ofY, thenAR(M′,I) is the address portion ofAC. The fundamental properties of all these notions are derived, and computers are related to other models, such as sequential machines. The existence problem (how arbitrarily the input, output and affected regions of an instruction can be specified) is fully settled for countable memoryM.