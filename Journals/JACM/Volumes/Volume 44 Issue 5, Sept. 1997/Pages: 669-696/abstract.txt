We provide data strutures that maintain a graph as edges are inserted and deleted, and keep track of the following properties with the following times: minimum spanning forests, graph connectivity, graph 2-edge connectivity, and bipartiteness in timeO(n1/2) per change; 3-edge connectivity, in timeO(n2/3) per change; 4-edge connectivity, in timeO(n&agr;(n)) per change;k-edge connectivity for constantk, in timeO(nlogn) per change;2-vertex connectivity, and 3-vertex connectivity, in theO(n) per change; and  4-vertex connectivity, in timeO(n&agr;(n)) per change. Further results speed up the insertion times to match the bounds of known partially dynamic algorithms.All our algorithms are based on a new technique that transforms an algorithm for sparse graphs into one that will work on any graph, which we callsparsification.