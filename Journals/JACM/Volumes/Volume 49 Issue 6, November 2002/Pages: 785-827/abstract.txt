We study a property ofcorrectnessof programs written in a shared-memory parallel language. This property is a semantic equivalence between the parallel program and itssequential version, that we define. We consider some standard parallel imperative language. Within this language, this correctness property follows from the preservation of data dependences by the control flow and the synchronizations. Our result makes use of the semantics of the sequential version only. Hence, through our result, checking the correctness of someparallelprogram boils down to verifying properties of somesequentialprogram.