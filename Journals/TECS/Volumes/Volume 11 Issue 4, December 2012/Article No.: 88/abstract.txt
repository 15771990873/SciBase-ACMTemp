The instruction cache is a popular optimization target due to the cache's high impact on system performance and power and because of the cache's predictable temporal and spatial locality. This article is an in depth study on the interaction of code reordering (a long-known technique) and cache configuration (a relatively new technique). Experimental results show that code reordering coupled with cache configuration reveals additional energy savings as high as 10--15&percnt; for several benchmarks with reduced cache area as high as 48&percnt;. To exploit these additional benefits, we architect and evaluate several design exploration heuristics for combining these two methods.