J. A. Bergstra , Jan Heering , Paul Klint, Algebraic specification, ACM, New York, NY, 1989
BorovanskÃ½, P., Kirchner, C., Kirchner, H., Moreau, P.-E., and Ringeissen, C. 1998. An overview of elan. Electr. Notes Theor. Comput. Sci. 15.
Robert S. Boyer , J. Strother Moore, A computational logic handbook, Academic Press Professional, Inc., San Diego, CA, 1988
Robert S. Boyer , Yuan Yu, Automated proofs of object code for a widely used microprocessor, Journal of the ACM (JACM), v.43 n.1, p.166-192, Jan. 1996[doi>10.1145/227595.227603]
Cirstea, H. and Kirchner, C. 1999. An Introduction to the Rewriting Calculus. Research Report RR-3818, INRIA (Dec.).
HATS. http://faculty.ist.unomaha.edu/winter/hats-uno/hatsweb/index.html.
Matt Kaufmann , J. Strother Moore , Panagiotis Manolios, Computer-Aided Reasoning: An Approach, Kluwer Academic Publishers, Norwell, MA, 2000
Kaufmann, M., Manolios, P., and Moore, J. S., Eds. 2000b. Computer-Aided Reasoning: Case Studies. Kluwer Academic Publishers, Boston, MA.
Tim Lindholm , Frank Yellin, Java Virtual Machine Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Hanbing Liu , J Strother Moore, Executable JVM model for analytical reasoning: a study, Proceedings of the 2003 workshop on Interpreters, virtual machines and emulators, p.15-23, June 12-12, 2003, San Diego, California[doi>10.1145/858570.858572]
Liu, H. and Moore, J. S. 2004. Java program verification via a jvm deep embedding in acl2.
McCoy, J. A. 2000. An embedded system for safe, secure and reliable execution of high consequence software. In HASE 2004: The 5th IEEE International Symposium on High Assurance Systems Engineering.
J. Strother Moore, Piton: a mechanically verified assembly-level language, Kluwer Academic Publishers, Norwell, MA, 1996
Moore, J. S. 1999. Proving theorems about Java-like byte code. In Correct System Design, Recent Insight and Advances (to Hans Langmaack on the Occasion of his Retirement from his Professorship at the University of Kiel), Springer-Verlag, New York. 139--162.
Moore, J. S. 2003. Proving theorems about Java and the JVM with ACL2. In Models, Algebras and Logic of Engineering Software. IOS Press, Amsterdam. 227--290.
Moore, J. S. and Porter, G. 2001. An executable formal java virtual machine thread model. In Java Virtual Machine Research and Technology Symposium. 91--104.
Mark G. J. van den Brand , Paul Klint , Jurgen J. Vinju, Term rewriting with traversal functions, ACM Transactions on Software Engineering and Methodology (TOSEM), v.12 n.2, p.152-190, April 2003[doi>10.1145/941566.941568]
Bill Venners, Inside the Java Virtual Machine, McGraw-Hill, Inc., New York, NY, 1996
Visser, E. 1999. Strategic pattern matching. In RtA '99: Proceedings of the 10th International Conference on Rewriting Techniques and Applications. London. Springer-Verlag, New York. 30--44.
Visser, E. 2001. Scoped dynamic rewrite rules. Electronic Notes in Theoretical Computer Science, 59, 4.
Eelco Visser , Zine-el-Abidine Benaissa , Andrew Tolmach, Building program optimizers with rewriting strategies, Proceedings of the third ACM SIGPLAN international conference on Functional programming, p.13-26, September 26-29, 1998, Baltimore, Maryland, USA[doi>10.1145/289423.289425]
Gregory L. Wickstrom , Jared Davis , Steven E. Morrison , Steve Roach , Victor L. Winter, The SSP: an example of high-assurance systems engineering, Proceedings of the Eighth IEEE international conference on High assurance systems engineering, p.167-177, March 25-26, 2004, Tampa, Florida
Winter, V. 2004a. Strategy application, observability, and the choice combinator. Technical Report SAND2004-0871, Sandia National Laboratories (Mar.).
Winter, V. 2004b. Strategy construction in the higher-order framework of TL. Electronic Notes in Theoretical Computer Science (ENTCS) 124.
Victor L. Winter , Mahadevan Subramaniam, The transient combinator, higher-order strategies, and the distributed data problem, Science of Computer Programming, v.52 n.1-3, p.165-212, August 2004[doi>10.1016/j.scico.2004.03.006]
Winter, V. L., Roach, S., and Wickstrom, G. 2003. Transformation-oriented programming: A development methodology for high assurance software. In Advances in Computers: Highly Dependable Software, M. Zelkowitz, Ed. vol. 58. 47--116.
