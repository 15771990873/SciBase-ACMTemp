Modern embedded processors are designed to maximize execution efficiencyâ€”the amount of performance achieved per unit of energy dissipated while meeting minimum performance levels. To increase this efficiency, we propose utilizingstatic strands, dependence chains without fan-out, which are exposed by a compiler pass. These dependent instructions are resequenced to be sequential and annotated to communicate their location to the hardware. Importantly, this modified application is binary compatible and functionally identical to the original, allowing transparent execution on a baseline processor. However, these static strands can be easily collapsed and optimized by simple processor modifications, significantly reducing the workload energy. Results show that over 30&percnt; of MediaBench and Spec2000int dynamic instructions can be collapsed, reducing issue logic energy by 20&percnt;, bypass energy 19&percnt;, and register file energy 14&percnt;. In addition, by increasing the effective capactity of pipeline resources by almost a third, average IPC can be improved up to 15&percnt;. This performance gain can then be traded in for a lower clock frequency to maintain a basline level of performance, further reducing energy.