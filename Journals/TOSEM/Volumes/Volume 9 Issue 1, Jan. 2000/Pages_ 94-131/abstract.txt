This article studies an abstract model of dependencies between software configuration items based on a theory of concurrent computation over a class of Petri nets calledproductionnets. A general theory of build optimizations and their correctness is developed based on a form of abstract interpretation called abuild abstraction; these are created during a build and are used to optimize subsequent builds. Various examples of such optimizations are discussed. The theory is used to show how properties can be characterized and proved, and how optimizations can be composed and compared.