ACMCS. 1989. ACM Comput. Surv., volume 21, issue 3.
A. L. Amber , M. M. Burnett, Influence of Visual Technology on the Evolution of Language Environments, Computer, v.22 n.10, p.9-22, October 1989[doi>10.1109/2.42011]
Robert Arnson , Mitchell Waite , Zane Thomas, Visual Basic how-To, Sams, Indianapolis, IN, 1993
Ed Baroth , Chris Hartsough, Visual programming in the real world, Visual object-oriented programming: concepts and environments, Manning Publications Co., Greenwich, CT, 1995
V R Basili , R W Selby , D H Hutchens, Experimentation in software engineering, IEEE Transactions on Software Engineering, v.12 n.7, p.733-743, July 1986
Thomas J. Bergin, Jr. , Richard G. Gibson, Jr., History of programming languages---II, ACM, New York, NY, 1996
G.M. Birtwhistle , O.J. Dahl , B. Myhrhaug , K. Nygaard, Simula Begin, Chartwell-Bratt Ltd, 1979
Boehm, B. W. 1976. Software enginering. IEEE Trans. Comput. C-25, 12 (Dec.), 1226--1241.
Alan Borning, The Programming Language Aspects of ThingLab, a Constraint-Oriented Simulation Laboratory, ACM Transactions on Programming Languages and Systems (TOPLAS), v.3 n.4, p.353-387, Oct. 1981[doi>10.1145/357146.357147]
P. Bottoni , M. F. Costabile , S. Leviakli , P. Mussio, From visual language specification to legal visual interaction, Proceedings of the 1997 IEEE Symposium on Visual Languages (VL '97), p.234, April 23-26, 1997
Bron, C., Fokkinga, M., and Haas, A. 1975. A proposal for dealing with abnormal termination of programs. Tech. Rep. Mem 150, Twente University of Technology. November.
Margaret M. Burnett , Marla J. Baker , Carisa Bohus , Paul Carlson , Sherry Yang , Pieter van Zee, Scaling Up Visual Programming Languages, Computer, v.28 n.3, p.45-54, March 1995[doi>10.1109/2.366157]
Margaret M. Burnett , David W. McIntyre, Visual Programming, Computer, v.28 n.3, p.14-16, March 1995
Margaret Burnett , Curtis Cook , Omkar Pendse , Gregg Rothermel , Jay Summet , Chris Wallace, End-user software engineering with assertions in the spreadsheet paradigm, Proceedings of the 25th International Conference on Software Engineering, May 03-10, 2003, Portland, Oregon
Luca Cardelli , Peter Wegner, On understanding types, data abstraction, and polymorphism, ACM Computing Surveys (CSUR), v.17 n.4, p.471-523, Dec. 1985[doi>10.1145/6041.6042]
T. A. Cargill, The case against multiple inheritance in C++, The evolution of C++: language design in the marketplace of ideas, MIT Press, Cambridge, MA, 1993
Shi-Kuo Chang , Michael J. Tauber , Bing Yu , Jing-Sheng Yu, A Visual Language Compiler, IEEE Transactions on Software Engineering, v.15 n.5, p.506-525, May 1989[doi>10.1109/32.24700]
Collins, A. M. and Quillian, M. 1969. Retrieval time for semantic memory. J. Verb. Learn. Verb. Behav. 8, 240--247.
Cooper, A. 1996. Why I am called ‘the father of Visual Basic’. http://www.cooper.com. Accessed December 26, 2002.
P. J. Courtois , F. Heymans , D. L. Parnas, Concurrent control with “readers” and “writers”, Communications of the ACM, v.14 n.10, p.667-668, Oct. 1971[doi>10.1145/362759.362813]
Cox, P. T., Giles, F. R., and Pietrzykowski, T. 1989. Prograph: A step towards liberating programming from textual conditioning. In 1989 IEEE Workshop on Visual Languages. 150--156.
Claudia Crimi , Angela Guercio , Giuliano Pacini , Genoveffa Tortora , Maurizio Tucci, Automating Visual Language Generation, IEEE Transactions on Software Engineering, v.16 n.10, p.1122-1135, October 1990[doi>10.1109/32.60293]
Dahl, O. and Nygaard, K. 1967. SIMULA 67 common base definition. Tech. rep., Norwegian Computing Center.
O. J. Dahl , E. W. Dijkstra , C. A. R. Hoare, Structured programming, Academic Press Ltd., London, UK, 1972
Dijkstra, E. 1969. Structured programming. In Software Engineering Techniques: Report on a Conference sponsored by the NATO Science Committees, J. Buxton and B. Randell, Eds. Rome, Italy, 84--88.
E. W. Dijkstra, Solution of a problem in concurrent programming control, Communications of the ACM, v.8 n.9, p.569, Sept. 1965[doi>10.1145/365559.365617]
Dijkstra, E. W. 1968a. Cooperating sequential processes. In Programming Languages, F. Genuys, Ed. Academic Press, 43--112.
Edsger W. Dijkstra, Letters to the editor: go to statement considered harmful, Communications of the ACM, v.11 n.3, p.147-148, March 1968[doi>10.1145/362929.362947]
DOD, U. 1980. Reference manual for the Ada programming language. In DOD. New York.
Margaret A. Ellis , Bjarne Stroustrup, The annotated C++ reference manual, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1990
Michael Frankel, Enabling reuse with Ada generics, Proceedings of the tenth annual Washington Ada symposium on Ada: Ada's role in software engineering, p.17-30, June 28-July 01, 1993, McLean, Virginia, USA[doi>10.1145/260096.260201]
J. D. Gannon, An experimental evaluation of data type conventions, Communications of the ACM, v.20 n.8, p.584-595, Aug. 1977[doi>10.1145/359763.359800]
Gannon, J. and Horning, J. 1975. Language design for programming reliability. IEEE Trans. Softw. Eng. SE-1, 2 (June), 179--191.
Carlo Ghezzi , Mehdi Jazayeri, Programming Language Concepts, John Wiley & Sons, Inc., New York, NY, 1997
Ephraim P. Gilnert , Steven L. Tanimoto, Pict: An Interactive Graphical Programming Environment, Computer, v.17 n.11, p.7-25, November 1984[doi>10.1109/MC.1984.1658997]
Adele Goldberg, SMALLTALK-80:  the interactive programming environment, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1984
Adele Goldberg , David Robson, Smalltalk-80: the language and its implementation, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1983
John B. Goodenough, Exception handling: issues and a proposed notation, Communications of the ACM, v.18 n.12, p.683-696, Dec. 1975[doi>10.1145/361227.361230]
John B. Goodenough, Structured exception handling, Proceedings of the 2nd ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.204-224, January 20-22, 1975, Palo Alto, California[doi>10.1145/512976.512997]
James Gosling , Bill Joy , Guy L. Steele, The  Java Language Specification, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1996
Justin O. Graver , Ralph E. Johnson, A type system for Smalltalk, Proceedings of the 17th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.136-150, December 1989, San Francisco, California, USA[doi>10.1145/96709.96722]
Green, T. and Petre, M. 1996. Usability analysis of visual programming environments: A ‘cognitive dimensions’ framework. J. Vis. Lang. Comput. 7, 2 (June), 131--174.
Guttag, J. V., Horning, J. J., and Wing, J. M. 1985. The Larch family of specification languages. IEEE Softw. 2, 5 (Sept.), 24--36.
A N Habermann , D Notkin, Gandalf: software development environments, IEEE Transactions on Software Engineering, v.12 n.12, p.1117-1127, Dec.1986
Habermann, A. N. 1973. Critical comments on the programming language Pascal. Acta Informatica 3, 47--57.
Per Brinch Hansen, Structured multiprogramming, Communications of the ACM, v.15 n.7, p.574-578, July 1972[doi>10.1145/361454.361473]
Hansen, P. B. 1975. The programming language concurrent Pascal. IEEE Trans. Softw. Eng. 1, 2, 199--207.
Per Brinch Hansen, Monitors and Concurrent Pascal: a personal history, History of programming languages---II, ACM, New York, NY, 1996[doi>10.1145/234286.1057814]
Samuel P. Harbison, Modula-3, Prentice-Hall, Inc., Upper Saddle River, NJ, 1992
Richard Helm , Kim Marruitt , Martin Odersky, Building visual language parsers, Proceedings of the SIGCHI Conference on Human Factors in Computing Systems, p.105-112, April 27-May 02, 1991, New Orleans, Louisiana, USA[doi>10.1145/108844.108860]
Masahito Hirakawa , Minoru Tanaka , Tadao Ichikawa, An Iconic Programming System, HI-VISUAL, IEEE Transactions on Software Engineering, v.16 n.10, p.1178-1184, October 1990[doi>10.1109/32.60297]
C. A. R. Hoare, An axiomatic basis for computer programming, Communications of the ACM, v.12 n.10, p.576-580, Oct. 1969[doi>10.1145/363235.363259]
Hoare, C. 1974a. Hints on programming language design. In State of the Art Report 20: Computer Systems Reliabilty, C. Bunyan, Ed. Pergamon/Infotech. This paper originated in a keynote address at the ACM SIGPLAN POPL conference in Boston in October 1973 and although it was not in the proceedings, it was distributed at the conference. A 1989 collection of Dr. Hoare's essays entitled Essays in Computing Science published by Prentice Hall, also contains a reprint of this paper.
C. A. R. Hoare, Monitors: an operating system structuring concept, Communications of the ACM, v.17 n.10, p.549-557, Oct. 1974[doi>10.1145/355620.361161]
C. A. R. Hoare, Communicating sequential processes, Communications of the ACM, v.21 n.8, p.666-677, Aug. 1978[doi>10.1145/359576.359585]
Martin E. Hopkins, A case for the GOTO, Proceedings of the ACM annual conference, p.787-790, August 01-01, 1972, Boston, Massachusetts, USA[doi>10.1145/800194.805860]
Horning, J. J. 1979. Programming languages. In Computing Systems Reliability, T. Anderson and B. Randell, Eds. Cambridge University Press, 109--152.
Horowitz, E. and Munson, J. G. 1984. An expansive view of reusable software. Trans. Softw. Eng. SE-10, 5 (Sept.), 477--487.
Jean D. Ichbiah , Bernd Krieg-Brueckner , Brian A. Wichmann , John G. P. Barnes , Olivier Roubine , Jean-Claude Heliard, Rationale for the design of the Ada programming language, ACM SIGPLAN Notices, v.14 n.6b, p.1-261, June 1979[doi>10.1145/956653.956654]
IEEESW 1989. IEEE Software, issue on parallel programming.
IFIP 2004. http://www.mlaa.com.au/IFIPWG2.4/index.htm.
Daniel H. H. Ingalls, The Smalltalk-76 programming system design and implementation, Proceedings of the 5th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.9-16, January 23-25, 1978, Tucson, Arizona[doi>10.1145/512760.512762]
Keffer, T. 1995. Programming with the standard template library, sage advice for coping with the stl. Dr. Dobb's Journal 1995, SI3.
Kiczales, G., Lamping, J., Mendhekar, A., Maeda, C., Lopes, C. V., Loingtier, J.-M., and Irwin, J. 1997. Aspect-oriented programming. In Proceedings of the European Conference on Object-oriented Programming (ECOOP). Springer-Verlag LNCS 1241.
Andrew Koenig , Bjarne Stroustrup, Exception handling for C++, The evolution of C++: language design in the marketplace of ideas, MIT Press, Cambridge, MA, 1993
Library, I. S. R. 1970. IBM System/360 Operating System PL/I (F) Language Reference Manual. 4th edition.
Martin Lippert , Cristina Videira Lopes, A study on exception detection and handling using aspect-oriented programming, Proceedings of the 22nd international conference on Software engineering, p.418-427, June 04-11, 2000, Limerick, Ireland[doi>10.1145/337180.337229]
Barbara Liskov, A history of CLU, The second ACM SIGPLAN conference on History of programming languages, p.133-147, April 20-23, 1993, Cambridge, Massachusetts, USA[doi>10.1145/154766.155367]
Barbara Liskov , John Guttag, Abstraction and specification in program development, MIT Press, Cambridge, MA, 1986
Liskov, B. and Snyder, A. 1979. Exception handling in CLU. IEEE Trans. Softw. Eng. SE-5, 6 (Nov.), 546--558.
Barbara Liskov , Alan Snyder , Russell Atkinson , Craig Schaffert, Abstraction mechanisms in CLU, Communications of the ACM, v.20 n.8, p.564-576, Aug. 1977[doi>10.1145/359763.359789]
Barbara Liskov , Stephen Zilles, Programming with abstract data types, Proceedings of the ACM SIGPLAN symposium on Very high level languages, p.50-59, March 28-29, 1974, Santa Monica, California, USA[doi>10.1145/800233.807045]
Liskov, B. and Zilles, S. 1975. Specification techniques for data abstractions. IEEE Trans. Softw. Eng. SE-1, 7--19.
Liskov, B. H. 1972. A design methodology for reliable software systems. In Proceedings of the Fall Joint Computer Conference. 191--198.
John D. Litke, A systematic approach for implementing fault tolerant software designs in Ada, Proceedings of the conference on TRI-ADA '90, p.403-408, December 03-06, 1990, Baltimore, Maryland, USA[doi>10.1145/255471.255565]
David C. Luckham , W. Polak, Ada exception handling: an axiomatic approach, ACM Transactions on Programming Languages and Systems (TOPLAS), v.2 n.2, p.225-233, April 1980[doi>10.1145/357094.357100]
M. Donald MacLaren, Exception handling in PL/I, Proceedings of an ACM conference on Language design for reliable software, p.101-104, March 28-30, 1977, Raleigh, North Carolina[doi>10.1145/800022.808316]
Ole Lehrmann Madsen , Boris Magnusson , Birger Mølier-Pedersen, Strong typing of object-oriented languages revisited, Proceedings of the European conference on object-oriented programming on Object-oriented programming systems, languages, and applications, p.140-150, September 1990, Ottawa, Canada[doi>10.1145/97945.97964]
John McCarthy, LISP 1.5 Programmer's Manual, The MIT Press, 1962
McIlroy, D. 1976. Mass-produced software components. In Software Engineering Concepts and Techniques, 1968 NATO Conference on Software Engineering, J. Buxton, P. Naur, and B. Randell, Eds. 88--98.
Robert C. Miller , Brad A. Myers, Outlier finding: focusing user attention on possible errors, Proceedings of the 14th annual ACM symposium on User interface software and technology, November 11-14, 2001, Orlando, Florida[doi>10.1145/502348.502361]
Murray, R. 1988. Building well-behaved type relationships in C&plus;&plus;. In Proceedings of USENIX. 19--30.
Brad A. Myers, Creating user interfaces using programming by example, visual programming, and constraints, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.2, p.143-177, April 1990[doi>10.1145/78942.78943]
Kristen Nygaard , Ole-Johan Dahl, The development of the SIMULA languages, History of programming languages I, ACM, New York, NY, 1978[doi>10.1145/960118.808391]
John F. Pane , Brad A. Myers , Leah B. Miller, Using HCI Techniques to Design a More Usable Programming System, Proceedings of the IEEE 2002 Symposia on Human Centric Computing Languages and Environments (HCC'02), p.198, September 03-06, 2002
Parnas, D. 1971. On the criteria to be used in decomposing systems into modules. Tech. Rep. Department of Computer Science, Carnegie-Mellon University.
D. L. Parnas, On the criteria to be used in decomposing systems into modules, Communications of the ACM, v.15 n.12, p.1053-1058, Dec. 1972[doi>10.1145/361598.361623]
Dewayne E. Perry, The inscape environment, Proceedings of the 11th international conference on Software engineering, p.2-11, May 1989, Pittsburgh, Pennsylvania, USA[doi>10.1145/74587.74588]
P. J. Plauger, The Standard Template Library, C/C++ Users Journal, v.13 n.12, p.10-20, Dec. 1995
G. J. Popek , J. J. Horning , B. W. Lampson , J. G. Mitchell , R. L. London, Notes on the design of Euclid, ACM SIGPLAN Notices, v.12 n.3, p.11-18, March 1977[doi>10.1145/390017.808307]
Rubén Prieto-Díaz, Status Report: Software Reusability, IEEE Software, v.10 n.3, p.61-66, May 1993[doi>10.1109/52.210605]
George Radin, The early history and characteristics of PL/I, History of programming languages I, ACM, New York, NY, 1978[doi>10.1145/960118.808389]
B. Randell, System structure for software fault tolerance, Proceedings of the international conference on Reliable software, p.437-449, April 21-23, 1975, Los Angeles, California[doi>10.1145/800027.808467]
Orna Raz , Philip Koopman , Mary Shaw, Semantic anomaly detection in online data sources, Proceedings of the 24th International Conference on Software Engineering, May 19-25, 2002, Orlando, Florida[doi>10.1145/581339.581378]
Samuel T. Redwine, Jr. , William E. Riddle, Software technology maturation, Proceedings of the 8th international conference on Software engineering, p.189-200, August 28-30, 1985, London, England
Steven P. Reiss, Graphical program development with PECAN program development systems, Proceedings of the first ACM SIGSOFT/SIGPLAN software engineering symposium on Practical software development environments, p.30-41, April 1984[doi>10.1145/800020.808246]
Martin P. Robillard , Gail C. Murphy, Designing robust Java programs with exceptions, Proceedings of the 8th ACM SIGSOFT international symposium on Foundations of software engineering: twenty-first century applications, p.2-10, November 06-10, 2000, San Diego, California, USA[doi>10.1145/355045.355046]
Jeremy Roschelle , Chris DiGiano , Manolis Koutlis , Alexander Repenning , Jonathan Phillips , Nicholas Jackiw , Dan Suthers, Developing Educational Software Components, Computer, v.32 n.9, p.50-58, September 1999[doi>10.1109/2.789751]
Gregg Rothermel , Lixin Li , Christopher DuPuis , Margaret Burnett, What you see is what you test: a methodology for testing form-based visual programs, Proceedings of the 20th international conference on Software engineering, p.198-207, April 19-25, 1998, Kyoto, Japan
Lawrence A. Rowe, Data abstraction from a programming language viewpoint, Proceedings of the 1980 workshop on Data abstraction, databases and conceptual modeling, p.29-35, June 23-26, 1980, Pingree Park, Colorado, USA[doi>10.1145/800227.806873]
Types, ACM SIGMOD Record, v.11 n.2, p.43-52, Feb 1981[doi>10.1145/960126.806876]
Rubin, F. 1987. 'goto considered harmful considered harmful. Comm. ACM 30, 3, 195--196.
Rubin, R. V., Golin, E. J., and Reiss, S. P. 1985. Thinkpad: A graphical system for programming by demonstration. IEEE Softw. 2, 2 (Mar.), 73--79.
Michael L. Scott, Programming language pragmatics, Morgan Kaufmann Publishers Inc., San Francisco, CA, 2000
Shaw, M. 1981. ALPHARD: Form and Content. Springer-Verlag, New York.
Shaw, M. 1984. Abstraction techniques in modern programming languages. IEEE Softw. 1, 4, 10--26.
Mary Shaw, The coming-of-age of software architecture research, Proceedings of the 23rd International Conference on Software Engineering, p.657-664, May 12-19, 2001, Toronto, Ontario, Canada
Shaw, M., Almes, G. T., Newcomer, J., Reid, B., and Wulf, W. 1978. Comparison of programming languages for software engineering. Tech. rep., Department of Computer Science, CMU.
Mary Shaw , William A. Wulf , Ralph L. London, Abstraction and verification in Alphard: defining and specifying iteration and generators, Communications of the ACM, v.20 n.8, p.553-564, Aug. 1977[doi>10.1145/359763.359782]
Smith, D. C. 1977. Pygmalion: A Computer Program to Model and Stimulate Creative Thought. Birkhauser.
Stroustrup, B. 1987. Possible directions for C&plus;&plus;. In Proceedings of USENIX C&plus;&plus; Workshop.
Bjarne Stroustrup, A history of C++: 1979–1991, The second ACM SIGPLAN conference on History of programming languages, p.271-297, April 20-23, 1993, Cambridge, Massachusetts, USA[doi>10.1145/154766.155375]
Sutherland, I. E. 1963. Sketchpad: A man--machine graphical communication system. In AFIPS Spring Joint Computer Conference.
Sutherland, W. 1966. On-line graphical specification of computer procedures. Tech. rep., MIT. MIT Ph.D. Thesis.
Andrew S. Tanenbaum, A Tutorial on Algol 68, ACM Computing Surveys (CSUR), v.8 n.2, p.155-190, June 1976[doi>10.1145/356669.356671]
Tim Teitelbaum , Thomas Reps, The Cornell program synthesizer: a syntax-directed programming environment, Communications of the ACM, v.24 n.9, p.563-573, Sept. 1981[doi>10.1145/358746.358755]
Warren Teitelman, A tour through cedar, Proceedings of the 7th international conference on Software engineering, p.181-195, March 26-29, 1984, Orlando, Florida, USA
TGS Systems. 1990. Prograph Tutorial Manual. The Gunakara Sun Systems, Ltd. 2nd Printing, July.
Walter F. Tichy, Should Computer Scientists Experiment More?, Computer, v.31 n.5, p.32-40, May 1998[doi>10.1109/2.675631]
van Wijngaarden, A., Mailloux, B., Peck, J., Koster, C., Sintzoff, M., Lindsey, C., Meertens, L., and Fisker, R. G. E. 1968. Revised Report on the Algorithmic Langauge ALGOL68. Also appeared in ACM SIGPLAN Notices, Volume 12, Number 5, 1--70, May 1977; available online at http://members.dokom.net/2.kloke/RR/rrTOC.html.
Jim Waldo, The case for multiple inheritance in C++, The evolution of C++: language design in the marketplace of ideas, MIT Press, Cambridge, MA, 1993
Wegner, P. 1984. Capital-intensive software technology. IEEE Softw. 1, 3 (July), 43--97.
Niklaus Wirth, Program development by stepwise refinement, Communications of the ACM, v.14 n.4, p.221-227, April 1971[doi>10.1145/362575.362577]
Wirth, N. 1971b. The programming language Pascal. Acta Informatica 1, 35--63.
Wirth, N. 1977. Modula: A language for modular multiprogramming. Software Practice and Experience 7, 3--35.
Wulf, W., London, R., and Shaw, M. 1976. An introduction to the construction and verification of alphard programs. IEEE Trans. Softw. Eng. SE-2, 4, 390.
W. Wulf , Mary Shaw, Global variable considered harmful, ACM SIGPLAN Notices, v.8 n.2, p.28-34, February 1973[doi>10.1145/953353.953355]
W. A. Wulf , D. B. Russell , A. N. Habermann, BLISS: a language for systems programming, Communications of the ACM, v.14 n.12, p.780-790, Dec. 1971[doi>10.1145/362919.362936]
