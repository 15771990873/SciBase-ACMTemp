Marwen Abbes , Foutse Khomh , Yann-Gael Gueheneuc , Giuliano Antoniol, An Empirical Study of the Impact of Two Antipatterns, Blob and Spaghetti Code, on Program Comprehension, Proceedings of the 2011 15th European Conference on Software Maintenance and Reengineering, p.181-190, March 01-04, 2011[doi>10.1109/CSMR.2011.24]
Robert M. Bell , Thomas J. Ostrand , Elaine J. Weyuker, Looking for bugs in all the right places, Proceedings of the 2006 international symposium on Software testing and analysis, July 17-20, 2006, Portland, Maine, USA[doi>10.1145/1146238.1146246]
Christian Bird , Nachiappan Nagappan , Harald Gall , Brendan Murphy , Premkumar Devanbu, Putting It All Together: Using Socio-technical Networks to Predict Failures, Proceedings of the 2009 20th International Symposium on Software Reliability Engineering, p.109-119, November 16-19, 2009[doi>10.1109/ISSRE.2009.17]
Mohamed Boussaa, Wael Kessentini, Marouane Kessentini, Slim Bechikh, and Soukeina Ben Chikha. 2013. Competitive coevolutionary code-smells detection. In Proceedings of the 5th International Symposium on Search Based Software Engineering. Springer, 50--65.
D. Bowes, D. Randall, and T. Hall. 2013. The inconsistent measurement of message chains. In Proceeding of the 4th International Workshop on Emerging Trends in Software Metrics. ACM.
William J. Brown , Raphael C. Malveau , Hays W. McCormick, III , Thomas J. Mowbray, AntiPatterns: refactoring software, architectures, and projects in crisis, John Wiley & Sons, Inc., New York, NY, 1998
Jacob Cohen. 1960. A coefficient of agreement for nominal scales. Edu. Psychol. Measur. 20, 1 (1960), 37--46.
S. Counsell , R. M. Hierons , R. Najjar , G. Loizou , Y. Hassoun, The Effectiveness of Refactoring, Based on a Compatibility Testing Taxonomy and a Dependency Graph, Proceedings of the Testing: Academic & Industrial Conference on Practice And Research Techniques, p.181-192, August 29-31, 2006[doi>10.1109/TAIC-PART.2006.33]
Stefany Coxe, Stephen G. West, and Leona S. Aiken. 2009. The analysis of count data: A gentle introduction to Poisson regression and its alternatives. J. Personality Assess. 91, 2 (2009), 121--136.
Marco D'Ambros , Alberto Bacchelli , Michele Lanza, On the Impact of Design Flaws on Software Defects, Proceedings of the 2010 10th International Conference on Quality Software, p.23-31, July 14-15, 2010[doi>10.1109/QSIC.2010.58]
Andrea De Lucia , Vincenzo Deufemia , Carmine Gravino , Michele Risi, Improving Behavioral Design Pattern Detection through Model Checking, Proceedings of the 2010 14th European Conference on Software Maintenance and Reengineering, p.176-185, March 15-18, 2010[doi>10.1109/CSMR.2010.16]
Giovanni Denaro , Mauro Pezzè, An empirical evaluation of fault-proneness models, Proceedings of the 24th International Conference on Software Engineering, May 19-25, 2002, Orlando, Florida[doi>10.1145/581339.581371]
Annette J. Dobson. 2010. An Introduction to Generalized Linear Models. CRC Press.
Bart Du Bois, Serge Demeyer, Jan Verelst, Tom Mens, and Marijn Temmerman. 2006. Does God class decomposition affect comprehensibility&quest;. In Proceedings of the IASTED Conference on Software Engineering. 346--355.
Francesca Arcelli Fontana , Elia Mariani , Andrea Mornioli , Raul Sormani , Alberto Tonello, An Experience Report on Using Code Smells Detection Tools, Proceedings of the 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops, p.450-457, March 21-25, 2011[doi>10.1109/ICSTW.2011.12]
Francesca Arcelli Fontana , Marco Zanoni , Alessandro Marino , Mika V. Mäntylä, Code Smell Detection: Towards a Machine Learning-Based Approach, Proceedings of the 2013 IEEE International Conference on Software Maintenance, p.396-399, September 22-28, 2013[doi>10.1109/ICSM.2013.56]
Refactoring: improving the design of existing code, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Kehan Gao and T. M. Khoshgoftaar. 2007. A comprehensive empirical study of count models for software fault prediction. IEEE Trans. Reliab. 56, 2 (2007), 223--236.
Nils Göde , Rainer Koschke, Frequency and risks of changes to clones, Proceedings of the 33rd International Conference on Software Engineering, May 21-28, 2011, Waikiki, Honolulu, HI, USA[doi>10.1145/1985793.1985836]
Yann-Gaël Guéhéneuc. 2005. Ptidej: Promoting patterns with patterns. In Proceedings of the 1st ECOOP Workshop on Building a System Using Patterns.
Yann-Gaël Guéhéneuc , Giuliano Antoniol, DeMIMA: A Multilayered Approach for Design Pattern Identification, IEEE Transactions on Software Engineering, v.34 n.5, p.667-684, September 2008[doi>10.1109/TSE.2008.48]
Tracy Hall , Sarah Beecham , David Bowes , David Gray , Steve Counsell, A Systematic Literature Review on Fault Prediction Performance in Software Engineering, IEEE Transactions on Software Engineering, v.38 n.6, p.1276-1304, November 2012[doi>10.1109/TSE.2011.103]
Tracy Hall , David Bowes , Gernot Liebchen , Paul Wernick, Evaluating three approaches to extracting fault data from software change repositories, Proceedings of the 11th international conference on Product-Focused Software Process Improvement, June 21-23, 2010, Limerick, Ireland[doi>10.1007/978-3-642-13792-1_10]
Timea Illes-Seifert , Barbara Paech, Exploring the relationship of history characteristics and defect count: an empirical study, Proceedings of the 2008 workshop on Defects in large software systems, July 20-20, 2008, Seattle, Washington[doi>10.1145/1390817.1390821]
Elmar Juergens , Florian Deissenboeck , Benjamin Hummel , Stefan Wagner, Do code clones matter?, Proceedings of the 31st International Conference on Software Engineering, p.485-495, May 16-24, 2009[doi>10.1109/ICSE.2009.5070547]
Vigdis By Kampenes , Tore Dybå , Jo E. Hannay , Dag I. K. Sjøberg, Systematic review: A systematic review of effect size in software engineering experiments, Information and Software Technology, v.49 n.11-12, p.1073-1086, November, 2007[doi>10.1016/j.infsof.2007.02.015]
Cory J. Kapser , Michael W. Godfrey, "Cloning considered harmful" considered harmful: patterns of cloning in software, Empirical Software Engineering, v.13 n.6, p.645-692, December  2008[doi>10.1007/s10664-008-9076-6]
Joshua Kerievsky, Refactoring to Patterns, Pearson Higher Education, 2004
Foutse Khomh , Massimiliano Di Penta , Yann-Gael Gueheneuc, An Exploratory Study of the Impact of Code Smells on Software Change-proneness, Proceedings of the 2009 16th Working Conference on Reverse Engineering, p.75-84, October 13-16, 2009[doi>10.1109/WCRE.2009.28]
Foutse Khomh , Stéphane Vaucher , Yann-Gaël Guéhéneuc , Houari Sahraoui, A Bayesian Approach for the Detection of Code and Design Smells, Proceedings of the 2009 Ninth International Conference on Quality Software, p.305-314, August 24-25, 2009[doi>10.1109/QSIC.2009.47]
Sunghun Kim , Thomas Zimmermann , E. James Whitehead Jr. , Andreas Zeller, Predicting Faults from Cached History, Proceedings of the 29th international conference on Software Engineering, p.489-498, May 20-26, 2007[doi>10.1109/ICSE.2007.66]
Wei Li , Raed Shatnawi, An empirical study of the bad smells and class error probability in the post-release object-oriented system evolution, Journal of Systems and Software, v.80 n.7, p.1120-1128, July, 2007[doi>10.1016/j.jss.2006.10.018]
K. Lieberherr , I. Holland , A. Riel, Object-oriented programming: an objective sense of style, ACM SIGPLAN Notices, v.23 n.11, p.323-334, Nov. 1988[doi>10.1145/62084.62113]
Hui Liu , Xue Guo , Weizhong Shao, Monitor-Based Instant Software Refactoring, IEEE Transactions on Software Engineering, v.39 n.8, p.1112-1126, August 2013[doi>10.1109/TSE.2013.4]
Mika V. Mäntylä , Casper Lassenius, Subjective evaluation of software evolvability using code smells: An empirical study, Empirical Software Engineering, v.11 n.3, p.395-431, September 2006[doi>10.1007/s10664-006-9002-8]
Mika Mäntylä , Jari Vanhanen , Casper Lassenius, A Taxonomy and an Initial Empirical Study of Bad Smells in Code, Proceedings of the International Conference on Software Maintenance, p.381, September 22-26, 2003
Mika V. Mantyla , Jari Vanhanen , Casper Lassenius, Bad Smells " Humans as Code Critics, Proceedings of the 20th IEEE International Conference on Software Maintenance, p.399-408, September 11-14, 2004
Cristina Marinescu, Radu Marinescu, Petru Florin Mihancea, and R. Wettel. 2005. iPlasma: An integrated platform for quality assessment of object-oriented design. In Proceedings of the 21st IEEE International Conference on Software Maintenance-Industrial and Tool Volume.
Radu Marinescu, Detection Strategies: Metrics-Based Rules for Detecting Design Flaws, Proceedings of the 20th IEEE International Conference on Software Maintenance, p.350-359, September 11-14, 2004
Daniel McFadden. 1977. Quantitative Methods for Analyzing Travel Behavior of Individuals: Some Recent Developments. Institute of Transportation Studies, University of California.
Tom Mens , Tom Tourwé, A Survey of Software Refactoring, IEEE Transactions on Software Engineering, v.30 n.2, p.126-139, February 2004[doi>10.1109/TSE.2004.1265817]
Tom Mens , Tom Tourwé , Francisca Muñoz, Beyond the Refactoring Browser: Advanced Tool Support for Software Refactoring, Proceedings of the 6th International Workshop on Principles of Software Evolution, p.39, September 01-02, 2003
Naouel Moha , Yann-Gael Gueheneuc , Laurence Duchien , Anne-Francoise Le Meur, DECOR: A Method for the Specification and Detection of Code and Design Smells, IEEE Transactions on Software Engineering, v.36 n.1, p.20-36, January 2010[doi>10.1109/TSE.2009.50]
Akito Monden , Daikai Nakae , Toshihiro Kamiya , Shin-ichi Sato , Ken-ichi Matsumoto, Software Quality Analysis by Code Clones in Industrial Legacy Software, Proceedings of the 8th International Symposium on Software Metrics, p.87, June 04-07, 2002
Matthew James Munro, Product Metrics for Automatic Identification of "Bad Smell" Design Problems in Java Source-Code, Proceedings of the 11th IEEE International Software Metrics Symposium, p.15, September 19-22, 2005[doi>10.1109/METRICS.2005.38]
Emerson Murphy-Hill , Andrew P. Black, An interactive ambient visualization for code smells, Proceedings of the 5th international symposium on Software visualization, October 25-26, 2010, Salt Lake City, Utah, USA[doi>10.1145/1879211.1879216]
Emerson Murphy-Hill , Andrew P. Black, An interactive ambient visualization for code smells, Proceedings of the 5th international symposium on Software visualization, October 25-26, 2010, Salt Lake City, Utah, USA[doi>10.1145/1879211.1879216]
Nachiappan Nagappan , Thomas Ball , Andreas Zeller, Mining metrics to predict component failures, Proceedings of the 28th international conference on Software engineering, May 20-28, 2006, Shanghai, China[doi>10.1145/1134285.1134349]
Steffen Olbrich , Daniela S. Cruzes , Victor Basili , Nico Zazworka, The evolution and impact of code smells: A case study of two open source systems, Proceedings of the 2009 3rd International Symposium on Empirical Software Engineering and Measurement, p.390-400, October 15-16, 2009[doi>10.1109/ESEM.2009.5314231]
Steffen M. Olbrich , Daniela S. Cruzes , Dag I. K. Sjoberg, Are all code smells harmful? A study of God Classes and Brain Classes in the evolution of three open source systems, Proceedings of the 2010 IEEE International Conference on Software Maintenance, p.1-10, September 12-18, 2010[doi>10.1109/ICSM.2010.5609564]
Rocco Oliveto , Malcom Gethers , Gabriele Bavota , Denys Poshyvanyk , Andrea De Lucia, Identifying method friendships to remove the feature envy bad smell (NIER track), Proceedings of the 33rd International Conference on Software Engineering, May 21-28, 2011, Waikiki, Honolulu, HI, USA[doi>10.1145/1985793.1985913]
Thomas J. Ostrand , Elaine J. Weyuker , Robert M. Bell, Predicting the Location and Number of Faults in Large Software Systems, IEEE Transactions on Software Engineering, v.31 n.4, p.340-355, April 2005[doi>10.1109/TSE.2005.49]
Fabio Palomba, Gabriele Bavota, Massimiliano Di Penta, Rocco Oliveto, Andrea De Lucia, and Denys Poshyvanyk. 2013. Detecting bad smells in source code using change history information. In Proceedings of the IEEE/ACM 28th International Conference on Automated Software Engineering (ASE). IEEE, 268--278.
F. Rahman, C. Bird, and P. Devanbu. 2010. Clones: What is that smell&quest;. In Proceedings of the 7th IEEE Working Conference Mining Software Repositories (MSR). 72--81. DOI:http://dx.doi.org/10.1109/MSR.2010.5463343
David Randall. 2012. A study of techniques for the definition and detection of design and code bad smells. Master's Thesis, Computer Science, University of Hertfordshire.
A. A. Rao and K. N. Reddy. 2008. Detecting bad smells in object oriented design using design change propagation probability matrix. In Proceedings of the International MultiConference of Engineers and Computer Scientists. 1001--1007.
Adrian Schröter, Thomas Zimmermann, Rahul Premraj, and Andreas Zeller. 2006. If your bug database could talk. In Proceedings of the 5th International Symposium on Empirical Software Engineering, Vol. 2. 18--20.
Jan Schumacher , Nico Zazworka , Forrest Shull , Carolyn Seaman , Michele Shaw, Building empirical support for automated code smell detection, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, September 16-17, 2010, Bolzano-Bozen, Italy[doi>10.1145/1852786.1852797]
Raed Shatnawi , Wei Li, An Investigation of Bad Smells in Object-Oriented Design, Proceedings of the Third International Conference on Information Technology: New Generations, p.161-165, April 10-12, 2006[doi>10.1109/ITNG.2006.31]
Thomas Shippey, David Bowes, Bruce Chrisianson, and Tracy Hall. 2012. A mapping study of software code cloning. In Proceedings of the 16th International Conference on Evaluation and Assessment in Software Engineering (EASE'12) 274--278(4).
Shivkumar Shivaji , E. James Whitehead Jr. , Ram Akella , Sunghun Kim, Reducing Features to Improve Bug Prediction, Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering, p.600-604, November 16-20, 2009[doi>10.1109/ASE.2009.76]
Dag I. K. Sjoberg , Aiko Yamashita , Bente Anda , Audris Mockus , Tore Dyba, Quantifying the Effect of Code Smells on Maintenance Effort, IEEE Transactions on Software Engineering, v.39 n.8, p.1144-1156, August 2013[doi>10.1109/TSE.2012.89]
Jacek Śliwerski , Thomas Zimmermann , Andreas Zeller, When do changes induce fixes?, Proceedings of the 2005 international workshop on Mining software repositories, p.1-5, May 17-17, 2005, St. Louis, Missouri[doi>10.1145/1083142.1083147]
Giancarlo Succi , Witold Pedrycz , Milorad Stefanovic , James Miller, Practical assessment of the models for identification of defect-prone classes in object-oriented commercial systems using design metrics, Journal of Systems and Software, v.65 n.1, p.1-12, 15 January 2003[doi>10.1016/S0164-1212(02)00024-9]
Guilherme Travassos , Forrest Shull , Michael Fredericks , Victor R. Basili, Detecting defects in object-oriented designs: using reading techniques to increase software quality, Proceedings of the 14th ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications, p.47-56, November 01-05, 1999, Denver, Colorado, USA[doi>10.1145/320384.320389]
Adrian Trifu , Urs Reupke, Towards Automated Restructuring of Object Oriented Systems, Proceedings of the 11th European Conference on Software Maintenance and Reengineering, p.39-48, March 21-23, 2007[doi>10.1109/CSMR.2007.51]
Stephane Vaucher , Foutse Khomh , Naouel Moha , Yann-Gael Gueheneuc, Tracking Design Smells: Lessons from a Study of God Classes, Proceedings of the 2009 16th Working Conference on Reverse Engineering, p.145-154, October 13-16, 2009[doi>10.1109/WCRE.2009.23]
Marek Vokac, Defect Frequency and Design Patterns: An Empirical Study of Industrial Code, IEEE Transactions on Software Engineering, v.30 n.12, p.904-917, December 2004[doi>10.1109/TSE.2004.99]
Aiko Yamashita. 2012. Assessing the capability of code smells to support software maintainability assessments: Empirical inquiry and methodological approach. Ph.D. Dissertation, Department of Informatics, Faculty of Mathematics and Natural Sciences, University of Oslo.
Aiko Yamashita and Steve Counsell. 2013. Code smells as system-level indicators of maintainability: An Empirical Study. J. Sys. Softw. (2013).
Aiko Yamashita , Leon Moonen, Exploring the impact of inter-smell relations on software maintainability: an empirical study, Proceedings of the 2013 International Conference on Software Engineering, May 18-26, 2013, San Francisco, CA, USA
Aiko Yamashita , Leon Moonen, To what extent can maintenance problems be predicted by code smell detection? - An empirical study, Information and Software Technology, v.55 n.12, p.2223-2242, December, 2013[doi>10.1016/j.infsof.2013.08.002]
Andreas Zeller. 2013. Can we trust software repositories&quest; In Perspectives on the Future of Software Engineering, Springer, 209--215.
Min Zhang , Nathan Baddoo , Paul Wernick , Tracy Hall, Improving the Precision of Fowler's Definitions of Bad Smells, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop, p.161-166, October 15-16, 2008[doi>10.1109/SEW.2008.26]
Min Zhang , Tracy Hall , Nathan Baddoo, Code Bad Smells: a review of current knowledge, Journal of Software Maintenance and Evolution: Research and Practice, v.23 n.3, p.179-202, April 2011[doi>10.1002/smr.521]
Min Zhang , Tracy Hall , Nathan Baddoo , Paul Wernick, Do bad smells indicate "trouble" in code?, Proceedings of the 2008 workshop on Defects in large software systems, July 20-20, 2008, Seattle, Washington[doi>10.1145/1390817.1390831]
Yuming Zhou , Hareton Leung , Baowen Xu, Examining the Potentially Confounding Effect of Class Size on the Associations between Object-Oriented Metrics and Change-Proneness, IEEE Transactions on Software Engineering, v.35 n.5, p.607-623, September 2009[doi>10.1109/TSE.2009.32]
Thomas Zimmermann , Rahul Premraj , Andreas Zeller, Predicting Defects for Eclipse, Proceedings of the Third International Workshop on Predictor Models in Software Engineering, p.9, May 20-26, 2007[doi>10.1109/PROMISE.2007.10]
