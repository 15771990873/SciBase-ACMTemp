Abrahamsson, P., Salo, O., Ronkainen, J., and Warsta, J. 2002. Agile Software Development Methods: Review and Analysis. VTT Publications, Technical Research Centre of Finland, Espoo, Finland, 478.
Ågerfalk, P. and Fitzgerald, B. 2005. Methods as action knowledge: Exploring the concept of method rationale in method construction, tailoring and use. In Proceedings of the 10th IFIP WG8.1 International Workshop on Exploring Modeling Methods in Systems Analysis and Design (EMMSAD).
Ågerfalk, P. and Wistrand, K. 2003. Systems development method rationale: A conceptual framework for analysis. In Proceedings of the 5th International Conference on Enterprise Information Systems (ICEIS).
Ambler, S. 2007. Survey says…agile has crossed the chasm. Dr. Dobb's J. World of Softw. Develop. 32, 8, 59--61.
Scott W. Ambler, Agile modeling: effective practices for extreme programming and the unified process, John Wiley & Sons, Inc., New York, NY, 2002
Ken Auer , Roy Miller, Extreme programming applied: playing to win, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2001
Avison, D. and Fitzgerald, G. 2003. Information Systems Development: Methodologies, Techniques and Tools. McGraw-Hill, London, U.K.
D. E. Avison, Information Systems Development: A Database Approach, Blackwell Science, Inc., 1992
Aydin, M. and Harmsen, F., et al. 2004. An agile informations systems development method in use. Turk. J. Electron. Eng. 12, 2, 127--138.
Richard Baskerville , Jan Stage, Accommodating Emergent Work Pratices: Ethnographic Choice of Method Fragments, Proceedings of the IFIP TC8/WG8.2 Working Conference on Realigning Research and Practice in Information Systems Development: The Social and Organizational Perspective, p.11-28, July 27-29, 2001
Richard Baskerville , Julie Travis , Duane P. Truex, Systems Without Method: The Impact of New Technologies on Information Systems Development Projects, Proceedings of the IFIP WG8.2 Working Conference on The Impact of Computer Supported Technologies in Information Systems Development, p.241-269, June 14-17, 1992
Kent Beck, Extreme programming explained: embrace change, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1999
Kent Beck , Cynthia Andres, Extreme Programming Explained: Embrace Change (2nd Edition), Addison-Wesley Professional, 2004
Kent Beck , Barry Boehm, Agility through Discipline: A Debate, Computer, v.36 n.6, p.44-46, June 2003[doi>10.1109/MC.2003.1204374]
Kent Beck , Martin Fowler, Planning Extreme Programming, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2000
Benyon, D. and Skidmore, S. 1987. Towards a toolkit for the systems analyst. Comput. J. 30, 1, 2--7.
Barry Boehm , Richard Turner, Using Risk to Balance Agile and Plan-Driven Methods, Computer, v.36 n.6, p.57-66, June 2003[doi>10.1109/MC.2003.1204376]
Boehm , Richard Turner, Balancing Agility and Discipline: A Guide for the Perplexed, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2003
Grady Booch, Object-oriented analysis and design with applications (2nd ed.), Benjamin-Cummings Publishing Co., Inc., Redwood City, CA, 1993
Jason Bowers , John May , Erik Melander , Matthew Baarman , Azeem Ayoob, Tailoring XP for Large System Mission Critical Software Development, Proceedings of the Second XP Universe and First Agile Universe Conference on Extreme Programming and Agile Methods - XP/Agile Universe 2002, p.100-111, August 04-07, 2002
Brinkkemper, S. 1996. Method engineering: Engineering of information systems development methods and tools. Inform. Softw. Tech. 38, 4, 275--280.
Sjaak Brinkkemper , Motoshi Saeki , Frank Harmsen, Assembly Techniques for Method Engineering, Proceedings of the 10th International Conference on Advanced Information Systems Engineering, p.381-400, June 08-12, 1998
Brinkkemper, S., Saeki, M., et al. 1999. Meta-modelling based assembly techniques for situational method engineering. Inform. Syst. 24, 3, 209--228.
Frederick P. Brooks, Jr., The  Mythical Man-Month: Essays on Softw, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1978
Frederick P. Brooks, Jr., No Silver Bullet Essence and Accidents of Software Engineering, Computer, v.20 n.4, p.10-19, April 1987[doi>10.1109/MC.1987.1663532]
Brown, B. 1968. Delphi Process: A Methodology Used for the Elicitation of Opinions of Experts. RAND Corporation, Santa Monica, CA.
Lan Cao , Kannan Mohan , Peng Xu , Balasubramaniam Ramesh, How Extreme Does Extreme Programming Have to Be? Adapting XP Practices to Large-Scale Projects, Proceedings of the Proceedings of the 37th Annual Hawaii International Conference on System Sciences (HICSS'04) - Track 3, p.30083.3, January 05-08, 2004
Clayton, M. 1997. Delphi: A technique to harness expert opinion for critical decision-making tasks in education. Edu. Psychol. 17, 4, 373--387.
Coad, P. and Palmer, S. 2002. Feature-Driven Development. Prentice Hall, Englewood Cliffs, NJ.
Cockburn, A. 2001. Crystal Clear: A Human-Powered Software Development Methodology for Small Teams. Addison-Wesley, Reading, MA.
Alistair Cockburn, Agile software development, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2002
Derek Coleman , Patrick Arnold , Stephanie Bodoff , Chris Dollin , Helena Gilchrist , Fiona Hayes , Paul Jeremaes, Object-oriented development: the fusion method, Prentice-Hall, Inc., Upper Saddle River, NJ, 1994
Conboy, K. 2006. A Framework of agility in information systems development. Ph.D dissertation. University of Limerick, Limerick, Ireland.
Danny T. Connors, Software development methodologies and traditional and modern information systems, ACM SIGSOFT Software Engineering Notes, v.17 n.2, p.43-49, April 1992[doi>10.1145/130840.130843]
Lisa Crispin , Ken S. Rosenthal , Ron Jeffries , Brian Marick, Testing Extreme Programming, Pearson Education, 2002
Cronholm, S. and Goldkuhl, G. 1994. Meanings and motivates of method customization in CASE environments—observations and categorizations from an empirical study. In Proceedings of the 5th Workshop on the Next Generation of CASE Tools.
Dalkey, N. and Helmer, O. 1963. An experimental application of the Delphi method to the use of experts. J. Institute Man. Sci. 9, 3, 458--467.
G. B. Davis, Strategies for information requirements determination, IBM Systems Journal, v.21 n.1, p.4-30, March 1982[doi>10.1147/sj.211.0004]
Delbecq, A. L., Van De Ven, A. H., et al. 1975. Group Techniques for Program Planning. Scott Foresman and Company, Glenview IL.
T. DeMarco, Controlling Software Projects: Management, Measurement, and Estimates, Prentice Hall PTR, Upper Saddle River, NJ, 1986
Fitzgerald, B. 1996. Formalised systems development methodologies: A critical perspective. Inform. Syst. J. 6, 1, 3--23.
Brian Fitzgerald , Gerard Hartnett , Kieran Conboy, Customising agile methods to software practices at Intel Shannon, European Journal of Information Systems, v.15 n.2, p.200-213, April 2006[doi>10.1057/palgrave.ejis.3000605]
Fitzgerald, B., Russo, N., et al. 2002. Information Systems Development: Methods in Action. McGraw-Hill, New York, NY.
Fowler, M. and Highsmith, J. 2001. The agile manifesto. Softw. Develop. 9, 8, 28--32.
Robert L. Glass, Software conflict: essays on the art and science of software engineering, Yourdon Press, Upper Saddle River, NJ, 1991
Gremillion, L. and Pyburn, P. 1983. Breaking the systems development bottleneck. Harvard Busin. Rev. 61, 2, 130--137.
Hardy, C., Thompson, J., et al. 1995. The use, limitations and customization of structured systems development methods in the United Kingdom. Inform. Softw. Tech. 37, 9, 467--477.
Harmsen, F. 1997. Situational method engineering. Ph.D. dissertation. Twente University, Enschede, Netherlands.
Frank Harmsen , Sjaak Brinkkemper , J. L. Han Oei, Situational method engineering for informational system project approaches, Proceedings of the IFIP WG8.1 Working Conference on Methods and Associated Tools for the Information Systems Life Cycle, p.169-194, September 26-28, 1994
Henderson-Sellers, B. and Serour, M. 2005. Creating a dual-agility method: The value of method engineering. J. Datab. Manag. 16, 4, 1--23.
Jim Highsmith, Agile Project Management: Creating Innovative Products, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 2004
Iivari, J. 1989. A methodology for IS development as organizational change. In Syst. Development for Human Progress, H. Klein and K. Kumar, Eds. North-Holland, Amsterdam, The Netherlands, 197--217.
Jenkins, A., Naumann, J., et al. 1984. Empirical investigation of systems development practices and results. Inform. Man. 7, 1, 73--82.
Johnson, D. and Caristi, J. 2003. eXtreme programming and the software design course. In Extreme Programming Perspectives, M. Marchesi, G. Succi, D. Wells, and L. Williams, Eds. Addison Wesley, Reading, MA, 47--59.
Johnson, J. 1995. Chaos: The dollar drain of IT project failures. Appl. Develop. Trends 2, 1, 41--47.
Karlsson, F. and Agerfalk, P. 2004. Method configuration: Adapting to situational characteristics while creating reusable assets. Inform. Softw. Tech. 46, 9, 619--633.
Mark Keil , Joan Mann , Arun Rai, Why software projects escalate: an empirical analysis and test of four theoretical models1,2, MIS Quarterly, v.24 n.4, p.631-664, December 2000[doi>10.2307/3250950]
Kircher, M., Jain, P., et al. 2001. Distributed extreme programming. In Proceedings of the Conference on XP2001—eXtreme Programming and Flexible Processes in Software Engineering.
Michael Kircher , David L. Levine, The XP of TAO: extreme programming of large, open-source frameworks, Extreme programming examined, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2001
Koch, A. 2005. Agile Software Development: Evaluating the Methods for Your Organization. Artech House, Norwood, MA.
Kuldeep Kumar , Richard J. Welke, Methodology EngineeringR: a proposal for situation-specific methodology construction, Challenges and strategies for research in systems development, John Wiley & Sons, Inc., New York, NY, 1992
Lehman, M. 1978. Why software projects fail. In Proceedings of the Infotech State of the Art Conference. Pergamon Press, New York, NY.
Kurt R. Linberg, Software developer perceptions about software project failure: a case study, Journal of Systems and Software, v.49 n.2-3, p.177-192, Dec. 30 1999[doi>10.1016/S0164-1212(99)00094-1]
Linstone, H. and Turoff, M. 1975. Introduction. The Delphi Method: Techniques and Applications, H. Linstone and M. Turoff, Eds., Addison-Wesley, Reading, MA, 3--12.
Robert Cecil Martin, Agile Software Development: Principles, Patterns, and Practices, Prentice Hall PTR, Upper Saddle River, NJ, 2003
Pete McBreen , Kent Beck, Questioning Extreme Programming, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 2002
McCracken, G. 1988. Qualitative Research: The Long Interview. Sage Publications, London, UK.
Charlie McDowell , Linda Werner , Heather E. Bullock , Julian Fernald, The impact of pair programming on student performance, perception and persistence, Proceedings of the 25th International Conference on Software Engineering, May 03-10, 2003, Portland, Oregon
Eliciting and analyzing expert judgment: a practical guide, Society for Industrial and Applied Mathematics, Philadelphia, PA, 2001
Miles, M. and Huberman, A. 1999. Qualitative Data Analysis. Sage, London, U.K.
Isabelle Mirbel , Jolita Ralyté, Situational method engineering: combining assembly-based and roadmap-driven approaches, Requirements Engineering, v.11 n.1, p.58-78, December 2005[doi>10.1007/s00766-005-0019-0]
Moore, C. 1987. Group Techniques for Idea Building. Sage Publications, London, U.K.
Naumann, J., Davis, G., et al. 1980. Determining information requirements: A contingency method for selection of a requirements assurance strategy. J. Syst. Softw. 1, 4, 273--281.
Charles R. Necco , Carl L. Gordon , Nancy W. Tsai, Systems analysis and design: current practices, MIS Quarterly, v.11 n.4, p.461-476, Dec. 1987[doi>10.2307/248975]
Offenbeek, M. and van Koopman, P. 1996. Scenarios for systems development: matching context and strategy. Behav. Inform. Tech. 15, 4, 250--265.
Oppenheim, A. 1992. Questionnaire Design, Interviewing and Attitude Measurement. Continuum, New York, NY.
Charles Poole , Jan Willem Huisman, Using Extreme Programming in a Maintenance Environment, IEEE Software, v.18 n.6, p.42-50, November 2001[doi>10.1109/52.965801]
Poppendieck, M. 2001. Lean programming. Softw. Develop. Mag. 9, 5, 71--75.
Jonathan Rasmusson, Introducing XP into Greenfield Projects: Lessons Learned, IEEE Software, v.20 n.3, p.21-28, May 2003[doi>10.1109/MS.2003.1196316]
Mark Keil , Daniel Robey, Blowing the whistle on troubled software projects, Communications of the ACM, v.44 n.4, p.87-93, April 2001[doi>10.1145/367211.367274]
Colette Rolland , Naveen Prakash, A proposal for context-specific method engineering, Proceedings of the IFIP TC8, WG8.1/8.2 working conference on method engineering on Method engineering : principles of method construction and tool support: principles of method construction and tool support, p.191-208, January 1996, Atlanta, Georgia, USA
Russo, N., Wynekoop, J., et al. 1995. The use and adaptation of system development methodologies. In Managing Information & Communications in a Changing Global Environment, M. Khosrowpour, Eds. Idea Group Publishing, Philadelphia, PA, 843--844.
Sackman, H. 1975. Delphi Critique. Heath and Co., Lexington, MA.
Schwaber, C. and Fichera, R. 2005. Corporate IT leads the second wave of agile adoption. Forrester res. rep. Forrester Research, Cambridgr, MA.
Schwaber, K. 1996. Controlled chaos: Living on the edge. Amer. Program. 9, 5, 10--16.
Ken Schwaber , Mike Beedle, Agile Software Development with Scrum, Prentice Hall PTR, Upper Saddle River, NJ, 2001
Ian Sommerville , Jane Ransom, An empirical study of industrial requirements engineering process assessment and improvement, ACM Transactions on Software Engineering and Methodology (TOSEM), v.14 n.1, p.85-117, January 2005[doi>10.1145/1044834.1044837]
Stapleton, J. 1997. DSDM: Dynamic Systems Development Method. Addison Wesley, Reading, MA.
Matthew Stephens , Doug Rosenberg, Extreme Programming Refactored: The Case Against XP, APress L. P., 2003
Stotts, D., Williams, L., et al. 2003. Virtual Teaming: Experiments and Experiences with Distributed Pair Programming. Extreme Programming/Agile Universe. Springer, New Orleans, L.A.
Sullivan, C. H. 1985. Systems planning in the information age. Sloan Busi. Rev. 26, 2, 3--11.
Chuan-Hoo Tan , Hock-Hai Teo, Training future software developers to acquire agile development skills, Communications of the ACM, v.50 n.12, December 2007[doi>10.1145/1323688.1323715]
Juha-Pekka Tolvanen , Kalle Lyytinen, Flexible method adaptation in CASE: the metamodeling approach, Scandinavian Journal of Information Systems, 5, p.51-77, Aug. 1993
Trauth, E. and O'Connor, B. 1991. A study of the interaction between information, technology and society. Information Systems Research: Contemporary Approaches and Emergent Traditions, H. Nissen, H. Klein, and R. Hirschheim, Eds., North Holland, Elsevier, Amsterdam, The Netherlands, 131--144.
Duane P. Truex , Richard Baskerville , Heinz Klein, Growing systems in emergent organizations, Communications of the ACM, v.42 n.8, p.117-123, Aug. 1999[doi>10.1145/310930.310984]
Uhl, N. 1983. Using Research for Strategic Planning. Jossey-Bass, San Francisco, CA.
Vijayasarathy, L. and Turk, D. 2008. Agile software development: A survey of early adopters. J. Inform. Tech. Man. 19, 2, 1--8.
Wainer, M. 2003. Adaptations for Teaching Software Development with eXtreme Programming: An Experience Report. XP/Agile Universe, Springer.
A. T. Wood-Harper , Lyn Antill , D. E. Avison, Information systems definition: the Multiview approach, Blackwell Scientific Publications, Ltd., Oxford, UK, 1985
Wynekoop, J. L. and Russo, N. L. 1995. Systems development methodologies: Unanswered questions. J. Inform. Tech. 10, 2, 65--73.
Yin, R. 2003. Case Study Research: Design and Methods. Sage Publications, Thousand Oaks, CA.
