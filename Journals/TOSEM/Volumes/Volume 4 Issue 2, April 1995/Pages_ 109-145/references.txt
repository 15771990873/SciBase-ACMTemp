Jean-Francois Bergeretti , Bernard A. Carré, Information-flow and data-flow analysis of while-programs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.7 n.1, p.37-61, Jan. 1985[doi>10.1145/2363.2366]
François Bourdoncle, Abstract debugging of higher-order imperative languages, Proceedings of the ACM SIGPLAN 1993 conference on Programming language design and implementation, p.46-55, June 21-25, 1993, Albuquerque, New Mexico, United States[doi>10.1145/155090.155095]
Jong-Deok Choi , Michael Burke , Paul Carini, Efficient flow-sensitive interprocedural computation of pointer-induced aliases and side effects, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.232-245, March 1993, Charleston, South Carolina, United States[doi>10.1145/158511.158639]
Patrick Cousot , Radhia Cousot, Abstract interpretation: a unified lattice model for static analysis of programs by construction or approximation of fixpoints, Proceedings of the 4th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.238-252, January 17-19, 1977, Los Angeles, California[doi>10.1145/512950.512973]
E. Cartwright , M. Felleisen, The semantics of program dependence, Proceedings of the ACM SIGPLAN 1989 Conference on Programming language design and implementation, p.13-27, June 19-23, 1989, Portland, Oregon, United States[doi>10.1145/73141.74820]
Alain Deutsch, Interprocedural may-alias analysis for pointers: beyondk-limiting, Proceedings of the ACM SIGPLAN 1994 conference on Programming language design and implementation, p.230-241, June 20-24, 1994, Orlando, Florida, United States[doi>10.1145/178243.178263]
David Evans , John Guttag , James Horning , Yang Meng Tan, LCLint: a tool for using specifications to check code, Proceedings of the 2nd ACM SIGSOFT symposium on Foundations of software engineering, p.87-96, December 06-09, 1994, New Orleans, Louisiana, United States[doi>10.1145/193173.195297]
Lloyd D. Fosdick , Leon J. Osterweil, Data Flow Analysis in Software Reliability, ACM Computing Surveys (CSUR), v.8 n.3, p.305-330, Sept. 1976[doi>10.1145/356674.356676]
Tim Freeman , Frank Pfenning, Refinement types for ML, Proceedings of the ACM SIGPLAN 1991 conference on Programming language design and implementation, p.268-277, June 24-28, 1991, Toronto, Ontario, Canada[doi>10.1145/113445.113468]
S. J. Garland , J. V. Guttag, An overview of LP, the larch power, Proceedings of the 3rd international conference on Rewriting Techniques and Applications, p.137-151, January 1989
J. M. Lucassen , D. K. Gifford, Polymorphic effect systems, Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.47-57, January 10-13, 1988, San Diego, California, United States[doi>10.1145/73560.73564]
John V. Guttag , James J. Horning, Larch: languages and tools for formal specification, Springer-Verlag New York, Inc., New York, NY, 1993
Peter Henderson, Finite state modelling in program development, Proceedings of the international conference on Reliable software, p.221-227, April 21-23, 1975, Los Angeles, California[doi>10.1145/800027.808443]
William E. Howden, Comments Analysis and Programming Errors, IEEE Transactions on Software Engineering, v.16 n.1, p.72-81, January 1990[doi>10.1109/32.44365]
Susan Horwitz , Thomas Reps , David Binkley, Interprocedural slicing using dependence graphs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.1, p.26-60, Jan. 1990[doi>10.1145/77606.77608]
S. Horwitz , P. Pfeiffer , T. Reps, Dependence analysis for pointer variables, Proceedings of the ACM SIGPLAN 1989 Conference on Programming language design and implementation, p.28-40, June 19-23, 1989, Portland, Oregon, United States[doi>10.1145/73141.74821]
W. E. Howden , B. Wieand, QDA - A Method for Systematic Informal Program Analysis, IEEE Transactions on Software Engineering, v.20 n.6, p.445-462, June 1994[doi>10.1109/32.295893]
Daniel Jackson , John V. Guttag, Aspect: a formal specification language for detecting bugs, 1992
Daniel Jackson , Eugene J. Rollins, A new model of program dependences for reverse engineering, Proceedings of the 2nd ACM SIGSOFT symposium on Foundations of software engineering, p.2-10, December 06-09, 1994, New Orleans, Louisiana, United States[doi>10.1145/193173.195281]
Cliff B. Jones, Systematic software development using VDM (2nd ed.), Prentice-Hall, Inc., Upper Saddle River, NJ, 1990
J. R. Larus , P. N. Hilfinger, Detecting conflicts between structure accesses, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.24-31, June 20-24, 1988, Atlanta, Georgia, United States[doi>10.1145/53990.53993]
B Liskov , E Moss , A Snyder , R Atkinson , J C. Schaffert , T Bloom , R Scheifler, CLU reference manual, Springer-Verlag New York, Inc., New York, NY, 1984
M. Moriconi , T. C. Winkler, Approximate Reasoning About the Semantic Effects of Program Changes, IEEE Transactions on Software Engineering, v.16 n.9, p.980-992, September 1990[doi>10.1109/32.58785]
~OSTERWEIL, L. J. AND FOSDICK, L.D. 1976. DAVE a validation, error detection and documen- ~tartan system for Fortran programs. Softw. Pract. Exper. 6, 4, 473-486.
Karl J. Ottenstein , Linda M. Ottenstein, The program dependence graph in a software development environment, Proceedings of the first ACM SIGSOFT/SIGPLAN software engineering symposium on Practical software development environments, p.177-184, April 1984[doi>10.1145/800020.808263]
Kurt M. Olender , Leon J. Osterweil, Interprocedural static analysis of sequencing constraints, ACM Transactions on Software Engineering and Methodology (TOSEM), v.1 n.1, p.21-52, Jan. 1992[doi>10.1145/125489.122822]
A. Podgurski , L. A. Clarke, A Formal Model of Program Dependences and its Implications for Software Testing, Debugging, and Maintenance, IEEE Transactions on Software Engineering, v.16 n.9, p.965-979, September 1990[doi>10.1109/32.58784]
Dewayne E. Perry, The inscape environment, Proceedings of the 11th international conference on Software engineering, p.2-11, May 1989, Pittsburgh, Pennsylvania, United States[doi>10.1145/74587.74588]
D. Perry, The logic of propagation in the inscape environment, ACM SIGSOFT Software Engineering Notes, v.14 n.8, p.114-121, Dec. 1989[doi>10.1145/75309.75322]
H. D. Pande , W. A. Landi , B. G. Ryder, Interprocedural Def-Use Associations for C Systems with Single Level Pointers, IEEE Transactions on Software Engineering, v.20 n.5, p.385-403, May 1994[doi>10.1109/32.286418]
Sandra Rapps , Elaine J. Weyuker, Selecting software test data using data flow information, IEEE Transactions on Software Engineering, v.11 n.4, p.367-375, April 1985[doi>10.1109/TSE.1985.232226]
James R. Russell , Robert E. Strom , Daniel M. Yellin, A checkable interface language for pointer-based structures, ACM SIGPLAN Notices, v.29 n.8, p.59-73, Aug. 1994[doi>10.1145/185087.185105]
Thomas W. Reps , Wuu Yang, The Semantics of Program Slicing and Program Integration, Proceedings of the International Joint Conference on Theory and Practice of Software Development, Volume 2: Advanced Seminar on Foundations of Innovative Software Development II and Colloquium on Current Issues in Programming Languages, p.360-374, March 13-17, 1989
J. M. Spivey, The Z notation: a reference manual, Prentice Hall International (UK) Ltd., Hertfordshire, UK, 1992
Robert E. Strom, Mechanisms for compile-time enforcement of security, Proceedings of the 10th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.276-284, January 24-26, 1983, Austin, Texas[doi>10.1145/567067.567093]
Frank Tip, A Survey of Program Slicing Techniques., CWI (Centre for Mathematics and Computer Science), Amsterdam, The Netherlands, 1994
~WEISER, M. 1984. Program slicing. IEEE Trans. Softw. Eng. 10, 4 (July).
Elaine J. Weyuker, The Cost of Data Flow Testing: An Empirical Study, IEEE Transactions on Software Engineering, v.16 n.2, p.121-128, February 1990[doi>10.1109/32.44376]
