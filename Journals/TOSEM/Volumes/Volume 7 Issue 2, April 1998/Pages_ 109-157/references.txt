ACHEE, B. L. AND CARVER, D. L. 1994. A greedy approach to object identification in imperative code. In Workshop on Program Comprehension. IEEE Computer Society Press, Los Alamitos, CA, 4-11.
ADAMS, S. 1980. Pirate's Adventure. BYTE 5, 12 (Dec.), 192-212.
AHO, A.V. 1980. Pattern matching in strings. In Formal Language Theory: Perspectives and Open Problems, R. V. Book, Ed. Academic Press, Inc., New York, NY, 325-347.
Alfred V. Aho , Ravi Sethi , Jeffrey D. Ullman, Compilers: principles, techniques, and tools, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1986
BALL, T. AND EICK, S. G. 1994. Visualizing program slices. In Proceedings of the IEEE Symposium on Visual Languages (St. Louis, MO). IEEE Computer Society, Washington, DC, 288-295.
BERGLAND, G.D. 1981. A guided tour of program design methodologies. Computer 14, 10 (Oct.), 18-37.
BOEHM, B.W. 1975. The high cost of software. In Practical Strategies for Developing Large Software Systems. Addison-Wesley Publishing Co., Reading, MA, 3-15.
Robert W. Bowdidge , William G. Griswold, How Software Engineering Tools Organize Programmer BehaviorDuring the Task of Data Encapsulation, Empirical Software Engineering, v.2 n.3, p.221-267, 1997[doi>10.1023/A:1009716016693]
E Bush, The automatic restructuring of COBOL, The Institute of Electrical and Electronics Engineers, Inc on Conference on software maintenance--1985, p.35-41, January 1986, Washington, D.C, USA
CANFORA, a., CIMITILE, A., AND MUNRO, M. 1993a. A reverse engineering method for identifying reusable abstract data types. In Proceedings of the 1st Working Conference on Reverse Engineering (Baltimore, MD). IEEE Press, Piscataway, NJ, 73-82.
CANFORA, a., CIMITILE, A., MUNRO, M., AND TORTORELLA, M. 1993b. Experiments in identifying reusable abstact data types in program code. In Proceedings of the IEEE Conference on Program Comprehension (Capri, Italy). IEEE Computer Society Press, Los Alamitos, CA, 36-45.
CHEN, M. 1996. A tool for planning restructuring of data abstractions in large systems. Master's thesis, Computer Science Dept., University of California at San Diego, La Jolla, CA.
CUTILLO, F., FIORE, P., AND VISAGGIO, a. 1993. Identification and extraction of "domain independent" components in large programs. In Proceedings of the 1st Working Conference on Reverse Engineering (Baltimore, MD). IEEE Press, Piscataway, NJ.
DE BALBINE, G. 1975. Better manpower utilization using automatic restructuring. In National Computer Conference. AFIPS Press, Arlington, VA.
R. Kent Dybvig, The SCHEME programming language, Prentice-Hall, Inc., Upper Saddle River, NJ, 1987
Stephen G. Eick , Joseph L. Steffen , Eric E. Sumner, Jr., Seesoft-A Tool for Visualizing Line Oriented Software Statistics, IEEE Transactions on Software Engineering, v.18 n.11, p.957-968, November 1992[doi>10.1109/32.177365]
D. W. Embley , S. N. Woodfield, Assessing the quality of abstract data types written in ADA, Proceedings of the 10th international conference on Software engineering, p.144-153, April 11-15, 1988, Singapore
William G. Griswold , Darren C. Atkinson, Managing design trade-offs for a program understanding and transformation tool, Journal of Systems and Software, v.30 n.1-2, p.99-116, July/Aug. 1995[doi>10.1016/0164-1212(94)00119-8]
William G. Griswold , Robert W. Bowdidge, Program Restructuring via Design-Level Manipulation, Selected papers from the Workshop on Studies of Software Design, p.127-139, May 17-18, 1993
William G. Griswold , David Notkin, Computer-aided vs. manual program restructuring, ACM SIGSOFT Software Engineering Notes, v.17 n.1, p.33-41, Jan. 1992[doi>10.1145/134292.134294]
William G. Griswold , David Notkin, Automated assistance for program restructuring, ACM Transactions on Software Engineering and Methodology (TOSEM), v.2 n.3, p.228-269, July 1993[doi>10.1145/152388.152389]
William G. Griswold , Darren C. Atkinson , Collin McCurdy, Fast, Flexible Syntactic Pattern Matching and Processing, Proceedings of the 4th International Workshop on Program Comprehension (WPC '96), p.144, March 29-31, 1996
William G. Griswold , Morison I. Chen , Robert W. Bowdidge , J. David Morgenthaler, Tool support for planning the restructuring of data abstractions in large systems, Proceedings of the 4th ACM SIGSOFT symposium on Foundations of software engineering, p.33-45, October 16-18, 1996, San Francisco, California, USA[doi>10.1145/239098.239107]
HUTCHINS, E. L., HOLLAN, J. D., AND NORMAN, D.A. 1985. Direct manipulation interfaces. Human-Comput. Interact. 1, 311-338.
Ralph E. Johnson , William F. Opdyke, Refactoring and Aggregation, Proceedings of the First JSSST International Symposium on Object Technologies for Advanced Software, p.264-278, November 04-06, 1993
M. M. Lehman , L. A. Belady, Program evolution: processes of software change, Academic Press Professional, Inc., San Diego, CA, 1985
Bennett P. Lientz , E. Burton Swanson, Software Maintenance Management, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1980
Barbara Liskov , Alan Snyder , Russell Atkinson , Craig Schaffert, Abstraction mechanisms in CLU, Communications of the ACM, v.20 n.8, p.564-576, Aug. 1977[doi>10.1145/359763.359789]
Sven Moen, Drawing Dynamic Trees, IEEE Software, v.7 n.4, p.21-28, July 1990[doi>10.1109/52.56447]
MORGENTHALER, J. D. AND GRISWOLD, W.G. 1995. Program analysis for practical program restructuring. In Workshop on Program Transformation for Software Evolution (Seattle, WA), W. G. Griswold, Ed.
H. A. Müller , S. R. Tilley , M. A. Orgun , B. D. Corrie , N. H. Madhavji, A reverse engineering environment based on spatial and visual software interconnection models, Proceedings of the fifth ACM SIGSOFT symposium on Software development environments, p.88-98, December 09-11, 1992, Tyson's Corner, Virginia, USA[doi>10.1145/142868.143755]
Gail C. Murphy , David Notkin , Kevin Sullivan, Software reflexion models: bridging the gap between source and high-level models, ACM SIGSOFT Software Engineering Notes, v.20 n.4, p.18-28, Oct. 1995[doi>10.1145/222132.222136]
P. Newcomb , G. Kotik, Reengineering procedural into object-oriented systems, Proceedings of the Second Working Conference on Reverse Engineering, p.237, July 14-16, 1995
NEWCOMB, P. AND MARKOSIAN, L. 1993. Automating the modularization of large COBOL programs: Application of an enabling technology for reengineering. In Proceedings of the 1st Working Conference on Reverse Engineering (Baltimore, MD). IEEE Press, Piscataway, NJ, 222-230.
OPDYKE, W.F. 1991. Refactoring: A program restructuring aid in designing object-oriented application frameworks. Ph.D. thesis, Department of Computer Science, University of Illinois at Urbana-Champaign, Champaign, IL.
Linda M. Ott , Jeffrey J. Thuss, The relationship between slices and module cohesion, Proceedings of the 11th international conference on Software engineering, p.198-204, May 1989, Pittsburgh, Pennsylvania, USA[doi>10.1145/74587.74614]
D. L. Parnas, On the criteria to be used in decomposing systems into modules, Communications of the ACM, v.15 n.12, p.1053-1058, Dec. 1972[doi>10.1145/361598.361623]
H. Partsch , R. Steinbrüggen, Program Transformation Systems, ACM Computing Surveys (CSUR), v.15 n.3, p.199-236, Sept. 1983[doi>10.1145/356914.356917]
Charles Rich , Richard C. Waters, The Programmer's Apprentice: A Research Overview, Computer, v.21 n.11, p.10-25, November 1988[doi>10.1109/2.86782]
ROBINS, G. 1985. Applications of the ISI Grapher. In Proceedings of the 4th Annual Artificial Intelligence and Advanced Computer Technology Conference, 105-129.
Lawrence A. Rowe , Joseph A. Konstan , Brian C. Smith , Steve Seitz , Chung Liu, The PICASSO applications framework, Proceedings of the 4th annual ACM symposium on User interface software and technology, p.95-105, November 11-13, 1991, Hilton Head, South Carolina, USA[doi>10.1145/120782.120793]
SHNEIDERMAN, B. 1983. Direct manipulation: A step beyond programming languages. Computer 16, 8, 57-69.
Robert W. Schwanke, An intelligent tool for re-engineering software modularity, Proceedings of the 13th international conference on Software engineering, p.83-92, May 13-17, 1991, Austin, Texas, USA
SRINIVASAN, R. 1993. Automatic software design recovery and re-modularization using source transformation. Master's thesis, Department of Information and Computer Science, Queen's University, Kingston, Ontario, Canada.
STALLMAN, R. 1993. GNU Emacs (The Extensible Self-Documenting Text Editor). Free Software Foundation, Cambridge, MA.
Bjarne Steensgaard, Points-to analysis in almost linear time, Proceedings of the 23rd ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.32-41, January 21-24, 1996, St. Petersburg Beach, Florida, USA[doi>10.1145/237721.237727]
STEVENS, W. P., MYERS, G. J., AND CONSTANTINE, L.L. 1974. Structured design. IBM Syst. J. 13, 2, 115-139.
P. Tonella , R. Fiutem , G. Antoniol , E. Merlo, Augmenting Pattern-Based Architectural Recovery with Flow Analysis: Mosaic - a Case Study, Proceedings of the 3rd Working Conference on Reverse Engineering (WCRE '96), p.198, November 08-10, 1996
WEISER, M. 1984. Program slicing. IEEE Trans. Softw. Eng. SE-IO, 4, 352-357.
