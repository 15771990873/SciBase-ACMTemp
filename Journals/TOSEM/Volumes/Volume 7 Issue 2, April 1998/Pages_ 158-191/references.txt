AHO, A. V., KERNIGHAN, B. W., AND WEINBERGER, P.J. 1979. Awk: A pattern scanning and processing language. Softw. Pract. Exper. 9, 4, 267-280.
ALLEN, F. 1974. Interprocedural data flow anlaysis. In Proceedings of Information Processing 74 (Software). North-Holland Publishing Co., Amsterdam, The Netherlands, 398-402.
John P. Banning, An efficient way to find the side effects of procedure calls and the aliases of variables, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.29-41, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567756]
Jeffrey M. Barth, A practical interprocedural data flow analysis algorithm, Communications of the ACM, v.21 n.9, p.724-736, Sept. 1978[doi>10.1145/359588.359596]
David Callahan , Alan Carle , Mary Wolcott Hall , Ken Kennedy, Constructing the Procedure Call Multigraph, IEEE Transactions on Software Engineering, v.16 n.4, p.483-487, April 1990[doi>10.1109/32.54302]
Yih-Farn Chen , Michael Y. Nishimoto , C. V. Ramamoorthy, The C Information Abstraction System, IEEE Transactions on Software Engineering, v.16 n.3, p.325-334, March 1990[doi>10.1109/32.48940]
Keith D. Cooper , Ken Kennedy, Efficient computation of flow insensitive interprocedural summary information, Proceedings of the 1984 SIGPLAN symposium on Compiler construction, p.247-258, June 17-22, 1984, Montreal, Canada[doi>10.1145/502874.502898]
Keith D. Cooper , Ken Kennedy , Linda Lorczon, Interprocedural optimization: eliminating unnecessary recompilation, ACM SIGPLAN Notices, v.21 n.7, p.58-67, July 1986[doi>10.1145/13310.13317]
FELDMAN, S. I. 1978. Make: A program for maintaining computer programs. Tech. Rep. 57. AT&T Bell Laboratories, Inc., Murray Hill, NJ.
Susan L. Graham , Peter B. Kessler , Marshall K. Mckusick, Gprof: A call graph execution profiler, Proceedings of the 1982 SIGPLAN symposium on Compiler construction, p.120-126, June 23-25, 1982, Boston, Massachusetts, United States[doi>10.1145/800230.806987]
William G. Griswold , Darren C. Atkinson , Collin McCurdy, Fast, Flexible Syntactic Pattern Matching and Processing, Proceedings of the 4th International Workshop on Program Comprehension (WPC '96), p.144, March 29-31, 1996
Mary W. Hall , Ken Kennedy, Efficient call graph analysis, ACM Letters on Programming Languages and Systems (LOPLAS), v.1 n.3, p.227-242, Sept. 1992[doi>10.1145/151640.151643]
Les Hatton , Andy Roberts, How Accurate is Scientific Software?, IEEE Transactions on Software Engineering, v.20 n.10, p.785-797, October 1994[doi>10.1109/32.328993]
JOHNSON, S. C. 1975. Yacc: Yet another compiler compiler. Tech. Rep. 32. AT&T Bell Laboratories, Inc., Murray Hill, NJ.
Arun Lakhotia, Constructing call multigraphs using dependence graphs, Proceedings of the 20th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.273-284, March 1993, Charleston, South Carolina, United States[doi>10.1145/158511.158647]
LESK, M. 1975. Lex--A lexical analyzer generator. Tech. Rep. 39. AT&T Bell Laboratories, Inc., Murray Hill, NJ.
MARICK, B. 1994. Craft of Software Testing. Prentice-Hall, Inc., Upper Saddle River, NJ.
H. A. MÃ¼ller , K. Klashinsky, Rigi-A system for programming-in-the-large, Proceedings of the 10th international conference on Software engineering, p.80-86, April 11-15, 1988, Singapore
Gail C. Murphy , David Notkin, Lightweight lexical source model extraction, ACM Transactions on Software Engineering and Methodology (TOSEM), v.5 n.3, p.262-292, July 1996[doi>10.1145/234426.234441]
Gail C. Murphy , David Notkin , Erica S.-C. Lan, An empirical study of static call graph extractors, Proceedings of the 18th international conference on Software engineering, p.90-99, March 25-29, 1996, Berlin, Germany
Eugene M. Myers, A precise inter-procedural data flow algorithm, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.219-230, January 26-28, 1981, Williamsburg, Virginia[doi>10.1145/567532.567556]
Steven P. Reiss, The  Field Programming Environment: A Friendly Integrated Environment for Learning and Development, Kluwer Academic Publishers, Norwell, MA, 1995
RYDER, B. G. 1979. Constructing the call graph of a program. IEEE Trans. Softw. Eng. SE-5, 3 (May), 216-226.
