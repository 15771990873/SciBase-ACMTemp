ALLEN, F. E. 1975. Interprocedural analysis and the information derived by it. Lecture Notes in Computer Science 23. Programming Methodology, 29}.-321.
ALLEN, F. E. 1974. Interprocedural data flow analysis. In Proceedings of the IFIP Congress 74. North-Holland Publishing Co., Amsterdam, Holland, 398-492.
John P. Banning, An efficient way to find the side effects of procedure calls and the aliases of variables, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.29-41, January 29-31, 1979, San Antonio, Texas[doi>10.1145/567752.567756]
Jeffrey M. Barth, A practical interprocedural data flow analysis algorithm, Communications of the ACM, v.21 n.9, p.724-736, Sept. 1978[doi>10.1145/359588.359596]
D. Callahan, The program summary graph and flow-sensitive interprocedual data flow analysis, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.47-56, June 20-24, 1988, Atlanta, Georgia, United States[doi>10.1145/53990.53995]
Keith D. Cooper, Analyzing aliases of reference formal parameters, Proceedings of the 12th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, p.281-290, January 14-16, 1985, New Orleans, Louisiana, United States[doi>10.1145/318593.318658]
K. D. Cooper , K. Kennedy, Fast interprocedual alias analysis, Proceedings of the 16th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.49-59, January 11-13, 1989, Austin, Texas, United States[doi>10.1145/75277.75282]
K. D. Cooper , K. Kennedy, Interprocedural side-effect analysis in linear time, Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation, p.57-66, June 20-24, 1988, Atlanta, Georgia, United States[doi>10.1145/53990.53996]
Keith D. Cooper , Ken Kennedy, Efficient computation of flow insensitive interprocedural summary information, ACM SIGPLAN Notices, v.19 n.6, p.247-258, June 1984[doi>10.1145/502949.502898]
István Forgács, The Precise Determination of Definition-Use Pairs in the Interprocedural Case, Proceedings of the IFIP 12th World Computer Congress on Algorithms, Software, Architecture - Information Processing '92, Volume 1, p.200-209, September 07-11, 1992
Mary Jean Harrold , Mary Lou Soffa, Selecting and Using Data for Integration Testing, IEEE Software, v.8 n.2, p.58-65, March 1991[doi>10.1109/52.73750]
HARROLD, M. J. AND SOFFA, M. L. 1990. Computation of interprocedural definition and use dependencies. In Proceedings of the International Conference on Computer Languages. CS Press, Los Alamitos, Calif., 297 306.
Matthew S. Hecht, Flow Analysis of Computer Programs, Elsevier Science Inc., New York, NY, 1977
Susan Horwitz , Thomas Reps , David Binkley, Interprocedural slicing using dependence graphs, ACM Transactions on Programming Languages and Systems (TOPLAS), v.12 n.1, p.26-60, Jan. 1990[doi>10.1145/77606.77608]
KENNEDY, K. 1981. A survey of data flow analysis techniques. In Program Flow Analys~s: Theory and Applications (Eds.: Muchnick, S. S. and Jones, N. D.), Prentice-Hall, Englewood Cliffs, N.J., 1-54.
LOMET, D. B. 1977. Data flow analysis in the presence of procedure calls. IBM J. Res. Dev., (Nov.), 559-571.
Eugene M. Myers, A precise inter-procedural data flow algorithm, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, p.219-230, January 26-28, 1981, Williamsburg, Virginia[doi>10.1145/567532.567556]
L. L. Pollock , M. L. Soffa, An Incremental Version of Iterative Data Flow Analysis, IEEE Transactions on Software Engineering, v.15 n.12, p.1537-1549, December 1989[doi>10.1109/32.58766]
Barbara G. Ryder , Marvin C. Paull, Incremental data-flow analysis algorithms, ACM Transactions on Programming Languages and Systems (TOPLAS), v.10 n.1, p.1-50, Jan. 1988[doi>10.1145/42192.42193]
RYDER, B. G. AND PANDE, H. D. 1988. The interprocedural structure of C programs: An empirical study. Tech. Rep. LCSR-TR-99. Rutgers Univ.
TArtAN, R. E. 1972. Depth-first search and linear graph algorithms. SIAM J. Comput., 1, 2, (June), 146-160.
ToczKI, J., GYIMOTHY, T., HORV~TH, T. AND KOCSIS, F. 1988. Automatic software generation in practice new features in the PROFLP system. In Proceedings of 2nd Meeting of WG23. (Tallinn), 103-119.
