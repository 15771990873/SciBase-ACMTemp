Cloud service providers enable tenants to elastically scale resources to meet their demands. While running cloud applications, a tenant aiming to minimize cost is often challenged with crucial tradeoffs. For instance, upon each arrival of a query, a Web application can either choose to pay for CPU to compute the response fresh, or pay for cache storage to store the response to reduce future compute costs. The Ski-Rental problem abstracts such scenarios where a tenant is faced with a to-rent-or-to-buy tradeoff; in its basic form, a skier should choose between renting or buying a set of skis without knowing the number of days she will be skiing. In the multislope version of the Ski-Rental problem, the skier can choose among multiple services that differ in their buying and renting prices. In this paper, we introduce a variant of the classical Ski-Rental problem in which we assume that the skier knows the first (or second) moment of the distribution of the number of ski days in a season. We also extend the classical multislope Ski-Rental problem, where the skier can choose among multiple services, to this setting. We demonstrate that utilizing this information leads to achieving the best worst-case expected competitive ratio performance. Our method yields a new class of randomized algorithms that provide arrivals-distribution-free performance guarantees. Simulations illustrate that our scheme exhibits robust average-cost performance that combines the best of the well-known deterministic and randomized schemes previously proposed to tackle the Ski-Rental problem.