As communication networks provide newer services, signaling is becoming more and more compute intensive compared to present day networks. It is known that under overload conditions, the call throughput (goodput) and the network revenue drops to zero even when transport resources are available. A distributed overload control algorithm for delay-bounded call setup is proposed in this paper. The end-to-end delay bound is budgeted among the switching nodes involved in call setup, and these nodes apply a local overload control with a deterministic delay threshold and drop call requests experiencing higher delays. This algorithm does not depend on feedback on network conditions and makes use of only parameters that can be instrumented locally by the switching node. Using anM/M/1 queueing model with first-in-first-out (FIFO) service discipline at a switching node, two optimized control schemes are considered for local overload control and compared their performance through analysis: one with arrival rate limit and the other with buffer size limit. Though both the schemes minimize the unproductive call processing at heavy load, the latter is found to yield higher call throughput and lower average call setup delays compared to the former. Also, the buffer size required for the scheme with buffer size limit is typically small and call throughput close to the server capacity can be achieved during overload. The performance of the distributed overload control algorithm in a network is evaluated through simulation experiments, using the scheme with buffer size limit for the local overload control. It shows that the average end-to-end delay could be much less than the end-to-end delay bound, providing room for overprovisioning of the delay bounds. The tradeoff between the number of nodes, call throughput, and average end-to-end delay needs to be considered while deciding the route budgeting the end-to-end delay bound among different nodes along the route. These performance results are expected to serve as lower bounds to more sophisticated local call rejection mechanisms such as push-out or time-out along with a last-in-first-out (LIFO) service discipline.