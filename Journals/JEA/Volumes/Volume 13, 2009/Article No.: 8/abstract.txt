We consider single and multiple string matching in small space and optimal average time. Our algorithm is based on the combination of compressed self-indexes and Backward-DAWG-Matching (BDM) algorithm. We consider several implementation techniques having different space/time and implementation complexity trade-offs. The experimental results show that our approach has much smaller space requirements than BDM, while being much faster and easier to implement. We show that some of our techniques can boost the search speed of compressed self-indexes as well, using a small amount of additional space.