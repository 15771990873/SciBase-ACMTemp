BLUM, M., FLOYD, R. W., PRATT, V., RIVEST, R. L., AND TARJAN, R. E. 1973. Time bounds for selection.Journal of Computer and System Sciences 7, 448-461.
S. Carlsson, A note on HEAPSORT, The Computer Journal, v.35 n.4, p.410-411, Aug. 1992[doi>10.1093/comjnl/35.4.410]
R. Fadel , K. V. Jakobsen , J. Katajainen , J. Teuhola, Heaps and heapsort on secondary storage, Theoretical Computer Science, v.220 n.2, p.345-362, June 17, 1999[doi>10.1016/S0304-3975(99)00006-7]
Robert W. Floyd, Algorithm 245: Treesort, Communications of the ACM, v.7 n.12, p.701, Dec. 1964[doi>10.1145/355588.365103]
Robert W. Floyd , Ronald L. Rivest, Expected time bounds for selection, Communications of the ACM, v.18 n.3, p.165-172, March 1975[doi>10.1145/360680.360691]
Torben Hagerup, Sorting and Searching on the Word RAM, Proceedings of the 15th Annual Symposium on Theoretical Aspects of Computer Science, p.366-398, February 25-27, 1998
Ryan Hayward , Colin McDiarmid, Average case analysis of heap building by repeated insertion, Journal of Algorithms, v.12 n.1, p.126-153, March 1991[doi>10.1016/0196-6774(91)90027-V]
John L. Hennessy , David A. Patterson, Computer architecture (2nd ed.): a quantitative approach, Morgan Kaufmann Publishers Inc., San Francisco, CA, 1996
C. A. R. Hoare, Algorithm 65: find, Communications of the ACM, v.4 n.7, p.321-322, July 1961[doi>10.1145/366622.366647]
HOROWlTZ, E., SAHNI, S., AND RAJASEKARAN, S. 1998.Computer Algorithms. Computer Science Press, New York.
Jyrki Katajainen , Jesper Larsson Träff, A Meticulous Analysis of Mergesort Programs, Proceedings of the Third Italian Conference on Algorithms and Complexity, p.217-228, March 12-14, 1997
Brian W. Kernighan , Dennis M. Ritchie, The C programming language, Prentice Hall Press, Upper Saddle River, NJ, 1989
P. Kirschenhofer , H. Prodinger , C. Martínez, Analysis of Hoare's FIND algorithm with median-of-three partition, Random Structures & Algorithms, v.10 n.1-2, p.143-156, Jan.–March 1997[doi>10.1002/(SICI)1098-2418(199701/03)10:1/2<143::AID-RSA7>3.0.CO;2-V]
Donald E. Knuth, The art of computer programming, volume 1 (3rd ed.): fundamental algorithms, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 1997
Donald E. Knuth, The art of computer programming,  volume 3: (2nd ed.) sorting and searching, Addison Wesley Longman Publishing Co., Inc., Redwood City, CA, 1998
Anthony LaMarca , Richard Ladner, The influence of caches on the performance of heaps, Journal of Experimental Algorithmics (JEA), 1, p.4-es, 1996[doi>10.1145/235141.235145]
Anthony LaMarca , Richard E. Ladner, The influence of caches on the performance of sorting, Journal of Algorithms, v.31 n.1, p.66-104, April 1999[doi>10.1006/jagm.1998.0985]
C. J. McDiarmid , B. A. Reed, Building heaps fast, Journal of Algorithms, v.10 n.3, p.352-365, September 1989[doi>10.1016/0196-6774(89)90033-3]
Bernard M. E. Moret , Henry D. Shapiro, Algorithms from P to NP (vol. 1): design and efficiency, Benjamin-Cummings Publishing Co., Inc., Redwood City, CA, 1991
John C. Reynolds, The discoveries of continuations, Lisp and Symbolic Computation, v.6 n.3-4, p.233-248, Nov. 1993[doi>10.1007/BF01019459]
ROBISON, A.D. 1996. The abstraction penalty for small objects in C++. InProceedings of the 2nd Parallel Object-Oriented Methods and Applications Conference(1996). Available at http://www.acl.lanl.gov/Pooma96/abstracts/robison.hmtl.
Alan Jay Smith , Rafael H. Saavedra, Measuring Cache and TLB Performance and Their Effect on Benchmark Runtimes, IEEE Transactions on Computers, v.44 n.10, p.1223-1235, October 1995[doi>10.1109/12.467697]
SANDERS, P. 1999. Fast priority queues for cached memory. InProceedings of the 1st Workshop on Algorithm Engineering and Experimentation, Volume 1619 ofLecture Notes in Computer Science(1999), pp. 312-327. Springer-Verlag, Berlin/Heidelberg.
SEDGEWICK, R. 1977. The analysis of Quicksort programs.Acta Informatica 7, 327-355.
Robert Sedgewick, Implementing Quicksort programs, Communications of the ACM, v.21 n.10, p.847-857, Oct. 1978[doi>10.1145/359619.359631]
Jop F. Sibeyn, External selection, Proceedings of the 16th annual conference on Theoretical aspects of computer science, March 04-06, 1999, Trier, Germany
Daniel D. Sleator , Robert E. Tarjan, Amortized efficiency of list update and paging rules, Communications of the ACM, v.28 n.2, p.202-208, Feb. 1985[doi>10.1145/2786.2793]
SPORK, M. 1999. Design and analysis of cache-conscious programs. Master's thesis, Department of Computing, University of Copenhagen, Copenhagen. Available at http: //www.diku.dk/research-groups/performance-engineering/.
Bjarne Stroustrup, The  C++ Programming Language, Third Edition, Addison-Wesley Longman Publishing Co., Inc., Boston, MA, 1997
VETTER, S. ET AL. 1998.Power3: Introduction and Tuning Guide. IBM Corporation, International Technical Support Organization, Armonk. Available at http://www.redbooks. ibm. com/.
Ingo Wegener, The worst case complexity of McDiarmid and Reed's variant of BOTTOM-UP HEAPSORT is less thannlogn+ 1.1n, Information and Computation, v.97 n.1, p.86-96, March 1992[doi>10.1016/0890-5401(92)90005-Z]
WEGNER, L. M. 1985. Quicksort for equal keys.IEEE Transactions on Computers C-34, 362-367.
WILLIAMS, J. W. J. 1964. Algorithm 232: Heapsort.Communications of the ACM 7, 347- 348.
